@import "variables";
@import "~bootstrap/scss/button-group";

@mixin button-variant(
  $background, $border, $hover-background: darken($background, 7.5%),
  $hover-border: darken($border, 10%), $active-background: darken($background, 10%),
  $active-border: darken($border, 12.5%), $color: color-yiq($background), $hover-color: color-yiq($hover-background),
  $active-color: color-yiq($active-background)
) {
  color: $color;

  @include gradient-bg($background);

  border-color: $border;

  @include box-shadow(var(--pgn-btn-box-shadow-base));

  @include hover {
    color: $hover-color;

    @include gradient-bg($hover-background);

    border-color: $hover-border;
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    color: color-yiq($background);
    background-color: $background;
    border-color: $border;

    // Remove CSS gradients if they're enabled
    @if $enable-gradients {
      background-image: none;
    }
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.dropdown-toggle {
    color: $active-color;
    background-color: $active-background;

    @if $enable-gradients {
      background-image: none; // Remove the gradient for the pressed/active state
    }

    border-color: $active-border;
  }
}

// OVERRIDE FROM BOOTSTRAP
// We do this to better control active and focus states.
@mixin button-outline-variant(
  $color, $color-hover: color-yiq($color), $active-background: $color, $active-border: $color
) {
  color: $color;
  border-color: $color;

  @include hover {
    color: $color-hover;
    background-color: $active-background;
    border-color: $active-border;
  }

  &.disabled,
  &:disabled {
    color: $color;
    background-color: transparent;
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.dropdown-toggle {
    color: color-yiq($active-background);
    background-color: $active-background;
    border-color: $active-border;
  }
}

// OVERRIDE FROM BOOTSTRAP
// No changes made. We do this to keep all button related mixins together,
//
// Button sizes
@mixin button-size($padding-y, $padding-x, $font-size, $line-height, var(--pgn-border-radius-base)) {
  padding: $padding-y $padding-x;

  @include font-size($font-size);

  line-height: $line-height;

  // Manually declare to provide an override to the browser default
  @include border-radius(var(--pgn-border-radius-base), 0);
}

// ------------------------
// BELOW ARE EDX EXTENSIONS
// ------------------------

//
// A new variant of button (inverse)
//
@mixin button-inverse-variant(
  $color, $background: color-yiq($color), $active-background: $color, $active-border: $color
) {
  color: $color;
  border-color: transparent;
  background-color: $background;

  @include hover {
    color: darken($color, 7.5%);
    background-color: darken($background, 7.5%);
    border-color: transparent;
  }

  &.disabled,
  &:disabled {
    color: $color;
    background-color: transparent;
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.dropdown-toggle {
    color: darken($color, 10%);
    background: #EEEEEE;
  }
}

@mixin button-focus($ring-color) {
  &.focus,
  &:focus {
    position: relative;
    outline: 0;
    box-shadow: none;

    $distance: var(--pgn-btn-focus-width) + var(--pgn-btn-focus-gap);
    $distance-include-btn-border: $distance + var(--pgn-btn-border-width);

    &::before {
      content: "";
      position: absolute;
      top: -1 * $distance-include-btn-border;
      right: -1 * $distance-include-btn-border;
      bottom: -1 * $distance-include-btn-border;
      left: -1 * $distance-include-btn-border;
      border: solid var(--pgn-btn-focus-width) $ring-color;
      border-radius: calc(#{var(--pgn-btn-border-radius-base)} + #{$distance});
    }

    &.btn-lg::before {
      border-radius: calc(#{var(--pgn-btn-border-radius-base)-lg} + #{$distance});
    }

    &.btn-sm::before {
      border-radius: calc(#{var(--pgn-btn-border-radius-base)-sm} + #{$distance});
    }

    &:active,
    &.active {
      &::before {
        opacity: .75;
      }
    }

    // Disabled buttons should not have focus rings
    &:disabled,
    &.disabled {
      &::before {
        display: none;
      }
    }
  }
}

//
// Override Bootstrap's button definition.
// We do this to get more control over focus
// and hover states, as well as to define
// an extra button variant: btn-inverse-${color}
//

//
// Base styles
//

.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-family: var(--pgn-btn-font-family);
  font-weight: var(--pgn-btn-font-width);
  color: var(--pgn-body-color);
  text-align: center;
  vertical-align: middle;
  user-select: none;
  background-color: transparent;
  border: var(--pgn-btn-border-width) solid transparent;

  @include button-size(var(--pgn-btn-padding-y-base), var(--pgn-btn-padding-x-base), var(--pgn-btn-font-size-base), var(--pgn-btn-line-height-base), var(--pgn-btn-border-radius-base));
  @include transition(var(--pgn-btn-transition));

  @include hover {
    color: var(--pgn-body-color);
    text-decoration: none;
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    opacity: var(--pgn-btn-disabled-opacity);
  }

  // Button Icon Sizes

  .btn-icon-before {
    margin-inline-end: .5rem;
    margin-left: -.25em;

    [dir="rtl"] & {
      margin-right: -.25em;
      margin-left: .5rem;
    }
  }

  .btn-icon-after {
    margin-inline-start: .5rem;
    margin-right: -.25em;

    [dir="rtl"] & {
      margin-right: .5rem;
      margin-left: -.25em;
    }
  }
}

// Future-proof disabling of clicks on `<a>` elements
a.btn.disabled,
fieldset:disabled a.btn {
  pointer-events: none;
}

//
// Alternate buttons
//

@each $color, $value in $theme-colors {
  .btn-#{$color} {
    $background: $value;
    $border: $value;

    $hover-background: theme-color($color, "hover");
    $hover-border: theme-color($color, "hover");
    $active-background: theme-color($color, "active");
    $active-border: theme-color($color, "active");

    // Defaults
    $hover-background: darken($background, 7.5%) !default;
    $hover-border: darken($border, 10%) !default;
    $active-background: darken($background, 10%) !default;
    $active-border: darken($border, 12.5%) !default;

    @include button-variant(
      $background,
      $border,
      $hover-background,
      $hover-border,
      $active-background,
      $active-border
    );
    @include button-focus(theme-color($color, "focus"));
  }

  .btn-outline-#{$color} {
    $text-and-border: $value;

    $color-hover: theme-color($color, "hover");
    $active-background: theme-color($color, "background");
    $active-border: theme-color($color, "active");

    // Defaults
    $color-hover: color-yiq($value) !default;
    $active-background: $value !default;
    $active-border: $value !default;

    @include button-outline-variant(
      $text-and-border,
      $color-hover,
      $active-background,
      $active-border,
    );
    @include button-focus(theme-color($color, "focus"));
  }

  .btn-inverse-#{$color} {
    $text: $value;

    $active-background: theme-color($color, "background");
    $active-border: theme-color($color, "active");

    // Defaults
    $background: color-yiq($value) !default;
    $active-background: $value !default;
    $active-border: $value !default;

    @include button-inverse-variant(
      $text,
      $background,
      $active-background,
      $active-border,
    );
    @include button-focus(var(--pgn-color-white));
  }

  .btn-inverse-outline-#{$color} {
    $text-and-border: var(--pgn-color-white);

    $color-hover: theme-color($color, "hover");
    $active-background: theme-color($color, "background");
    $active-border: transparent;

    // Defaults
    $color-hover: color-yiq($value) !default;
    $active-background: $value !default;
    $active-border: $value !default;

    @include button-outline-variant(
      $text-and-border,
      $color-hover,
      $active-background,
      $active-border,
    );
    @include button-focus(var(--pgn-color-white));
  }
}

//
// Tertiary buttons
//

.btn-tertiary {
  $background: var(--pgn-btn-tertiary-bg-base);
  $border: transparent;
  $hover-background: var(--pgn-btn-tertiary-bg-hover);
  $hover-border: transparent;
  $active-background: var(--pgn-btn-tertiary-bg-active);
  $active-border: transparent;

  @include button-variant(
    $background,
    $border,
    $hover-background,
    $hover-border,
    $active-background,
    $active-border,
    var(--pgn-btn-tertiary-color),
    var(--pgn-btn-tertiary-color),
    var(--pgn-btn-tertiary-color)
  );
  @include button-focus(theme-color("primary", "focus"));
}

.btn-inverse-tertiary {
  $background: var(--pgn-btn-tertiary-inverse-bg-base);
  $border: transparent;
  $hover-background: var(--pgn-btn-tertiary-inverse-bg-hover);
  $hover-border: transparent;
  $active-background: var(--pgn-btn-tertiary-inverse-bg-active);
  $active-border: transparent;

  @include button-variant(
    $background,
    $border,
    $hover-background,
    $hover-border,
    $active-background,
    $active-border,
    var(--pgn-btn-tertiary-inverse-color),
    var(--pgn-btn-tertiary-inverse-color),
    var(--pgn-btn-tertiary-inverse-color)
  );
  @include button-focus(var(--pgn-color-white));
}

//
// Link buttons
//

// Make a button look and behave like a link
.btn-link {
  font-weight: var(--pgn-font-weight-normal);
  color: var(--pgn-link-color);
  text-decoration: var(--pgn-link-decoration);

  @include hover {
    color: var(--pgn-link-hover-color);
    text-decoration: var(--pgn-link-hover-decoration);
  }

  &:focus,
  &.focus {
    text-decoration: var(--pgn-link-hover-decoration);
    box-shadow: none;
  }

  &:disabled,
  &.disabled {
    color: var(--pgn-btn-disabled-link-color);
    pointer-events: none;
  }

  // No need for an active state here
}

.btn-light,
.btn-dark {
  @include button-focus(theme-color("primary", "focus"));
}

//
// Button Sizes
//

.btn-lg {
  @include button-size(
    var(--pgn-btn-padding-y-base)-lg, var(--pgn-btn-padding-x-base)-lg, var(--pgn-btn-font-size-base)-lg, var(--pgn-btn-line-height-base)-lg, var(--pgn-btn-border-radius-base)-lg
  );
}

.btn-sm {
  @include button-size(
    var(--pgn-btn-padding-y-base)-sm, var(--pgn-btn-padding-x-base)-sm, var(--pgn-btn-font-size-base)-sm, var(--pgn-btn-line-height-base)-sm, var(--pgn-btn-border-radius-base)-sm
  );
}

//
// Block button
//

.btn-block {
  display: flex;
  width: 100%;

  // Vertically space out multiple block buttons
  + .btn-block {
    margin-top: var(--pgn-btn-block-spacing-y);
  }
}

.btn-inline {
  line-height: calc(#{var(--pgn-line-height-base)}em - #{2 * var(--pgn-btn-border-width)});
  font-size: inherit;
  vertical-align: bottom;
  padding: 0 .25em;
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.btn-block {
    width: 100%;
  }
}

[dir="rtl"] .btn-group > .btn:not(:last-child):not(.dropdown-toggle),
[dir="rtl"] .btn-group > .btn-group:not(:last-child) > .btn {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

[dir="rtl"] .btn-group > .btn:not(:first-child),
[dir="rtl"] .btn-group > .btn-group:not(:first-child) > .btn {
  border-radius: var(--pgn-btn-border-radius-base) 0 0 var(--pgn-btn-border-radius-base);
}

[dir="rtl"] .btn-group > .btn:first-child,
[dir="rtl"] .btn-group > .btn-group:first-child > .btn {
  border-top-right-radius: var(--pgn-btn-border-radius-base);
  border-bottom-right-radius: var(--pgn-btn-border-radius-base);
}
