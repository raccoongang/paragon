{"version":3,"sources":["../../src/Fieldset/index.jsx"],"names":["React","PropTypes","classNames","newId","ValidationMessage","Variant","inputProps","legend","oneOfType","string","element","isRequired","children","node","className","id","isValid","bool","invalidMessage","variant","shape","status","oneOf","Object","keys","map","k","variantIconDescription","defaultProps","undefined","INFO","Fieldset","props","state","errorId","getVariantClassName","nextProps","prevState","Component","propTypes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport newId from '../utils/newId';\n\nimport ValidationMessage from '../ValidationMessage/index';\nimport Variant from '../utils/constants';\n\nconst inputProps = {\n  legend: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n\n  children: PropTypes.node,\n  className: PropTypes.string,\n  id: PropTypes.string,\n  isValid: PropTypes.bool,\n  invalidMessage: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  variant: PropTypes.shape({\n    status: PropTypes.oneOf(Object.keys(Variant.status).map(k => Variant.status[k])),\n  }),\n  variantIconDescription: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n};\n\nconst defaultProps = {\n  children: null,\n  className: undefined,\n  id: '',\n  isValid: true,\n  invalidMessage: '',\n  variant: {\n    status: Variant.status.INFO,\n  },\n  variantIconDescription: '',\n};\n\nclass Fieldset extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { id: props.id || newId('fieldset') };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.id !== prevState.id) {\n      return { id: nextProps.id || newId('fieldset') };\n    }\n\n    return null;\n  }\n\n  getVariantClassName() {\n    const { variant } = this.props;\n    let className;\n\n    switch (variant.status) {\n      case Variant.status.INFO:\n        className = 'is-invalid-nodanger';\n        break;\n      default:\n        break;\n    }\n\n    return className;\n  }\n\n  render() {\n    const {\n      className,\n      children,\n      variantIconDescription,\n      invalidMessage,\n      isValid,\n      legend,\n      variant,\n    } = this.props;\n    const errorId = `error-${this.state.id}`;\n    return (\n      <div className=\"paragon-fieldset\">\n        <fieldset\n          className={classNames(\n            'form-control',\n            'p-3',\n            { 'is-invalid': !isValid },\n            this.getVariantClassName(),\n            className,\n          )}\n          aria-describedby={errorId}\n        >\n          <legend className=\"p-1\">{legend}</legend>\n          {children}\n        </fieldset>\n        <ValidationMessage\n          id={errorId}\n          isValid={isValid}\n          invalidMessage={invalidMessage}\n          variant={variant}\n          variantIconDescription={variantIconDescription}\n        />\n      </div>\n    );\n  }\n}\n\nFieldset.propTypes = inputProps;\nFieldset.defaultProps = defaultProps;\n\nexport default Fieldset;\n"],"file":"index.js"}