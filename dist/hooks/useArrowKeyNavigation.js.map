{"version":3,"sources":["../../src/hooks/useArrowKeyNavigation.js"],"names":["useRef","useEffect","handleEnter","event","currentIndex","activeElement","click","preventDefault","handleArrowKey","availableElements","focus","nextElement","key","length","handleEvents","parentNode","selectors","includes","document","contains","querySelectorAll","Array","from","findIndex","availableElement","useArrowKeyNavigation","props","eventHandler","current","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import { useRef, useEffect } from 'react';\n\n/**\n * A react hook to enable arrow key navigation on a component.\n */\n\nfunction handleEnter({ event, currentIndex, activeElement }) {\n  if (currentIndex === -1) { return; }\n  activeElement.click();\n  event.preventDefault();\n}\n\nfunction handleArrowKey({ event, currentIndex, availableElements }) {\n  // If the focus isn't in the container, focus on the first thing\n  if (currentIndex === -1) { availableElements[0].focus(); }\n\n  // Move the focus up or down. Wrap around ends of list.\n  let nextElement;\n\n  if (event.key === 'ArrowDown' || event.key === 'ArrowRight') {\n    nextElement = availableElements[(currentIndex + 1) % availableElements.length];\n  }\n  if (event.key === 'ArrowUp' || event.key === 'ArrowLeft') {\n    nextElement = currentIndex - 1 < 0\n      ? availableElements[currentIndex - 1 + availableElements.length]\n      : availableElements[currentIndex - 1];\n  }\n  if (event.key === 'End') {\n    nextElement = availableElements[availableElements.length - 1];\n  }\n  if (event.key === 'Home') {\n    [nextElement] = availableElements;\n  }\n\n  // eslint-disable-next-line no-unused-expressions\n  nextElement && nextElement.focus();\n  event.preventDefault();\n}\n\n/**\n * Implement arrow key navigation for the given parentNode\n */\nfunction handleEvents({\n  event,\n  parentNode,\n  selectors = 'a,button,input',\n}) {\n  if (!parentNode) { return; }\n\n  const { key } = event;\n  if (!['ArrowUp', 'ArrowDown', 'ArrowRight', 'ArrowLeft', 'Enter', 'Home', 'End'].includes(key)) {\n    return;\n  }\n\n  const { activeElement } = document;\n\n  // If we're not inside the container, don't do anything\n  if (!parentNode.contains(activeElement)) { return; }\n\n  // Get the list of elements we're allowed to scroll through\n  const availableElements = parentNode.querySelectorAll(selectors);\n\n  // No elements are available to loop through.\n  if (!availableElements.length) { return; }\n\n  // Which index is currently selected\n  const currentIndex = Array.from(availableElements).findIndex(\n    (availableElement) => availableElement === activeElement,\n  );\n\n  if (key === 'Enter') {\n    handleEnter({ event, currentIndex, activeElement });\n  }\n  handleArrowKey({ event, currentIndex, availableElements });\n}\n\nexport default function useArrowKeyNavigation(props) {\n  const { selectors } = props || {};\n  const parentNode = useRef();\n\n  useEffect(() => {\n    const eventHandler = (event) => {\n      handleEvents({ event, parentNode: parentNode.current, selectors });\n    };\n    document.addEventListener('keydown', eventHandler);\n    return () => document.removeEventListener('keydown', eventHandler);\n  }, []);\n\n  return parentNode;\n}\n"],"file":"useArrowKeyNavigation.js"}