{"version":3,"sources":["../../src/hooks/useIsVisible.jsx"],"names":["useRef","useState","useEffect","useIsVisible","defaultIsVisible","sentinelRef","isVisible","setIsVisible","current","observer","IntersectionObserver","entries","forEach","isIntersecting","observe","disconnect","e","isReferenceError","ReferenceError"],"mappings":";;;;;;;;;;;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,EAA2BC,SAA3B,QAA4C,OAA5C;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAA6B;AAAA,MAA5BC,gBAA4B,uEAAT,IAAS;AAChD,MAAMC,WAAW,GAAGL,MAAM,EAA1B;;AACA,kBAAkCC,QAAQ,CAACG,gBAAD,CAA1C;AAAA;AAAA,MAAOE,SAAP;AAAA,MAAkBC,YAAlB;;AAEAL,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI;AACF,UAAIG,WAAW,CAACG,OAAhB,EAAyB;AACvB,YAAMC,QAAQ,GAAG,IAAIC,oBAAJ,CAAyB,UAACC,OAAD,EAAa;AACrDA,UAAAA,OAAO,CAACC,OAAR,CAAgB,gBAAwB;AAAA,gBAArBC,cAAqB,QAArBA,cAAqB;AACtCN,YAAAA,YAAY,CAACM,cAAD,CAAZ;AACD,WAFD;AAGD,SAJgB,EAId,EAJc,CAAjB;AAKAJ,QAAAA,QAAQ,CAACK,OAAT,CAAiBT,WAAW,CAACG,OAA7B;AACA,eAAO,YAAM;AACXC,UAAAA,QAAQ,CAACM,UAAT;AACD,SAFD;AAGD;AACF,KAZD,CAYE,OAAOC,CAAP,EAAU;AACV,UAAMC,gBAAgB,GAAGD,CAAC,YAAYE,cAAtC;;AACA,UAAI,CAACD,gBAAL,EAAuB;AACrB,cAAMD,CAAN;AACD,OAJS,CAKV;;AACD;;AACD,WAAO,YAAM,CAAE,CAAf;AACD,GArBQ,EAqBN,CAACX,WAAW,CAACG,OAAb,CArBM,CAAT;AAuBA,SAAO,CAACF,SAAD,EAAYD,WAAZ,CAAP;AACD,CA5BD;;AA8BA,eAAeF,YAAf","sourcesContent":["import { useRef, useState, useEffect } from 'react';\n\nconst useIsVisible = (defaultIsVisible = true) => {\n  const sentinelRef = useRef();\n  const [isVisible, setIsVisible] = useState(defaultIsVisible);\n\n  useEffect(() => {\n    try {\n      if (sentinelRef.current) {\n        const observer = new IntersectionObserver((entries) => {\n          entries.forEach(({ isIntersecting }) => {\n            setIsVisible(isIntersecting);\n          });\n        }, {});\n        observer.observe(sentinelRef.current);\n        return () => {\n          observer.disconnect();\n        };\n      }\n    } catch (e) {\n      const isReferenceError = e instanceof ReferenceError;\n      if (!isReferenceError) {\n        throw e;\n      }\n      // Do nothing if an intersection observer can't be created.\n    }\n    return () => {};\n  }, [sentinelRef.current]);\n\n  return [isVisible, sentinelRef];\n};\n\nexport default useIsVisible;\n"],"file":"useIsVisible.js"}