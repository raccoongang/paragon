{"version":3,"sources":["../../src/Sticky/index.jsx"],"names":["React","useLayoutEffect","useState","PropTypes","classNames","POSITION_VARIANTS","Sticky","forwardRef","ref","position","children","offset","className","rest","isSticky","setIsSticky","defaultRef","useRef","resolvedRef","current","elementStyles","window","getComputedStyle","elementOffset","elementWithOffset","parseInt","observer","IntersectionObserver","entry","intersectionRatio","threshold","rootMargin","observe","unobserve","propTypes","node","isRequired","oneOf","oneOfType","number","string","defaultProps","undefined"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,eAAhB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,IAAMC,iBAAiB,GAAG,CACxB,KADwB,EAExB,QAFwB,CAA1B;AAKA,IAAMC,MAAM,gBAAGN,KAAK,CAACO,UAAN,CAAiB,gBAM7BC,GAN6B,EAMrB;AAAA,MALTC,QAKS,QALTA,QAKS;AAAA,MAJTC,QAIS,QAJTA,QAIS;AAAA,MAHTC,MAGS,QAHTA,MAGS;AAAA,MAFTC,SAES,QAFTA,SAES;AAAA,MADNC,IACM;;AACT,kBAAgCX,QAAQ,CAAC,KAAD,CAAxC;AAAA;AAAA,MAAOY,QAAP;AAAA,MAAiBC,WAAjB;;AACA,MAAMC,UAAU,GAAGhB,KAAK,CAACiB,MAAN,EAAnB;AACA,MAAMC,WAAW,GAAGV,GAAG,IAAIQ,UAA3B,CAHS,CAKT;;AACAf,EAAAA,eAAe,CAAC,YAAM;AACpB,QAAIiB,WAAW,CAACC,OAAhB,EAAyB;AACvB;AACA;AACA,UAAMC,aAAa,GAAGC,MAAM,CAACC,gBAAP,CAAwBJ,WAAW,CAACC,OAApC,CAAtB;AACA,UAAMI,aAAa,GAAGH,aAAa,CAACX,QAAQ,IAAI,KAAb,CAAnC,CAJuB,CAKvB;AACA;AACA;;AACA,UAAMe,iBAAiB,GAAG,KAAKC,QAAQ,CAACF,aAAD,EAAgB,EAAhB,CAAR,IAA+B,CAApC,CAA1B;AACA,UAAMG,QAAQ,GAAG,IAAIC,oBAAJ,CACf;AAAA;AAAA,YAAEC,KAAF;;AAAA,eAAab,WAAW,CAACa,KAAK,CAACC,iBAAN,GAA0B,CAA3B,CAAxB;AAAA,OADe,EAEf;AACEC,QAAAA,SAAS,EAAE,CAAC,CAAD,CADb;AAEEC,QAAAA,UAAU,EAAEtB,QAAQ,KAAK,QAAb,sBACIe,iBADJ,yBAEJA,iBAFI;AAFd,OAFe,CAAjB;AASAE,MAAAA,QAAQ,CAACM,OAAT,CAAiBd,WAAW,CAACC,OAA7B;AAEA,aAAO,YAAM;AACXO,QAAAA,QAAQ,CAACO,SAAT,CAAmBf,WAAW,CAACC,OAA/B;AACD,OAFD;AAGD;AACF,GAzBc,EAyBZ,EAzBY,CAAf;AA2BA,sBACE;AACE,IAAA,SAAS,EAAEf,UAAU,CACnB,aADmB,wBAEJK,QAAQ,IAAI,KAFR,GAGnBE,MAAM,iCAA0BA,MAA1B,IAAqC,EAHxB,EAInB;AAAE,4BAAsBG;AAAxB,KAJmB,EAKnBF,SALmB,CADvB;AAQE,IAAA,GAAG,EAAEM;AARP,KASML,IATN,GAWGH,QAXH,CADF;AAeD,CAtDc,CAAf;AAwDAJ,MAAM,CAAC4B,SAAP,GAAmB;AACjB;AACAxB,EAAAA,QAAQ,EAAEP,SAAS,CAACgC,IAAV,CAAeC,UAFR;;AAGjB;AACA3B,EAAAA,QAAQ,EAAEN,SAAS,CAACkC,KAAV,CAAgBhC,iBAAhB,CAJO;;AAKjB;AACF;AACA;AACA;AACA;AACA;AACEM,EAAAA,MAAM,EAAER,SAAS,CAACmC,SAAV,CAAoB,CAACnC,SAAS,CAACoC,MAAX,EAAmBpC,SAAS,CAACqC,MAA7B,CAApB,CAXS;;AAYjB;AACA5B,EAAAA,SAAS,EAAET,SAAS,CAACqC;AAbJ,CAAnB;AAgBAlC,MAAM,CAACmC,YAAP,GAAsB;AACpBhC,EAAAA,QAAQ,EAAE,KADU;AAEpBE,EAAAA,MAAM,EAAE+B,SAFY;AAGpB9B,EAAAA,SAAS,EAAE8B;AAHS,CAAtB;AAMA,eAAepC,MAAf","sourcesContent":["import React, { useLayoutEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst POSITION_VARIANTS = [\n  'top',\n  'bottom',\n];\n\nconst Sticky = React.forwardRef(({\n  position,\n  children,\n  offset,\n  className,\n  ...rest\n}, ref) => {\n  const [isSticky, setIsSticky] = useState(false);\n  const defaultRef = React.useRef();\n  const resolvedRef = ref || defaultRef;\n\n  // eslint-disable-next-line consistent-return\n  useLayoutEffect(() => {\n    if (resolvedRef.current) {\n      // getComputedStyle is used to get real top/bottom\n      // values on the page for proper shadows display\n      const elementStyles = window.getComputedStyle(resolvedRef.current);\n      const elementOffset = elementStyles[position || 'top'];\n      // Margin calculations according to the offset.\n      // 1 pixel above/bellow + offset pixels that determines\n      // when callback function is called\n      const elementWithOffset = 1 + (parseInt(elementOffset, 10) || 0);\n      const observer = new IntersectionObserver(\n        ([entry]) => setIsSticky(entry.intersectionRatio < 1),\n        {\n          threshold: [1],\n          rootMargin: position === 'bottom'\n            ? `0px 0px -${elementWithOffset}px 0px`\n            : `-${elementWithOffset}px 0px 0px 0px`,\n        },\n      );\n      observer.observe(resolvedRef.current);\n\n      return () => {\n        observer.unobserve(resolvedRef.current);\n      };\n    }\n  }, []);\n\n  return (\n    <div\n      className={classNames(\n        'pgn__sticky',\n        `pgn__sticky-${position || 'top'}`,\n        offset ? `pgn__sticky-offset--${offset}` : '',\n        { 'pgn__sticky-shadow': isSticky },\n        className,\n      )}\n      ref={resolvedRef}\n      {...rest}\n    >\n      {children}\n    </div>\n  );\n});\n\nSticky.propTypes = {\n  /** Specifies content of the component. */\n  children: PropTypes.node.isRequired,\n  /** Specifies position of the element. */\n  position: PropTypes.oneOf(POSITION_VARIANTS),\n  /**\n   * Specifies offset from top/bottom depending on the `position` property.\n   *\n   * Valid values are based on `the spacing classes`:\n   * `0, 0.5, ... 6`.\n   */\n  offset: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /** Specifies an additional `className` to add to the base element. */\n  className: PropTypes.string,\n};\n\nSticky.defaultProps = {\n  position: 'top',\n  offset: undefined,\n  className: undefined,\n};\n\nexport default Sticky;\n"],"file":"index.js"}