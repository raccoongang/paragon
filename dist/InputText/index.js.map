{"version":3,"sources":["../../src/InputText/index.jsx"],"names":["React","PropTypes","asInput","withDeprecatedProps","DEPR_TYPES","Text","props","className","inputRef","type","others","propTypes","string","oneOfType","func","shape","current","instanceOf","element","defaultProps","undefined","InputText","deprType","FORMAT","expect","value","transform","Array","isArray","join","message"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,mBAAP,IAA8BC,UAA9B,QAAgD,wBAAhD;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,MACEC,SADF,GAKID,KALJ,CACEC,SADF;AAAA,MAEEC,QAFF,GAKIF,KALJ,CAEEE,QAFF;AAAA,MAGEC,IAHF,GAKIH,KALJ,CAGEG,IAHF;AAAA,MAIKC,MAJL,4BAKIJ,KALJ;;AAOA,sBACE,0CACMI,MADN;AAEE,IAAA,SAAS,EAAEH,SAFb;AAGE,IAAA,IAAI,EAAEE,IAAI,IAAI,MAHhB;AAIE,IAAA,GAAG,EAAED;AAJP,KADF;AAQD;;AAEDH,IAAI,CAACM,SAAL,GAAiB;AACfJ,EAAAA,SAAS,EAAEN,SAAS,CAACW,MADN;AAEfJ,EAAAA,QAAQ,EAAEP,SAAS,CAACY,SAAV,CAAoB,CAC5BZ,SAAS,CAACa,IADkB,EAE5Bb,SAAS,CAACc,KAAV,CAAgB;AAAEC,IAAAA,OAAO,EAAEf,SAAS,CAACgB,UAAV,CAAqBhB,SAAS,CAACiB,OAA/B;AAAX,GAAhB,CAF4B,CAApB,CAFK;AAMfT,EAAAA,IAAI,EAAER,SAAS,CAACW;AAND,CAAjB;AASAP,IAAI,CAACc,YAAL,GAAoB;AAClBZ,EAAAA,SAAS,EAAEa,SADO;AAElBZ,EAAAA,QAAQ,EAAEY,SAFQ;AAGlBX,EAAAA,IAAI,EAAE;AAHY,CAApB;AAMA,IAAMY,SAAS,GAAGnB,OAAO,CAACC,mBAAmB,CAACE,IAAD,EAAO,WAAP,EAAoB;AAC/DE,EAAAA,SAAS,EAAE;AACTe,IAAAA,QAAQ,EAAElB,UAAU,CAACmB,MADZ;AAETC,IAAAA,MAAM,EAAE,gBAAAC,KAAK;AAAA,aAAI,OAAOA,KAAP,KAAiB,QAArB;AAAA,KAFJ;AAGTC,IAAAA,SAAS,EAAE,mBAAAD,KAAK;AAAA,aAAKE,KAAK,CAACC,OAAN,CAAcH,KAAd,IAAuBA,KAAK,CAACI,IAAN,CAAW,GAAX,CAAvB,GAAyCJ,KAA9C;AAAA,KAHP;AAITK,IAAAA,OAAO,EAAE;AAJA;AADoD,CAApB,CAApB,CAAzB;AASA,eAAeT,SAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport asInput from '../asInput';\nimport withDeprecatedProps, { DEPR_TYPES } from '../withDeprecatedProps';\n\nfunction Text(props) {\n  const {\n    className,\n    inputRef,\n    type,\n    ...others\n  } = props;\n\n  return (\n    <input\n      {...others}\n      className={className}\n      type={type || 'text'}\n      ref={inputRef}\n    />\n  );\n}\n\nText.propTypes = {\n  className: PropTypes.string,\n  inputRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(PropTypes.element) }),\n  ]),\n  type: PropTypes.string,\n};\n\nText.defaultProps = {\n  className: undefined,\n  inputRef: undefined,\n  type: 'text',\n};\n\nconst InputText = asInput(withDeprecatedProps(Text, 'InputText', {\n  className: {\n    deprType: DEPR_TYPES.FORMAT,\n    expect: value => typeof value === 'string',\n    transform: value => (Array.isArray(value) ? value.join(' ') : value),\n    message: 'It should be a string.',\n  },\n}));\n\nexport default InputText;\n"],"file":"index.js"}