{"version":3,"sources":["../../src/SearchField/SearchFieldAdvanced.jsx"],"names":["React","useRef","createContext","useState","useEffect","PropTypes","classNames","newId","Icon","Search","Close","SearchFieldContext","BUTTON_LOCATION_VARIANTS","SearchFieldAdvanced","props","children","className","screenReaderText","icons","onSubmit","onClear","onChange","onBlur","onFocus","initialValue","value","formAriaLabel","disabled","submitButtonLocation","hasFocus","setHasFocus","setValue","isInitialMount","inputId","inputRef","submitButtonRef","current","handleSubmit","event","preventDefault","focus","handleClear","handleFocus","handleBlur","handleChange","target","refs","input","submitButton","propTypes","node","isRequired","func","string","shape","label","oneOfType","element","clearButton","submit","clear","bool","oneOf","defaultProps","undefined"],"mappings":"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","sourcesContent":["/* eslint-disable max-len */\nimport React, {\n  useRef, createContext, useState, useEffect,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport newId from '../utils/newId';\n\nimport Icon from '../Icon';\nimport { Search, Close } from '../../icons';\n\nexport const SearchFieldContext = createContext();\n\nconst BUTTON_LOCATION_VARIANTS = [\n  'internal',\n  'external',\n];\n\nconst SearchFieldAdvanced = (props) => {\n  const {\n    children,\n    className,\n    screenReaderText,\n    icons,\n    onSubmit,\n    onClear,\n    onChange,\n    onBlur,\n    onFocus,\n    value: initialValue,\n    formAriaLabel,\n    disabled,\n    submitButtonLocation,\n  } = props;\n\n  const [hasFocus, setHasFocus] = useState(false);\n  const [value, setValue] = useState(initialValue);\n\n  const isInitialMount = useRef(true);\n  const inputId = useRef(`${newId('pgn-searchfield-input-')}`);\n  const inputRef = useRef();\n  const submitButtonRef = useRef();\n\n  useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue]);\n\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n    } else {\n      onChange(value);\n    }\n  }, [value]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    onSubmit(value);\n    if (submitButtonRef && submitButtonRef.current) {\n      submitButtonRef.current.focus();\n    }\n  };\n\n  const handleClear = () => {\n    setValue('');\n    onClear();\n    if (inputRef && inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n\n  const handleFocus = (event) => {\n    setHasFocus(true);\n    onFocus(event);\n  };\n\n  const handleBlur = (event) => {\n    setHasFocus(false);\n    onBlur(event);\n  };\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  return (\n    <div\n      className={classNames(\n        'pgn__searchfield', 'd-flex',\n        {\n          'has-focus': hasFocus,\n          disabled,\n          'pgn__searchfield--external': submitButtonLocation === 'external',\n        },\n        className,\n      )}\n    >\n      <form\n        role=\"search\"\n        onSubmit={handleSubmit}\n        onReset={handleClear}\n        className=\"d-flex align-items-center w-100\"\n        aria-label={formAriaLabel}\n      >\n        <SearchFieldContext.Provider\n          value={{\n            inputId,\n            screenReaderText,\n            icons,\n            value,\n            disabled,\n            handleFocus,\n            handleBlur,\n            handleChange,\n            refs: {\n              input: inputRef,\n              submitButton: submitButtonRef,\n            },\n          }}\n        >\n          {children}\n        </SearchFieldContext.Provider>\n      </form>\n    </div>\n  );\n};\n\nSearchFieldAdvanced.propTypes = {\n  /** specifies the nested child elements. At a minimum, `SearchField.Label` and `SearchField.Input` are required. */\n  children: PropTypes.node.isRequired,\n  /** specifies a callback function for when the `SearchField` is submitted by the user. For example:\n  ```jsx\n  <SearchField onSubmit={(value) => { console.log(value); } />\n  ``` */\n  onSubmit: PropTypes.func.isRequired,\n  /** specifies a custom class name. */\n  className: PropTypes.string,\n  /** specifies a callback function for when the user loses focus in the `SearchField` component. The default is an empty function. For example:\n  ```jsx\n  <SearchField onBlur={event => console.log(event)} />\n  ``` */\n  onBlur: PropTypes.func,\n  /** specifies a callback function for when the value in `SearchField` is changed by the user. The default is an empty function. For example:\n  ```jsx\n  <SearchField onChange={value => console.log(value)} />\n  ``` */\n  onChange: PropTypes.func,\n  /** specifies a callback function for when the value in `SearchField` is cleared by the user. The default is an empty function. For example:\n  ```jsx\n  <SearchField onClear={() => console.log('search cleared')} />\n  ``` */\n  onClear: PropTypes.func,\n  /** specifies a callback function for when the user focuses in the `SearchField` component. The default is an empty function. For example:\n  ```jsx\n  <SearchField onFocus={event => console.log(event)} />\n  ``` */\n  onFocus: PropTypes.func,\n  /** specifies the screenreader text for both the clear and submit buttons (e.g., for i18n translations). The default is `{ label: 'search', clearButton: 'clear search', searchButton: 'submit search' }`. */\n  screenReaderText: PropTypes.shape({\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n    submitButton: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n    clearButton: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  }),\n  /** specifies the initial value for the input. The default is an empty string. */\n  value: PropTypes.string,\n  /** specifies the icon element(s) to use for the clear and submit buttons. */\n  icons: PropTypes.shape({\n    submit: PropTypes.element.isRequired,\n    clear: PropTypes.element,\n  }),\n  /** specifies the aria-label attribute on the form element. This is useful if you use the `SearchField` component more than once on a page. */\n  formAriaLabel: PropTypes.string,\n  /** Specifies whether the `SearchField` is disabled. */\n  disabled: PropTypes.bool,\n  /** Controls whether the search button is internal as an icon or external as a button. */\n  submitButtonLocation: PropTypes.oneOf(BUTTON_LOCATION_VARIANTS),\n};\n\nSearchFieldAdvanced.defaultProps = {\n  className: undefined,\n  formAriaLabel: undefined,\n  value: '',\n  screenReaderText: {\n    label: 'search',\n    submitButton: 'submit search',\n    clearButton: 'clear search',\n  },\n  icons: {\n    clear: <Icon src={Close} />,\n    submit: <Icon src={Search} />,\n  },\n  onBlur: () => {},\n  onChange: () => {},\n  onFocus: () => {},\n  onClear: () => {},\n  disabled: false,\n  submitButtonLocation: 'internal',\n};\n\nexport default SearchFieldAdvanced;\n"],"file":"SearchFieldAdvanced.js"}