{"version":3,"sources":["../../src/SearchField/SearchFieldLabel.jsx"],"names":["React","useContext","PropTypes","classNames","SearchFieldContext","SearchFieldLabel","children","props","screenReaderText","inputId","current","label","propTypes","oneOfType","string","element","defaultProps","undefined"],"mappings":";;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,kBAAT,QAAmC,uBAAnC;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAA4B;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAZC,KAAY;;AACnD,oBAAsCN,UAAU,CAACG,kBAAD,CAAhD;AAAA,MAAQI,gBAAR,eAAQA,gBAAR;AAAA,MAA0BC,OAA1B,eAA0BA,OAA1B;;AAEA,sBACE;AACE,IAAA,OAAO,EAAEA,OAAO,CAACC,OADnB;AAEE,IAAA,SAAS,EAAEP,UAAU,CAAC,KAAD,EAAQ;AAAE,wBAAkB,CAAC,CAACG;AAAtB,KAAR;AAFvB,KAGMC,KAHN,GAKGD,QAAQ,iBAAI;AAAM,IAAA,SAAS,EAAC;AAAhB,KAA2BE,gBAAgB,CAACG,KAA5C,CALf,CADF;AASD,CAZD;;AAcAN,gBAAgB,CAACO,SAAjB,GAA6B;AAC3B;AACF;AACA;AACA;AACEN,EAAAA,QAAQ,EAAEJ,SAAS,CAACW,SAAV,CAAoB,CAACX,SAAS,CAACY,MAAX,EAAmBZ,SAAS,CAACa,OAA7B,CAApB;AALiB,CAA7B;AAQAV,gBAAgB,CAACW,YAAjB,GAAgC;AAC9BV,EAAAA,QAAQ,EAAEW;AADoB,CAAhC;AAIA,eAAeZ,gBAAf","sourcesContent":["/* eslint-disable max-len */\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { SearchFieldContext } from './SearchFieldAdvanced';\n\nconst SearchFieldLabel = ({ children, ...props }) => {\n  const { screenReaderText, inputId } = useContext(SearchFieldContext);\n\n  return (\n    <label\n      htmlFor={inputId.current}\n      className={classNames('m-0', { 'has-label-text': !!children })}\n      {...props}\n    >\n      {children || <span className=\"sr-only\">{screenReaderText.label}</span>}\n    </label>\n  );\n};\n\nSearchFieldLabel.propTypes = {\n  /**\n   * specifies the label to use for the input field (e.g., for i18n translations). Note: if `children` is not provided,\n   * a screenreader-only label will be used in its placed based on the `screenReaderText.label` prop for `SearchField.Advanced`.\n   */\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n};\n\nSearchFieldLabel.defaultProps = {\n  children: undefined,\n};\n\nexport default SearchFieldLabel;\n"],"file":"SearchFieldLabel.js"}