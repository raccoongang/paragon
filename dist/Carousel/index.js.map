{"version":3,"sources":["../../src/Carousel/index.jsx"],"names":["React","PropTypes","BaseCarousel","BaseCarouselItem","BaseCarouselCaption","injectIntl","Carousel","forwardRef","ref","nextLabel","prevLabel","intl","otherProps","intlNextLabel","formatMessage","id","defaultMessage","description","intlPrevLabel","CarouselItem","props","CarouselCaption","propTypes","as","elementType","activeIndex","number","defaultActiveIndex","controls","bool","fade","indicators","interval","keyboard","nextIcon","node","string","onSelect","func","onSlid","onSlide","pause","oneOf","prevIcon","slide","touch","wrap","bsPrefix","shape","isRequired","defaultProps","undefined","Item","Caption"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport BaseCarousel from 'react-bootstrap/Carousel';\nimport BaseCarouselItem from 'react-bootstrap/CarouselItem';\nimport BaseCarouselCaption from 'react-bootstrap/CarouselCaption';\nimport { injectIntl } from 'react-intl';\n\nconst Carousel = React.forwardRef(({\n  nextLabel,\n  prevLabel,\n  intl,\n  ...otherProps\n}, ref) => {\n  const intlNextLabel = intl.formatMessage({\n    id: 'pgn.Carousel.nextLabel',\n    defaultMessage: nextLabel,\n    description: 'Next slide button label in the Carousel, shown to screen readers only',\n  });\n  const intlPrevLabel = intl.formatMessage({\n    id: 'pgn.Carousel.prevLabel',\n    defaultMessage: prevLabel,\n    description: 'Previous slide button label in the Carousel, shown to screen readers only',\n  });\n  return <BaseCarousel {...otherProps} nextLabel={intlNextLabel} prevLabel={intlPrevLabel} ref={ref} />;\n});\n\nconst CarouselItem = React.forwardRef((props, ref) => <BaseCarouselItem {...props} ref={ref} />);\n\nconst CarouselCaption = React.forwardRef((props, ref) => <BaseCarouselCaption {...props} ref={ref} />);\n\nCarousel.propTypes = {\n  /** Specifies element type for this component. */\n  as: PropTypes.elementType,\n  /** Controls the current visible slide. Defaults to `defaultActiveIndex` prop */\n  activeIndex: PropTypes.number,\n  /** Specifies default active index prop */\n  defaultActiveIndex: PropTypes.number,\n  /** Show the `Carousel's` previous and next arrows for changing the current slide. */\n  controls: PropTypes.bool,\n  /** Animates slides with a crossfade animation instead of the default slide animation. */\n  fade: PropTypes.bool,\n  /** Show a set of slide position indicators. */\n  indicators: PropTypes.bool,\n  /** The amount of time to delay between automatically cycling an item. */\n  interval: PropTypes.number,\n  /** Specifies whether the `Carousel` should react to keyboard events. */\n  keyboard: PropTypes.bool,\n  /** Override the default button icon for the \"next\" control */\n  nextIcon: PropTypes.node,\n  /** Label shown to screen readers only, can be used to show the next element in the `Carousel` */\n  nextLabel: PropTypes.string,\n  /** Callback fired when the active item changes. */\n  onSelect: PropTypes.func,\n  /** Callback fired when a slide transition ends. */\n  onSlid: PropTypes.func,\n  /** Callback fired when a slide transition starts. */\n  onSlide: PropTypes.func,\n  /** If set to \"hover\", pauses the cycling of the `Carousel` on mouseenter and\n   * resumes the cycling of the carousel on mouseleave.\n   * If set to false, hovering over the `Carousel` won't pause it.\n   *\n   * On touch-enabled devices, when set to \"hover\", cycling will pause on touchend\n   * (once the user finished interacting with the `Carousel`) for two intervals,\n   * before automatically resuming. Note that this is in addition to the above mouse behavior.\n   */\n  pause: PropTypes.oneOf(['hover', false]),\n  /** Override the default button icon for the \"previous\" control */\n  prevIcon: PropTypes.node,\n  /** Label shown to screen readers only, can be used to show the\n   * previous element in the `Carousel`. Set to null to deactivate. */\n  prevLabel: PropTypes.string,\n  /** Enables animation on the Carousel as it transitions between slides. */\n  slide: PropTypes.bool,\n  /** Whether the `Carousel` should support left/right swipe interactions on touchscreen devices. */\n  touch: PropTypes.bool,\n  /** Whether the `Carousel` should cycle continuously or have hard stops */\n  wrap: PropTypes.bool,\n  /** Overrides underlying component base CSS class name */\n  bsPrefix: PropTypes.string,\n  intl: PropTypes.shape.isRequired,\n};\n\nCarouselItem.propTypes = {\n  /** Specifies element type for this component. */\n  as: PropTypes.elementType,\n  /** The amount of time to delay between automatically cycling this specific item.\n   * Will default to the `Carousel's` interval prop value if none is specified.\n   */\n  interval: PropTypes.number,\n  /** Overrides underlying component base CSS class name */\n  bsPrefix: PropTypes.string,\n};\n\nCarouselCaption.propTypes = {\n  /** Specifies element type for this component. */\n  as: PropTypes.elementType,\n  /** Overrides underlying component base CSS class name */\n  bsPrefix: PropTypes.string,\n};\n\nCarousel.defaultProps = {\n  as: 'div',\n  activeIndex: undefined,\n  defaultActiveIndex: 0,\n  controls: true,\n  fade: false,\n  indicators: true,\n  interval: 5000,\n  keyboard: true,\n  nextIcon: <span aria-hidden=\"true\" className=\"carousel-control-next-icon\" />,\n  nextLabel: 'Next',\n  onSelect: undefined,\n  onSlid: undefined,\n  onSlide: undefined,\n  pause: 'hover',\n  prevIcon: <span aria-hidden=\"true\" className=\"carousel-control-prev-icon\" />,\n  prevLabel: 'Previous',\n  slide: true,\n  touch: true,\n  wrap: true,\n  bsPrefix: 'carousel',\n};\n\nCarouselItem.defaultProps = {\n  as: 'div',\n  interval: undefined,\n  bsPrefix: 'carousel-item',\n};\n\nCarouselCaption.defaultProps = {\n  as: 'div',\n  bsPrefix: 'carousel-caption',\n};\n\nCarousel.Item = CarouselItem;\nCarousel.Caption = CarouselCaption;\n\nexport { CarouselItem };\nexport default injectIntl(Carousel);\n"],"file":"index.js"}