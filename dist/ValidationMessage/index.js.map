{"version":3,"sources":["../../src/ValidationMessage/index.jsx"],"names":["React","PropTypes","classNames","Variant","inputProps","id","string","isRequired","className","isValid","bool","invalidMessage","oneOfType","element","variant","shape","status","oneOf","Object","keys","map","k","variantIconDescription","defaultProps","undefined","INFO","ValidationMessage","props","icon","DANGER","getVariantFeedbackClassName","getVariantIcon","Component","propTypes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport Variant from '../utils/constants';\n\nconst inputProps = {\n  id: PropTypes.string.isRequired,\n\n  className: PropTypes.string,\n  isValid: PropTypes.bool,\n  invalidMessage: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  variant: PropTypes.shape({\n    status: PropTypes.oneOf(Object.keys(Variant.status).map(k => Variant.status[k])),\n  }),\n  variantIconDescription: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n};\n\nconst defaultProps = {\n  className: undefined,\n  isValid: true,\n  invalidMessage: '',\n  variant: {\n    status: Variant.status.INFO,\n  },\n  variantIconDescription: '',\n};\n\nclass ValidationMessage extends React.Component {\n  getVariantFeedbackClassName() {\n    const { variant } = this.props;\n    let className;\n\n    switch (variant.status) {\n      case Variant.status.INFO:\n        className = 'invalid-feedback-nodanger';\n        break;\n      default:\n        break;\n    }\n\n    return className;\n  }\n\n  getVariantIcon() {\n    const {\n      variantIconDescription,\n      variant,\n    } = this.props;\n    let icon;\n\n    switch (variant.status) {\n      case Variant.status.DANGER:\n        icon = (\n          <>\n            <span\n              className={classNames(\n                'fa',\n                'fa-exclamation-circle',\n                'fa-icon-spacing',\n              )}\n              aria-hidden\n            />\n            <span\n              className={classNames('sr-only')}\n            >\n              {variantIconDescription}\n            </span>\n          </>\n        );\n        break;\n      default:\n        break;\n    }\n\n    return icon;\n  }\n\n  render() {\n    const {\n      className,\n      id,\n      invalidMessage,\n      isValid,\n    } = this.props;\n    return (\n      <div\n        className={classNames(\n          'invalid-feedback',\n          this.getVariantFeedbackClassName(),\n          className,\n        )}\n        id={id}\n        aria-live=\"polite\"\n      >\n        { isValid ? (\n          <span />\n        )\n          : (\n            <>\n              {this.getVariantIcon()}\n              {invalidMessage}\n            </>\n          )}\n      </div>\n    );\n  }\n}\n\nValidationMessage.propTypes = inputProps;\nValidationMessage.defaultProps = defaultProps;\n\nexport default ValidationMessage;\n"],"file":"index.js"}