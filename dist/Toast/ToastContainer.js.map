{"version":3,"sources":["../../src/Toast/ToastContainer.jsx"],"names":["React","ReactDOM","PropTypes","ToastContainer","props","toastRootName","document","rootElement","getElementById","createElement","setAttribute","body","appendChild","createPortal","children","Component","propTypes","node","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAEMC,c;;;;;AACJ,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,aAAL,GAAqB,YAArB;;AACA,QAAI,OAAOC,QAAP,KAAoB,WAAxB,EAAqC;AACnC,YAAKC,WAAL,GAAmB,IAAnB;AACD,KAFD,MAEO,IAAID,QAAQ,CAACE,cAAT,CAAwB,MAAKH,aAA7B,CAAJ,EAAiD;AACtD,YAAKE,WAAL,GAAmBD,QAAQ,CAACE,cAAT,CAAwB,MAAKH,aAA7B,CAAnB;AACD,KAFM,MAEA;AACL,UAAME,WAAW,GAAGD,QAAQ,CAACG,aAAT,CAAuB,KAAvB,CAApB;AACAF,MAAAA,WAAW,CAACG,YAAZ,CAAyB,IAAzB,EAA+B,MAAKL,aAApC;AACAE,MAAAA,WAAW,CAACG,YAAZ,CAAyB,OAAzB,EAAkC,iBAAlC;AACAH,MAAAA,WAAW,CAACG,YAAZ,CAAyB,MAAzB,EAAiC,OAAjC;AACAH,MAAAA,WAAW,CAACG,YAAZ,CAAyB,WAAzB,EAAsC,QAAtC;AACAH,MAAAA,WAAW,CAACG,YAAZ,CAAyB,aAAzB,EAAwC,MAAxC;AACA,YAAKH,WAAL,GAAmBD,QAAQ,CAACK,IAAT,CAAcC,WAAd,CAA0BL,WAA1B,CAAnB;AACD;;AAfgB;AAgBlB;;;;WAED,kBAAS;AACP,UAAI,KAAKA,WAAT,EAAsB;AACpB,4BAAON,QAAQ,CAACY,YAAT,CACL,KAAKT,KAAL,CAAWU,QADN,EAEL,KAAKP,WAFA,CAAP;AAID;;AACD,aAAO,IAAP;AACD;;;;EA3B0BP,KAAK,CAACe,S;;AA8BnCZ,cAAc,CAACa,SAAf,GAA2B;AACzBF,EAAAA,QAAQ,EAAEZ,SAAS,CAACe,IAAV,CAAeC;AADA,CAA3B;AAIA,eAAef,cAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\nclass ToastContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toastRootName = 'toast-root';\n    if (typeof document === 'undefined') {\n      this.rootElement = null;\n    } else if (document.getElementById(this.toastRootName)) {\n      this.rootElement = document.getElementById(this.toastRootName);\n    } else {\n      const rootElement = document.createElement('div');\n      rootElement.setAttribute('id', this.toastRootName);\n      rootElement.setAttribute('class', 'toast-container');\n      rootElement.setAttribute('role', 'alert');\n      rootElement.setAttribute('aria-live', 'polite');\n      rootElement.setAttribute('aria-atomic', 'true');\n      this.rootElement = document.body.appendChild(rootElement);\n    }\n  }\n\n  render() {\n    if (this.rootElement) {\n      return ReactDOM.createPortal(\n        this.props.children,\n        this.rootElement,\n      );\n    }\n    return null;\n  }\n}\n\nToastContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default ToastContainer;\n"],"file":"ToastContainer.js"}