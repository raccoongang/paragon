{"version":3,"sources":["../../src/DataTable/index.jsx"],"names":["React","useEffect","useMemo","useReducer","PropTypes","useTable","Table","getVisibleColumns","requiredWhen","getTableArgs","TableControlBar","EmptyTableContent","TableFooter","BulkActions","DropdownFilters","FilterStatus","RowStatus","SelectionStatus","ControlledSelectionStatus","SmartStatus","TableFilters","TableHeaderCell","TableCell","TableHeaderRow","TablePagination","TablePaginationButtonGroup","DataTableContext","TableActions","ControlledSelect","ControlledSelectHeader","DataTableLayout","ExpandAll","ExpandRow","useSelectionActions","selectionsReducer","initialState","initialSelectionsState","DataTable","columns","data","defaultColumnValues","additionalColumns","isSelectable","isPaginated","manualPagination","pageCount","itemCount","isFilterable","manualFilters","fetchData","isSortable","manualSortBy","isExpandable","renderRowSubComponent","bulkActions","tableActions","numBreakoutFilters","initialTableOptions","EmptyTableComponent","manualSelectColumn","showFiltersInSidebar","dataViewToggleOptions","isLoading","children","props","defaultColumn","tableOptions","selections","selectionsDispatch","tableArgs","push","hooks","visibleColumns","selectionProps","selectedRows","length","selectedRowsById","forEach","row","id","useControlledState","state","selectedRowIds","selectedFlatRows","controlledTableSelections","instance","tableStateWithoutSelections","JSON","stringify","selectionActions","enhancedInstance","defaultProps","undefined","SelectionStatusComponent","FilterStatusComponent","RowStatusComponent","isDataViewToggleEnabled","onDataViewToggle","defaultActiveStateValue","togglePlacement","propTypes","arrayOf","shape","Header","oneOfType","func","node","isRequired","accessor","string","bool","Cell","disableSortBy","number","Filter","pageSize","pageIndex","filters","sortBy","buttonText","handleClick","className","variant","disabled","element","oneOf","EmptyTable"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IACEC,SADF,EACaC,OADb,EACsBC,UADtB,QAEO,OAFP;AAGA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,iBAAP,MAA8B,cAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAOC,yBAAP,MAAsC,uCAAtC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,0BAAP,MAAuC,8BAAvC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA,OAAOC,sBAAP,MAAmC,oCAAnC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,SAASC,mBAAT,QAAoC,SAApC;AACA,OAAOC,iBAAP,IAA4BC,YAAY,IAAIC,sBAA5C,QAA0E,0BAA1E;;AAEA,SAASC,SAAT,OAeG;AAAA,MAdDC,OAcC,QAdDA,OAcC;AAAA,MAdQC,IAcR,QAdQA,IAcR;AAAA,MAdcC,mBAcd,QAdcA,mBAcd;AAAA,MAdmCC,iBAcnC,QAdmCA,iBAcnC;AAAA,MAdsDC,YActD,QAdsDA,YActD;AAAA,MAbDC,WAaC,QAbDA,WAaC;AAAA,MAbYC,gBAaZ,QAbYA,gBAaZ;AAAA,MAb8BC,SAa9B,QAb8BA,SAa9B;AAAA,MAbyCC,SAazC,QAbyCA,SAazC;AAAA,MAZDC,YAYC,QAZDA,YAYC;AAAA,MAZaC,aAYb,QAZaA,aAYb;AAAA,MAZ4BC,SAY5B,QAZ4BA,SAY5B;AAAA,MAZuCd,YAYvC,QAZuCA,YAYvC;AAAA,MAXDe,UAWC,QAXDA,UAWC;AAAA,MAXWC,YAWX,QAXWA,YAWX;AAAA,MAVDC,YAUC,QAVDA,YAUC;AAAA,MAVaC,qBAUb,QAVaA,qBAUb;AAAA,MATDC,WASC,QATDA,WASC;AAAA,MATYC,YASZ,QATYA,YASZ;AAAA,MAT0BC,kBAS1B,QAT0BA,kBAS1B;AAAA,MARDC,mBAQC,QARDA,mBAQC;AAAA,MAPDC,mBAOC,QAPDA,mBAOC;AAAA,MANDC,kBAMC,QANDA,kBAMC;AAAA,MALDC,oBAKC,QALDA,oBAKC;AAAA,MAJDC,qBAIC,QAJDA,qBAIC;AAAA,MAHDC,SAGC,QAHDA,SAGC;AAAA,MAFDC,QAEC,QAFDA,QAEC;AAAA,MADEC,KACF;;AACD,MAAMC,aAAa,GAAG/D,OAAO,CAC3B;AAAA,WAAOsC,mBAAP;AAAA,GAD2B,EAE3B,CAACA,mBAAD,CAF2B,CAA7B;AAIA,MAAM0B,YAAY,GAAGhE,OAAO,CAAC;AAAA;AAC3BoC,MAAAA,OAAO,EAAPA,OAD2B;AAE3BC,MAAAA,IAAI,EAAJA,IAF2B;AAG3B0B,MAAAA,aAAa,EAAbA,aAH2B;AAI3BjB,MAAAA,aAAa,EAAbA,aAJ2B;AAK3BJ,MAAAA,gBAAgB,EAAhBA,gBAL2B;AAM3BO,MAAAA,YAAY,EAAZA,YAN2B;AAO3BhB,MAAAA,YAAY,EAAZA;AAP2B,OAQxBsB,mBARwB;AAAA,GAAD,EASxB,CAACnB,OAAD,EAAUC,IAAV,EAAgB0B,aAAhB,EAA+BjB,aAA/B,EAA8CJ,gBAA9C,EAAgET,YAAhE,EAA8EsB,mBAA9E,CATwB,CAA5B;;AAWA,oBAAyCtD,UAAU,CAAC+B,iBAAD,EAAoBE,sBAApB,CAAnD;AAAA;AAAA,MAAO+B,UAAP;AAAA,MAAmBC,kBAAnB;;AAEA,MAAIzB,WAAW,IAAIC,gBAAnB,EAAqC;AACnC;AACAsB,IAAAA,YAAY,CAACrB,SAAb,GAAyBA,SAAS,IAAI,CAAC,CAAvC;AACD,GArBA,CAuBD;;;AACA,MAAMwB,SAAS,GAAG5D,YAAY,CAAC;AAC7ByD,IAAAA,YAAY,EAAZA,YAD6B;AACfnB,IAAAA,YAAY,EAAZA,YADe;AACDL,IAAAA,YAAY,EAAZA,YADC;AACaC,IAAAA,WAAW,EAAXA,WADb;AAC0BO,IAAAA,UAAU,EAAVA,UAD1B;AACsCE,IAAAA,YAAY,EAAZA;AADtC,GAAD,CAA9B,CAxBC,CA2BD;;AACAiB,EAAAA,SAAS,CAACC,IAAV,CAAe,UAAAC,KAAK,EAAI;AACtBA,IAAAA,KAAK,CAACC,cAAN,CAAqBF,IAArB,CACE,UAAAE,cAAc;AAAA,aAAIjE,iBAAiB,CAACmC,YAAD,EAAe8B,cAAf,EAA+B/B,iBAA/B,EAAkDkB,kBAAlD,CAArB;AAAA,KADhB;AAGD,GAJD,EA5BC,CAkCD;AACA;;AACA,MAAMc,cAAc,GAAG,EAAvB;AACA,MAAQC,YAAR,GAAyBP,UAAzB,CAAQO,YAAR;;AACA,MAAIA,YAAY,CAACC,MAAb,GAAsB,CAA1B,EAA6B;AAC3B,QAAMC,gBAAgB,GAAG,EAAzB;AACAF,IAAAA,YAAY,CAACG,OAAb,CAAqB,UAACC,GAAD,EAAS;AAC5BF,MAAAA,gBAAgB,CAACE,GAAG,CAACC,EAAL,CAAhB,GAA2B,IAA3B;AACD,KAFD;AAGAV,IAAAA,SAAS,CAACC,IAAV,CAAe,UAAAC,KAAK,EAAI;AACtBA,MAAAA,KAAK,CAACS,kBAAN,CAAyBV,IAAzB,CACE,UAACW,KAAD;AAAA,+CAAiBA,KAAjB;AAAwBC,UAAAA,cAAc,EAAEN;AAAxC;AAAA,OADF;AAGD,KAJD;AAKAH,IAAAA,cAAc,CAACU,gBAAf,GAAkCT,YAAlC;AACD;;AACD,MAAMU,yBAAyB,GAAG,CAACjB,UAAD,EAAaC,kBAAb,CAAlC,CAlDC,CAoDD;;AACA,MAAMiB,QAAQ,GAAGhF,QAAQ,MAAR,4BAAYgE,SAAZ,EAAjB,CArDC,CAuDD;AACA;;AACA,MAAMiB,2BAA2B,qBAAQD,QAAQ,CAACJ,KAAjB,CAAjC;;AACA,SAAOK,2BAA2B,CAACJ,cAAnC;AACAjF,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIgD,SAAJ,EAAe;AACbA,MAAAA,SAAS,CAACqC,2BAAD,CAAT;AACD;AACF,GAJQ,EAIN,CAACrC,SAAD,EAAYsC,IAAI,CAACC,SAAL,CAAeF,2BAAf,CAAZ,CAJM,CAAT;AAMA,MAAMG,gBAAgB,GAAGxD,mBAAmB,CAACoD,QAAD,EAAWD,yBAAX,CAA5C;;AAEA,MAAMM,gBAAgB,+DACjBL,QADiB;AAEpBvC,IAAAA,SAAS,EAATA,SAFoB;AAGpBU,IAAAA,kBAAkB,EAAlBA,kBAHoB;AAIpBF,IAAAA,WAAW,EAAXA,WAJoB;AAKpBC,IAAAA,YAAY,EAAZA,YALoB;AAMpB6B,IAAAA,yBAAyB,EAAzBA,yBANoB;AAOpBxB,IAAAA,oBAAoB,EAApBA,oBAPoB;AAQpBC,IAAAA,qBAAqB,EAArBA,qBARoB;AASpBR,IAAAA,qBAAqB,EAArBA,qBAToB;AAUpBS,IAAAA,SAAS,EAATA;AAVoB,KAWjBW,cAXiB,GAYjBgB,gBAZiB,GAajBzB,KAbiB,CAAtB;;AAgBA,sBACE,oBAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAE0B;AAAlC,kBACE,oBAAC,eAAD,qBACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACG3B,QAAQ,iBACT,uDACE,oBAAC,eAAD,OADF,eAEE,oBAAC,KAAD,OAFF,eAGE,oBAAC,mBAAD;AAAqB,IAAA,OAAO,EAAC;AAA7B,IAHF,eAIE,oBAAC,WAAD,OAJF,CAFF,CADF,CADF,CADF;AAgBD;;AAED1B,SAAS,CAACsD,YAAV,GAAyB;AACvBlD,EAAAA,iBAAiB,EAAE,EADI;AAEvBD,EAAAA,mBAAmB,EAAE,EAFE;AAGvBO,EAAAA,YAAY,EAAE,KAHS;AAIvBJ,EAAAA,WAAW,EAAE,KAJU;AAKvBD,EAAAA,YAAY,EAAE,KALS;AAMvBQ,EAAAA,UAAU,EAAE,KANW;AAOvBF,EAAAA,aAAa,EAAE,KAPQ;AAQvBJ,EAAAA,gBAAgB,EAAE,KARK;AASvBO,EAAAA,YAAY,EAAE,KATS;AAUvBF,EAAAA,SAAS,EAAE,IAVY;AAWvBd,EAAAA,YAAY,EAAE,EAXS;AAYvBsB,EAAAA,mBAAmB,EAAE,EAZE;AAavBC,EAAAA,mBAAmB,EAAE/C,iBAbE;AAcvBoD,EAAAA,QAAQ,EAAE,IAda;AAevBT,EAAAA,WAAW,EAAE,EAfU;AAgBvBC,EAAAA,YAAY,EAAE,EAhBS;AAiBvBC,EAAAA,kBAAkB,EAAE,CAjBG;AAkBvBG,EAAAA,kBAAkB,EAAEiC,SAlBG;AAmBvBC,EAAAA,wBAAwB,EAAE5E,eAnBH;AAoBvB6E,EAAAA,qBAAqB,EAAE/E,YApBA;AAqBvBgF,EAAAA,kBAAkB,EAAE/E,SArBG;AAsBvB4C,EAAAA,oBAAoB,EAAE,KAtBC;AAuBvBC,EAAAA,qBAAqB,EAAE;AACrBmC,IAAAA,uBAAuB,EAAE,KADJ;AAErBC,IAAAA,gBAAgB,EAAE,4BAAM,CAAE,CAFL;AAGrBC,IAAAA,uBAAuB,EAAE,MAHJ;AAIrBC,IAAAA,eAAe,EAAE;AAJI,GAvBA;AA6BvB9C,EAAAA,qBAAqB,EAAEuC,SA7BA;AA8BvBxC,EAAAA,YAAY,EAAE,KA9BS;AA+BvBU,EAAAA,SAAS,EAAE;AA/BY,CAAzB;AAkCAzB,SAAS,CAAC+D,SAAV,GAAsB;AACpB;AACA9D,EAAAA,OAAO,EAAElC,SAAS,CAACiG,OAAV,CAAkBjG,SAAS,CAACkG,KAAV,CAAgB;AACzC;AACAC,IAAAA,MAAM,EAAEnG,SAAS,CAACoG,SAAV,CAAoB,CAACpG,SAAS,CAACqG,IAAX,EAAiBrG,SAAS,CAACsG,IAA3B,CAApB,EAAsDC,UAFrB;;AAGzC;AACAC,IAAAA,QAAQ,EAAExG,SAAS,CAACyG;AAJqB,GAAhB,CAAlB,EAKLF,UAPgB;;AAQpB;AACApE,EAAAA,IAAI,EAAEnC,SAAS,CAACiG,OAAV,CAAkBjG,SAAS,CAACkG,KAAV,CAAgB,EAAhB,CAAlB,EAAuCK,UATzB;;AAUpB;AACAjE,EAAAA,YAAY,EAAEtC,SAAS,CAAC0G,IAXJ;;AAYpB;AACAnD,EAAAA,kBAAkB,EAAEvD,SAAS,CAACkG,KAAV,CAAgB;AAClCvB,IAAAA,EAAE,EAAE3E,SAAS,CAACyG,MAAV,CAAiBF,UADa;AAElCJ,IAAAA,MAAM,EAAEnG,SAAS,CAACoG,SAAV,CAAoB,CAACpG,SAAS,CAACqG,IAAX,EAAiBrG,SAAS,CAACsG,IAA3B,CAApB,EAAsDC,UAF5B;AAGlCI,IAAAA,IAAI,EAAE3G,SAAS,CAACqG,IAAV,CAAeE,UAHa;AAIlCK,IAAAA,aAAa,EAAE5G,SAAS,CAAC0G,IAAV,CAAeH;AAJI,GAAhB,CAbA;;AAmBpB;AACAzD,EAAAA,UAAU,EAAE9C,SAAS,CAAC0G,IApBF;;AAqBpB;AACA3D,EAAAA,YAAY,EAAE/C,SAAS,CAAC0G,IAtBJ;;AAuBpB;AACAnE,EAAAA,WAAW,EAAEvC,SAAS,CAAC0G,IAxBH;;AAyBpB;AACAlE,EAAAA,gBAAgB,EAAExC,SAAS,CAAC0G,IA1BR;AA2BpB;AACAjE,EAAAA,SAAS,EAAErC,YAAY,CAACJ,SAAS,CAAC6G,MAAX,EAAmB,kBAAnB,CA5BH;;AA6BpB;AACAlE,EAAAA,YAAY,EAAE3C,SAAS,CAAC0G,IA9BJ;;AA+BpB;AACA9D,EAAAA,aAAa,EAAE5C,SAAS,CAAC0G,IAhCL;;AAkCpB;AACAtE,EAAAA,mBAAmB,EAAEpC,SAAS,CAACkG,KAAV,CAAgB;AACnC;AACAY,IAAAA,MAAM,EAAE9G,SAAS,CAACoG,SAAV,CAAoB,CAACpG,SAAS,CAACqG,IAAX,EAAiBrG,SAAS,CAACsG,IAA3B,CAApB;AAF2B,GAAhB,CAnCD;;AAuCpB;AACAjE,EAAAA,iBAAiB,EAAErC,SAAS,CAACiG,OAAV,CAAkBjG,SAAS,CAACkG,KAAV,CAAgB;AACnD;AACAvB,IAAAA,EAAE,EAAE3E,SAAS,CAACyG,MAAV,CAAiBF,UAF8B;;AAGnD;AACAJ,IAAAA,MAAM,EAAEnG,SAAS,CAACoG,SAAV,CAAoB,CAACpG,SAAS,CAACyG,MAAX,EAAmBzG,SAAS,CAACsG,IAA7B,CAApB,CAJ2C;;AAKnD;AACAK,IAAAA,IAAI,EAAE3G,SAAS,CAACoG,SAAV,CAAoB,CAACpG,SAAS,CAACqG,IAAX,EAAiBrG,SAAS,CAACsG,IAA3B,CAApB;AAN6C,GAAhB,CAAlB,CAxCC;;AAgDpB;AACF;AACEzD,EAAAA,SAAS,EAAE7C,SAAS,CAACqG,IAlDD;;AAmDpB;AACAtE,EAAAA,YAAY,EAAE/B,SAAS,CAACkG,KAAV,CAAgB;AAC5Ba,IAAAA,QAAQ,EAAE3G,YAAY,CAACJ,SAAS,CAAC6G,MAAX,EAAmB,aAAnB,CADM;AAE5BG,IAAAA,SAAS,EAAE5G,YAAY,CAACJ,SAAS,CAAC6G,MAAX,EAAmB,aAAnB,CAFK;AAG5BI,IAAAA,OAAO,EAAE7G,YAAY,CAACJ,SAAS,CAACiG,OAAV,CAAkBjG,SAAS,CAACkG,KAAV,EAAlB,CAAD,EAAuC,eAAvC,CAHO;AAI5BgB,IAAAA,MAAM,EAAE9G,YAAY,CAACJ,SAAS,CAACiG,OAAV,CAAkBjG,SAAS,CAACkG,KAAV,EAAlB,CAAD,EAAuC,cAAvC;AAJQ,GAAhB,CApDM;;AA0DpB;AACF;AACE7C,EAAAA,mBAAmB,EAAErD,SAAS,CAACkG,KAAV,CAAgB,EAAhB,CA5DD;;AA6DpB;AACAxD,EAAAA,SAAS,EAAE1C,SAAS,CAAC6G,MAAV,CAAiBN,UA9DR;;AA+DpB;AACF;AACErD,EAAAA,WAAW,EAAElD,SAAS,CAACoG,SAAV,CAAoB,CAC/BpG,SAAS,CAACiG,OAAV,CACEjG,SAAS,CAACoG,SAAV,CAAoB,CAClBpG,SAAS,CAACkG,KAAV,CAAgB;AACd;AACAiB,IAAAA,UAAU,EAAEnH,SAAS,CAACyG,MAAV,CAAiBF,UAFf;;AAGd;AACAa,IAAAA,WAAW,EAAEpH,SAAS,CAACqG,IAAV,CAAeE,UAJd;;AAKd;AACAc,IAAAA,SAAS,EAAErH,SAAS,CAACyG,MANP;;AAOd;AACAa,IAAAA,OAAO,EAAEtH,SAAS,CAACyG,MARL;;AASd;AACAc,IAAAA,QAAQ,EAAEvH,SAAS,CAAC0G;AAVN,GAAhB,CADkB;AAalB;AACA1G,EAAAA,SAAS,CAACqG,IAdQ;AAelB;AACArG,EAAAA,SAAS,CAACwH,OAhBQ,CAApB,CADF,CAD+B;AAqB/B;AACAxH,EAAAA,SAAS,CAACqG,IAtBqB;AAuB/B;AACArG,EAAAA,SAAS,CAACwH,OAxBqB,CAApB,CAjEO;;AA2FpB;AACArE,EAAAA,YAAY,EAAEnD,SAAS,CAACoG,SAAV,CAAoB,CAChCpG,SAAS,CAACiG,OAAV,CACEjG,SAAS,CAACoG,SAAV,CAAoB,CAClBpG,SAAS,CAACkG,KAAV,CAAgB;AACd;AACAiB,IAAAA,UAAU,EAAEnH,SAAS,CAACyG,MAAV,CAAiBF,UAFf;;AAGd;AACAa,IAAAA,WAAW,EAAEpH,SAAS,CAACqG,IAAV,CAAeE,UAJd;;AAKd;AACAc,IAAAA,SAAS,EAAErH,SAAS,CAACyG,MANP;;AAOd;AACAa,IAAAA,OAAO,EAAEtH,SAAS,CAACyG,MARL;;AASd;AACAc,IAAAA,QAAQ,EAAEvH,SAAS,CAAC0G;AAVN,GAAhB,CADkB;AAalB;AACA1G,EAAAA,SAAS,CAACqG,IAdQ;AAelB;AACArG,EAAAA,SAAS,CAACwH,OAhBQ,CAApB,CADF,CADgC;AAqBhC;AACAxH,EAAAA,SAAS,CAACqG,IAtBsB;AAuBhC;AACArG,EAAAA,SAAS,CAACwH,OAxBsB,CAApB,CA5FM;;AAsHpB;AACApE,EAAAA,kBAAkB,EAAEpD,SAAS,CAACyH,KAAV,CAAgB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAhB,CAvHA;;AAwHpB;AACAnE,EAAAA,mBAAmB,EAAEtD,SAAS,CAACqG,IAzHX;;AA0HpB;AACAV,EAAAA,kBAAkB,EAAE3F,SAAS,CAACqG,IA3HV;;AA4HpB;AACAZ,EAAAA,wBAAwB,EAAEzF,SAAS,CAACqG,IA7HhB;;AA8HpB;AACAX,EAAAA,qBAAqB,EAAE1F,SAAS,CAACqG,IA/Hb;;AAgIpB;AACA1C,EAAAA,QAAQ,EAAE3D,SAAS,CAACoG,SAAV,CAAoB,CAACpG,SAAS,CAACiG,OAAV,CAAkBjG,SAAS,CAACsG,IAA5B,CAAD,EAAoCtG,SAAS,CAACsG,IAA9C,CAApB,CAjIU;;AAkIpB;AACA9C,EAAAA,oBAAoB,EAAExD,SAAS,CAAC0G,IAnIZ;;AAoIpB;AACAjD,EAAAA,qBAAqB,EAAEzD,SAAS,CAACkG,KAAV,CAAgB;AACrC;AACAN,IAAAA,uBAAuB,EAAE5F,SAAS,CAAC0G,IAFE;;AAGrC;AACAb,IAAAA,gBAAgB,EAAE7F,SAAS,CAACqG,IAJS;;AAKrC;AACAP,IAAAA,uBAAuB,EAAE9F,SAAS,CAACyG,MANE;;AAOrC;AACJ;AACIV,IAAAA,eAAe,EAAE/F,SAAS,CAACyG;AATU,GAAhB,CArIH;;AAgJpB;AACAxD,EAAAA,qBAAqB,EAAEjD,SAAS,CAACqG,IAjJb;;AAkJpB;AACArD,EAAAA,YAAY,EAAEhD,SAAS,CAAC0G,IAnJJ;AAoJpBhD,EAAAA,SAAS,EAAE1D,SAAS,CAAC0G;AApJD,CAAtB;AAuJAzE,SAAS,CAACxB,WAAV,GAAwBA,WAAxB;AACAwB,SAAS,CAACyF,UAAV,GAAuBnH,iBAAvB;AACA0B,SAAS,CAACvB,eAAV,GAA4BA,eAA5B;AACAuB,SAAS,CAACtB,YAAV,GAAyBA,YAAzB;AACAsB,SAAS,CAACrB,SAAV,GAAsBA,SAAtB;AACAqB,SAAS,CAACpB,eAAV,GAA4BA,eAA5B;AACAoB,SAAS,CAAClB,WAAV,GAAwBA,WAAxB;AACAkB,SAAS,CAAC/B,KAAV,GAAkBA,KAAlB;AACA+B,SAAS,CAACf,SAAV,GAAsBA,SAAtB;AACAe,SAAS,CAAC3B,eAAV,GAA4BA,eAA5B;AACA2B,SAAS,CAACjB,YAAV,GAAyBA,YAAzB;AACAiB,SAAS,CAACzB,WAAV,GAAwBA,WAAxB;AACAyB,SAAS,CAAChB,eAAV,GAA4BA,eAA5B;AACAgB,SAAS,CAACd,cAAV,GAA2BA,cAA3B;AACAc,SAAS,CAACb,eAAV,GAA4BA,eAA5B;AACAa,SAAS,CAACZ,0BAAV,GAAuCA,0BAAvC;AACAY,SAAS,CAACV,YAAV,GAAyBA,YAAzB;AACAU,SAAS,CAACnB,yBAAV,GAAsCA,yBAAtC;AACAmB,SAAS,CAACT,gBAAV,GAA6BA,gBAA7B;AACAS,SAAS,CAACR,sBAAV,GAAmCA,sBAAnC;AACAQ,SAAS,CAACN,SAAV,GAAsBA,SAAtB;AACAM,SAAS,CAACL,SAAV,GAAsBA,SAAtB;AAEA,eAAeK,SAAf","sourcesContent":["import React, {\n  useEffect, useMemo, useReducer,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { useTable } from 'react-table';\n\nimport Table from './Table';\nimport getVisibleColumns from './utils/getVisibleColumns';\nimport { requiredWhen } from '../utils/propTypesUtils';\nimport getTableArgs from './utils/getTableArgs';\nimport TableControlBar from './TableControlBar';\nimport EmptyTableContent from './EmptyTable';\nimport TableFooter from './TableFooter';\nimport BulkActions from './BulkActions';\nimport DropdownFilters from './DropdownFilters';\nimport FilterStatus from './FilterStatus';\nimport RowStatus from './RowStatus';\nimport SelectionStatus from './selection/SelectionStatus';\nimport ControlledSelectionStatus from './selection/ControlledSelectionStatus';\nimport SmartStatus from './SmartStatus';\nimport TableFilters from './TableFilters';\nimport TableHeaderCell from './TableHeaderCell';\nimport TableCell from './TableCell';\nimport TableHeaderRow from './TableHeaderRow';\nimport TablePagination from './TablePagination';\nimport TablePaginationButtonGroup from './TablePaginationButtonGroup';\nimport DataTableContext from './DataTableContext';\nimport TableActions from './TableActions';\nimport ControlledSelect from './selection/ControlledSelect';\nimport ControlledSelectHeader from './selection/ControlledSelectHeader';\nimport DataTableLayout from './DataTableLayout';\nimport ExpandAll from './ExpandAll';\nimport ExpandRow from './ExpandRow';\n\nimport { useSelectionActions } from './hooks';\nimport selectionsReducer, { initialState as initialSelectionsState } from './selection/data/reducer';\n\nfunction DataTable({\n  columns, data, defaultColumnValues, additionalColumns, isSelectable,\n  isPaginated, manualPagination, pageCount, itemCount,\n  isFilterable, manualFilters, fetchData, initialState,\n  isSortable, manualSortBy,\n  isExpandable, renderRowSubComponent,\n  bulkActions, tableActions, numBreakoutFilters,\n  initialTableOptions,\n  EmptyTableComponent,\n  manualSelectColumn,\n  showFiltersInSidebar,\n  dataViewToggleOptions,\n  isLoading,\n  children,\n  ...props\n}) {\n  const defaultColumn = useMemo(\n    () => (defaultColumnValues),\n    [defaultColumnValues],\n  );\n  const tableOptions = useMemo(() => ({\n    columns,\n    data,\n    defaultColumn,\n    manualFilters,\n    manualPagination,\n    manualSortBy,\n    initialState,\n    ...initialTableOptions,\n  }), [columns, data, defaultColumn, manualFilters, manualPagination, initialState, initialTableOptions]);\n\n  const [selections, selectionsDispatch] = useReducer(selectionsReducer, initialSelectionsState);\n\n  if (isPaginated && manualPagination) {\n    // pageCount is required when pagination is manual, if it's not there passing -1 as per react-table docs\n    tableOptions.pageCount = pageCount || -1;\n  }\n\n  // NB: Table args *must* be in a particular order\n  const tableArgs = getTableArgs({\n    tableOptions, isFilterable, isSelectable, isPaginated, isSortable, isExpandable,\n  });\n  // adds selection column and action columns as necessary\n  tableArgs.push(hooks => {\n    hooks.visibleColumns.push(\n      visibleColumns => getVisibleColumns(isSelectable, visibleColumns, additionalColumns, manualSelectColumn),\n    );\n  });\n\n  // Pass any controlled selections from context to the appropriate ``useTable`` arguments to maintain\n  // correct selection states on rows, both from a data perspective and in the UI.\n  const selectionProps = {};\n  const { selectedRows } = selections;\n  if (selectedRows.length > 0) {\n    const selectedRowsById = {};\n    selectedRows.forEach((row) => {\n      selectedRowsById[row.id] = true;\n    });\n    tableArgs.push(hooks => {\n      hooks.useControlledState.push(\n        (state) => ({ ...state, selectedRowIds: selectedRowsById }),\n      );\n    });\n    selectionProps.selectedFlatRows = selectedRows;\n  }\n  const controlledTableSelections = [selections, selectionsDispatch];\n\n  // Use the state and functions returned from useTable to build your UI\n  const instance = useTable(...tableArgs);\n\n  // Call ``fetchData`` whenever the state of the table changes (e.g., page change, sort or filter applied) but ignore\n  // any state changes to current row selections as we don't want to re-fetch data whenever row(s) are selected.\n  const tableStateWithoutSelections = { ...instance.state };\n  delete tableStateWithoutSelections.selectedRowIds;\n  useEffect(() => {\n    if (fetchData) {\n      fetchData(tableStateWithoutSelections);\n    }\n  }, [fetchData, JSON.stringify(tableStateWithoutSelections)]);\n\n  const selectionActions = useSelectionActions(instance, controlledTableSelections);\n\n  const enhancedInstance = {\n    ...instance,\n    itemCount,\n    numBreakoutFilters,\n    bulkActions,\n    tableActions,\n    controlledTableSelections,\n    showFiltersInSidebar,\n    dataViewToggleOptions,\n    renderRowSubComponent,\n    isLoading,\n    ...selectionProps,\n    ...selectionActions,\n    ...props,\n  };\n\n  return (\n    <DataTableContext.Provider value={enhancedInstance}>\n      <DataTableLayout>\n        <div className=\"pgn__data-table-wrapper\">\n          {children || (\n          <>\n            <TableControlBar />\n            <Table />\n            <EmptyTableComponent content=\"No results found\" />\n            <TableFooter />\n          </>\n          )}\n        </div>\n      </DataTableLayout>\n    </DataTableContext.Provider>\n  );\n}\n\nDataTable.defaultProps = {\n  additionalColumns: [],\n  defaultColumnValues: {},\n  isFilterable: false,\n  isPaginated: false,\n  isSelectable: false,\n  isSortable: false,\n  manualFilters: false,\n  manualPagination: false,\n  manualSortBy: false,\n  fetchData: null,\n  initialState: {},\n  initialTableOptions: {},\n  EmptyTableComponent: EmptyTableContent,\n  children: null,\n  bulkActions: [],\n  tableActions: [],\n  numBreakoutFilters: 1,\n  manualSelectColumn: undefined,\n  SelectionStatusComponent: SelectionStatus,\n  FilterStatusComponent: FilterStatus,\n  RowStatusComponent: RowStatus,\n  showFiltersInSidebar: false,\n  dataViewToggleOptions: {\n    isDataViewToggleEnabled: false,\n    onDataViewToggle: () => {},\n    defaultActiveStateValue: 'card',\n    togglePlacement: 'left',\n  },\n  renderRowSubComponent: undefined,\n  isExpandable: false,\n  isLoading: false,\n};\n\nDataTable.propTypes = {\n  /** Definition of table columns */\n  columns: PropTypes.arrayOf(PropTypes.shape({\n    /** User visible column name */\n    Header: PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n    /** String used to access the correct cell data for this column */\n    accessor: PropTypes.string,\n  })).isRequired,\n  /** Data to be displayed in the table */\n  data: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  /** table rows can be selected */\n  isSelectable: PropTypes.bool,\n  /** Alternate column for selecting rows. See react table useSort docs for more information */\n  manualSelectColumn: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    Header: PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n    Cell: PropTypes.func.isRequired,\n    disableSortBy: PropTypes.bool.isRequired,\n  }),\n  /** Table columns can be sorted */\n  isSortable: PropTypes.bool,\n  /** Indicates that sorting will be done via backend API. A fetchData function must be provided */\n  manualSortBy: PropTypes.bool,\n  /** Paginate the table */\n  isPaginated: PropTypes.bool,\n  /** Indicates that pagination will be done manually. A fetchData function must be provided */\n  manualPagination: PropTypes.bool,\n  // eslint-disable-next-line react/require-default-props\n  pageCount: requiredWhen(PropTypes.number, 'manualPagination'),\n  /** Table rows can be filtered, using a default filter in the default column values, or in the column definition */\n  isFilterable: PropTypes.bool,\n  /** Indicates that filtering will be done via a backend API. A fetchData function must be provided */\n  manualFilters: PropTypes.bool,\n\n  /** defaults that will be set on each column. Will be overridden by individual column values */\n  defaultColumnValues: PropTypes.shape({\n    /** A default filter component for the column */\n    Filter: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n  }),\n  /** Actions or other additional non-data columns can be added here  */\n  additionalColumns: PropTypes.arrayOf(PropTypes.shape({\n    /** id must be unique from other columns ids */\n    id: PropTypes.string.isRequired,\n    /** column header that will be displayed to the user */\n    Header: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    /** Component that renders in the added column. It will receive the row as a prop */\n    Cell: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n  })),\n  /** Function that will fetch table data. Called when page size, page index or filters change.\n    * Meant to be used with manual filters and pagination */\n  fetchData: PropTypes.func,\n  /** Initial state passed to react-table's documentation https://react-table.tanstack.com/docs/api/useTable */\n  initialState: PropTypes.shape({\n    pageSize: requiredWhen(PropTypes.number, 'isPaginated'),\n    pageIndex: requiredWhen(PropTypes.number, 'isPaginated'),\n    filters: requiredWhen(PropTypes.arrayOf(PropTypes.shape()), 'manualFilters'),\n    sortBy: requiredWhen(PropTypes.arrayOf(PropTypes.shape()), 'manualSortBy'),\n  }),\n  /** Table options passed to react-table's useTable hook. Will override some options passed in to DataTable, such\n     as: data, columns, defaultColumn, manualFilters, manualPagination, manualSortBy, and initialState */\n  initialTableOptions: PropTypes.shape({}),\n  /** Actions to be performed on the table. Called with the table instance. Not displayed if rows are selected. */\n  itemCount: PropTypes.number.isRequired,\n  /** Actions to be performed on selected rows of the table. Called with the selected rows.\n   *  Only displayed if rows are selected. */\n  bulkActions: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        PropTypes.shape({\n          /** Bulk action button text */\n          buttonText: PropTypes.string.isRequired,\n          /** handleClick will be passed the selected rows */\n          handleClick: PropTypes.func.isRequired,\n          /** classnames for button class */\n          className: PropTypes.string,\n          /** optional button variant; only relevant for the first two buttons */\n          variant: PropTypes.string,\n          /** disables button */\n          disabled: PropTypes.bool,\n        }),\n        /** function passed selected items, should return action object */\n        PropTypes.func,\n        /** A custom component representing an action */\n        PropTypes.element,\n      ]),\n    ),\n    /** Function for rendering custom components */\n    PropTypes.func,\n    /** A custom component representing an action */\n    PropTypes.element,\n  ]),\n  /** Function for rendering custom components, called with the table instance */\n  tableActions: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        PropTypes.shape({\n          /** Bulk action button text */\n          buttonText: PropTypes.string.isRequired,\n          /** handleClick will be passed the selected rows */\n          handleClick: PropTypes.func.isRequired,\n          /** classnames for button class */\n          className: PropTypes.string,\n          /** optional button variant; only relevant for the first two buttons */\n          variant: PropTypes.string,\n          /** disables button */\n          disabled: PropTypes.bool,\n        }),\n        /** function passed table instance, should return action object */\n        PropTypes.func,\n        /** A custom component representing an action */\n        PropTypes.element,\n      ]),\n    ),\n    /** Function for rendering custom components */\n    PropTypes.func,\n    /** A custom component representing an action */\n    PropTypes.element,\n  ]),\n  /** Number between one and four filters that can be shown on the top row. */\n  numBreakoutFilters: PropTypes.oneOf([1, 2, 3, 4]),\n  /** Component to be displayed when the table is empty */\n  EmptyTableComponent: PropTypes.func,\n  /** Component to be displayed for row status, ie, 10 of 20 rows. Displayed by default in the TableControlBar */\n  RowStatusComponent: PropTypes.func,\n  /** Component to be displayed for selection status. Displayed when there are selected rows and no active filters */\n  SelectionStatusComponent: PropTypes.func,\n  /** Component to be displayed for filter status. Displayed when there are active filters. */\n  FilterStatusComponent: PropTypes.func,\n  /** If children are not provided a table with control bar and footer will be rendered */\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  /** If true filters will be shown on sidebar instead */\n  showFiltersInSidebar: PropTypes.bool,\n  /** options for data view toggle */\n  dataViewToggleOptions: PropTypes.shape({\n    /** Whether to show a toggle button group which allows view switching between card and table views */\n    isDataViewToggleEnabled: PropTypes.bool,\n    /** Callback invoked when the toggle buttons are clicked, with value of selected button passed in */\n    onDataViewToggle: PropTypes.func,\n    /** default value for toggle active state */\n    defaultActiveStateValue: PropTypes.string,\n    /** placement of toggle 'bottom' will push it to the bottom row in\n     * actions section. Only 'left' and 'bottom' are supported */\n    togglePlacement: PropTypes.string,\n  }),\n  /** A function that will render contents of expanded row, accepts `row` as a prop. */\n  renderRowSubComponent: PropTypes.func,\n  /** Indicates whether table supports expandable rows. */\n  isExpandable: PropTypes.bool,\n  isLoading: PropTypes.bool,\n};\n\nDataTable.BulkActions = BulkActions;\nDataTable.EmptyTable = EmptyTableContent;\nDataTable.DropdownFilters = DropdownFilters;\nDataTable.FilterStatus = FilterStatus;\nDataTable.RowStatus = RowStatus;\nDataTable.SelectionStatus = SelectionStatus;\nDataTable.SmartStatus = SmartStatus;\nDataTable.Table = Table;\nDataTable.TableCell = TableCell;\nDataTable.TableControlBar = TableControlBar;\nDataTable.TableFilters = TableFilters;\nDataTable.TableFooter = TableFooter;\nDataTable.TableHeaderCell = TableHeaderCell;\nDataTable.TableHeaderRow = TableHeaderRow;\nDataTable.TablePagination = TablePagination;\nDataTable.TablePaginationButtonGroup = TablePaginationButtonGroup;\nDataTable.TableActions = TableActions;\nDataTable.ControlledSelectionStatus = ControlledSelectionStatus;\nDataTable.ControlledSelect = ControlledSelect;\nDataTable.ControlledSelectHeader = ControlledSelectHeader;\nDataTable.ExpandAll = ExpandAll;\nDataTable.ExpandRow = ExpandRow;\n\nexport default DataTable;\n"],"file":"index.js"}