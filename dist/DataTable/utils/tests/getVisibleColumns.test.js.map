{"version":3,"sources":["../../../../src/DataTable/utils/tests/getVisibleColumns.test.js"],"names":["getVisibleColumns","selectColumn","describe","visibleColumns","id","it","expect","toEqual","manualSort","additionalColumns"],"mappings":"AAAA;AAEA,OAAOA,iBAAP,IAA4BC,YAA5B,QAAgD,sBAAhD;AAEAC,QAAQ,CAAC,kBAAD,EAAqB,YAAM;AACjC,MAAMC,cAAc,GAAG,CAAC;AAAEC,IAAAA,EAAE,EAAE;AAAN,GAAD,CAAvB;AACAC,EAAAA,EAAE,CAAC,sBAAD,EAAyB,YAAM;AAC/BC,IAAAA,MAAM,CAACN,iBAAiB,CAAC,IAAD,EAAO,EAAP,EAAW,EAAX,CAAlB,CAAN,CAAwCO,OAAxC,CAAgD,CAACN,YAAD,CAAhD;AACD,GAFC,CAAF;AAGAI,EAAAA,EAAE,CAAC,6BAAD,EAAgC,YAAM;AACtCC,IAAAA,MAAM,CAACN,iBAAiB,CAAC,KAAD,EAAQG,cAAR,CAAlB,CAAN,CAAiDI,OAAjD,CAAyDJ,cAAzD;AACD,GAFC,CAAF;AAGAE,EAAAA,EAAE,CAAC,6CAAD,EAAgD,YAAM;AACtDC,IAAAA,MAAM,CAACN,iBAAiB,CAAC,IAAD,EAAOG,cAAP,CAAlB,CAAN,CACGI,OADH,EACYN,YADZ,SAC6BE,cAD7B;AAED,GAHC,CAAF;AAIAE,EAAAA,EAAE,CAAC,wCAAD,EAA2C,YAAM;AACjD,QAAMG,UAAU,GAAG;AAAEJ,MAAAA,EAAE,EAAE;AAAN,KAAnB;AACAE,IAAAA,MAAM,CAACN,iBAAiB,CAAC,IAAD,EAAOG,cAAP,EAAuB,EAAvB,EAA2BK,UAA3B,CAAlB,CAAN,CAAgED,OAAhE,EAAyEC,UAAzE,SAAwFL,cAAxF;AACD,GAHC,CAAF;AAIAE,EAAAA,EAAE,CAAC,mDAAD,EAAsD,YAAM;AAC5D,QAAMI,iBAAiB,GAAG,CAAC;AAAEL,MAAAA,EAAE,EAAE;AAAN,KAAD,EAAgB;AAAEA,MAAAA,EAAE,EAAE;AAAN,KAAhB,CAA1B;AACAE,IAAAA,MAAM,CAACN,iBAAiB,CAAC,KAAD,EAAQG,cAAR,EAAwBM,iBAAxB,CAAlB,CAAN,CACGF,OADH,WACeJ,cADf,EACkCM,iBADlC;AAED,GAJC,CAAF;AAKAJ,EAAAA,EAAE,CAAC,mCAAD,EAAsC,YAAM;AAC5C,QAAMI,iBAAiB,GAAG,CAAC;AAAEL,MAAAA,EAAE,EAAE;AAAN,KAAD,EAAgB;AAAEA,MAAAA,EAAE,EAAE;AAAN,KAAhB,CAA1B;AACAE,IAAAA,MAAM,CAACN,iBAAiB,CAAC,IAAD,EAAOG,cAAP,EAAuBM,iBAAvB,CAAlB,CAAN,CACGF,OADH,EACYN,YADZ,SAC6BE,cAD7B,EACgDM,iBADhD;AAED,GAJC,CAAF;AAKD,CA1BO,CAAR","sourcesContent":["/* eslint-disable object-curly-newline */\n\nimport getVisibleColumns, { selectColumn } from '../getVisibleColumns';\n\ndescribe('getVisibleColums', () => {\n  const visibleColumns = [{ id: 'foo' }];\n  it('adds the sort column', () => {\n    expect(getVisibleColumns(true, [], [])).toEqual([selectColumn]);\n  });\n  it('returns the visible columns', () => {\n    expect(getVisibleColumns(false, visibleColumns)).toEqual(visibleColumns);\n  });\n  it('adds the sort column before visible columns', () => {\n    expect(getVisibleColumns(true, visibleColumns))\n      .toEqual([selectColumn, ...visibleColumns]);\n  });\n  it('uses a manual sort column if given one', () => {\n    const manualSort = { id: 'manual' };\n    expect(getVisibleColumns(true, visibleColumns, [], manualSort)).toEqual([manualSort, ...visibleColumns]);\n  });\n  it('adds additional columns after the visible columns', () => {\n    const additionalColumns = [{ id: 'bar' }, { id: 'baz' }];\n    expect(getVisibleColumns(false, visibleColumns, additionalColumns))\n      .toEqual([...visibleColumns, ...additionalColumns]);\n  });\n  it('puts columns in the correct order', () => {\n    const additionalColumns = [{ id: 'bar' }, { id: 'baz' }];\n    expect(getVisibleColumns(true, visibleColumns, additionalColumns))\n      .toEqual([selectColumn, ...visibleColumns, ...additionalColumns]);\n  });\n});\n"],"file":"getVisibleColumns.test.js"}