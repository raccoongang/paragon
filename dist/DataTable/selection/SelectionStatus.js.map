{"version":3,"sources":["../../../src/DataTable/selection/SelectionStatus.jsx"],"names":["React","useContext","PropTypes","DataTableContext","BaseSelectionStatus","CLEAR_SELECTION_TEXT","SelectionStatus","className","clearSelectionText","toggleAllRowsSelected","selectedFlatRows","numSelectedRows","length","selectionStatusProps","onSelectAll","onClear","propTypes","string","defaultProps","undefined"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,SAASC,oBAAT,QAAqC,kBAArC;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAuC;AAAA,MAApCC,SAAoC,QAApCA,SAAoC;AAAA,MAAzBC,kBAAyB,QAAzBA,kBAAyB;;AAC7D,oBAAoDP,UAAU,CAACE,gBAAD,CAA9D;AAAA,MAAQM,qBAAR,eAAQA,qBAAR;AAAA,MAA+BC,gBAA/B,eAA+BA,gBAA/B;;AACA,MAAMC,eAAe,GAAGD,gBAAgB,CAACE,MAAzC;AACA,MAAMC,oBAAoB,GAAG;AAC3BN,IAAAA,SAAS,EAATA,SAD2B;AAE3BI,IAAAA,eAAe,EAAfA,eAF2B;AAG3BH,IAAAA,kBAAkB,EAAlBA,kBAH2B;AAI3BM,IAAAA,WAAW,EAAE;AAAA,aAAML,qBAAqB,CAAC,IAAD,CAA3B;AAAA,KAJc;AAK3BM,IAAAA,OAAO,EAAE;AAAA,aAAMN,qBAAqB,CAAC,KAAD,CAA3B;AAAA;AALkB,GAA7B;AAOA,sBAAO,oBAAC,mBAAD,EAAyBI,oBAAzB,CAAP;AACD,CAXD;;AAaAP,eAAe,CAACU,SAAhB,GAA4B;AAC1B;AACAT,EAAAA,SAAS,EAAEL,SAAS,CAACe,MAFK;;AAG1B;AACAT,EAAAA,kBAAkB,EAAEN,SAAS,CAACe;AAJJ,CAA5B;AAOAX,eAAe,CAACY,YAAhB,GAA+B;AAC7BX,EAAAA,SAAS,EAAEY,SADkB;AAE7BX,EAAAA,kBAAkB,EAAEH;AAFS,CAA/B;AAKA,eAAeC,eAAf","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport DataTableContext from '../DataTableContext';\nimport BaseSelectionStatus from './BaseSelectionStatus';\nimport { CLEAR_SELECTION_TEXT } from './data/constants';\n\nconst SelectionStatus = ({ className, clearSelectionText }) => {\n  const { toggleAllRowsSelected, selectedFlatRows } = useContext(DataTableContext);\n  const numSelectedRows = selectedFlatRows.length;\n  const selectionStatusProps = {\n    className,\n    numSelectedRows,\n    clearSelectionText,\n    onSelectAll: () => toggleAllRowsSelected(true),\n    onClear: () => toggleAllRowsSelected(false),\n  };\n  return <BaseSelectionStatus {...selectionStatusProps} />;\n};\n\nSelectionStatus.propTypes = {\n  /** A class name to append to the base element */\n  className: PropTypes.string,\n  /** A text that appears on the `Clear selection` button */\n  clearSelectionText: PropTypes.string,\n};\n\nSelectionStatus.defaultProps = {\n  className: undefined,\n  clearSelectionText: CLEAR_SELECTION_TEXT,\n};\n\nexport default SelectionStatus;\n"],"file":"SelectionStatus.js"}