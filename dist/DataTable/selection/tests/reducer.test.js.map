{"version":3,"sources":["../../../../src/DataTable/selection/tests/reducer.test.js"],"names":["selectionsReducer","initialState","defaultInitialState","setSelectedRowsAction","setSelectAllRowsAllPagesAction","deleteSelectedRowAction","addSelectedRowAction","clearSelectionAction","clearPageSelectionAction","describe","it","rows","id","itemCount","action","updatedState","expect","toEqual","selectedRows","isEntireTableSelected","row","type"],"mappings":"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","sourcesContent":["import selectionsReducer, { initialState as defaultInitialState } from '../data/reducer';\nimport {\n  setSelectedRowsAction,\n  setSelectAllRowsAllPagesAction,\n  deleteSelectedRowAction,\n  addSelectedRowAction,\n  clearSelectionAction,\n  clearPageSelectionAction,\n} from '../data/actions';\n\ndescribe('DataTable selections reducer', () => {\n  it('sets individual selected rows', () => {\n    const rows = [{ id: 1 }, { id: 2 }, { id: 3 }];\n    const itemCount = 20;\n    const action = setSelectedRowsAction(rows, itemCount);\n    const updatedState = selectionsReducer(defaultInitialState, action);\n    expect(updatedState).toEqual({\n      ...defaultInitialState,\n      selectedRows: rows,\n    });\n  });\n  it('sets selected rows, when the entire table is selected', () => {\n    const rows = [{ id: 1 }, { id: 2 }, { id: 3 }];\n    const itemCount = 3;\n    const action = setSelectedRowsAction(rows, itemCount);\n    const updatedState = selectionsReducer(defaultInitialState, action);\n    expect(updatedState).toEqual({\n      isEntireTableSelected: true,\n      selectedRows: rows,\n    });\n  });\n  it('selects entire table', () => {\n    const initialState = {\n      ...defaultInitialState,\n      selectedRows: [{ id: 1 }, { id: 2 }, { id: 3 }],\n    };\n    const action = setSelectAllRowsAllPagesAction();\n    const updatedState = selectionsReducer(initialState, action);\n    expect(updatedState).toEqual({\n      isEntireTableSelected: true,\n      selectedRows: initialState.selectedRows,\n    });\n  });\n  it('deletes a selected row', () => {\n    const rows = [{ id: 1 }, { id: 2 }, { id: 3 }];\n    const initialState = {\n      ...defaultInitialState,\n      selectedRows: rows,\n    };\n    const action = deleteSelectedRowAction(1);\n    const updatedState = selectionsReducer(initialState, action);\n    expect(updatedState).toEqual({\n      ...defaultInitialState,\n      selectedRows: [{ id: 2 }, { id: 3 }],\n    });\n  });\n  it('adds a selected row', () => {\n    const row = { id: 1 };\n    const itemCount = 5;\n    const action = addSelectedRowAction(row, itemCount);\n    const updatedState = selectionsReducer(defaultInitialState, action);\n    expect(updatedState).toEqual({\n      ...defaultInitialState,\n      selectedRows: [row],\n    });\n  });\n  it('adds a selected row, when entire table is selected', () => {\n    const row = { id: 1 };\n    const itemCount = 1;\n    const action = addSelectedRowAction(row, itemCount);\n    const updatedState = selectionsReducer(defaultInitialState, action);\n    expect(updatedState).toEqual({\n      selectedRows: [row],\n      isEntireTableSelected: true,\n    });\n  });\n  it('clears all selections and resets to default initial state', () => {\n    const rows = [{ id: 1 }, { id: 2 }, { id: 3 }];\n    const initialState = {\n      ...defaultInitialState,\n      selectedRows: rows,\n    };\n    const action = clearSelectionAction();\n    const updatedState = selectionsReducer(initialState, action);\n    expect(updatedState).toEqual(defaultInitialState);\n  });\n  it('clears page selections', () => {\n    const rows = [{ id: 1 }, { id: 2 }, { id: 3 }];\n    const initialState = {\n      ...defaultInitialState,\n      selectedRows: rows,\n    };\n    const action = clearPageSelectionAction([1, 2]);\n    const updatedState = selectionsReducer(initialState, action);\n    expect(updatedState).toEqual({\n      ...defaultInitialState,\n      selectedRows: [{ id: 3 }],\n    });\n  });\n  it('handles unknown action', () => {\n    const action = { type: 'SOME UNKNOWN ACTION' };\n    const updatedState = selectionsReducer(defaultInitialState, action);\n    expect(updatedState).toEqual(defaultInitialState);\n  });\n});\n"],"file":"reducer.test.js"}