{"version":3,"sources":["../../src/DataTable/RowStatus.jsx"],"names":["React","useContext","PropTypes","FormattedMessage","DataTableContext","RowStatus","className","statusText","page","rows","itemCount","pageSize","length","propTypes","string","defaultProps","undefined"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAA+B;AAAA,MAA5BC,SAA4B,QAA5BA,SAA4B;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAC/C,oBAAkCN,UAAU,CAACG,gBAAD,CAA5C;AAAA,MAAQI,IAAR,eAAQA,IAAR;AAAA,MAAcC,IAAd,eAAcA,IAAd;AAAA,MAAoBC,SAApB,eAAoBA,SAApB;;AACA,MAAMC,QAAQ,GAAG,CAAAH,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEI,MAAN,MAAgBH,IAAhB,aAAgBA,IAAhB,uBAAgBA,IAAI,CAAEG,MAAtB,CAAjB;;AAEA,MAAI,CAACD,QAAL,EAAe;AACb,WAAO,IAAP;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAEL;AAAhB,kBACE,oBAAC,gBAAD;AACE,IAAA,EAAE,EAAC,oCADL;AAEE,IAAA,cAAc,EAAEC,UAFlB;AAGE,IAAA,WAAW,EAAC,uDAHd;AAIE,IAAA,MAAM,EAAE;AAAEG,MAAAA,SAAS,EAATA,SAAF;AAAaC,MAAAA,QAAQ,EAARA;AAAb;AAJV,IADF,CADF;AAUD,CAjBD;;AAmBAN,SAAS,CAACQ,SAAV,GAAsB;AACpB;AACAP,EAAAA,SAAS,EAAEJ,SAAS,CAACY,MAFD;;AAGpB;AACAP,EAAAA,UAAU,EAAEL,SAAS,CAACY;AAJF,CAAtB;AAOAT,SAAS,CAACU,YAAV,GAAyB;AACvBT,EAAAA,SAAS,EAAEU,SADY;AAEvBT,EAAAA,UAAU,EAAE;AAFW,CAAzB;AAKA,eAAeF,SAAf","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport DataTableContext from './DataTableContext';\n\nconst RowStatus = ({ className, statusText }) => {\n  const { page, rows, itemCount } = useContext(DataTableContext);\n  const pageSize = page?.length || rows?.length;\n\n  if (!pageSize) {\n    return null;\n  }\n  return (\n    <div className={className}>\n      <FormattedMessage\n        id=\"pgn.DataTable.RowStatus.statusText\"\n        defaultMessage={statusText}\n        description=\"A text describing how many rows is shown in the table\"\n        values={{ itemCount, pageSize }}\n      />\n    </div>\n  );\n};\n\nRowStatus.propTypes = {\n  /** Specifies class name to append to the base element. */\n  className: PropTypes.string,\n  /** A text describing how many rows is shown in the table.  */\n  statusText: PropTypes.string,\n};\n\nRowStatus.defaultProps = {\n  className: undefined,\n  statusText: 'Showing {pageSize} of {itemCount}',\n};\n\nexport default RowStatus;\n"],"file":"RowStatus.js"}