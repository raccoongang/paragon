{"version":3,"sources":["../../../src/DataTable/filters/DropdownFilter.jsx"],"names":["React","useRef","PropTypes","Form","newId","DEFAULT_VALUE","DropdownFilter","column","setFilter","Header","filterChoices","getHeaderProps","ariaLabel","key","onChange","e","target","value","undefined","current","map","name","number","propTypes","shape","func","isRequired","oneOfType","node","arrayOf","string"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACEC,IADF,QAEO,OAFP;AAGA,SAASC,KAAT,QAAsB,aAAtB;AAEA,IAAMC,aAAa,GAAG,EAAtB;;AAEA,SAASC,cAAT,OAIG;AAAA,yBAHDC,MAGC;AAAA,MAFCC,SAED,eAFCA,SAED;AAAA,MAFYC,MAEZ,eAFYA,MAEZ;AAAA,MAFoBC,aAEpB,eAFoBA,aAEpB;AAAA,MAFmCC,cAEnC,eAFmCA,cAEnC;AACD;AACA,MAAMC,SAAS,GAAGX,MAAM,CAACG,KAAK,iCAA0BO,cAAc,GAAGE,GAA3C,OAAN,CAAxB;;AACA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,CAAD,EAAO;AACtB,QAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,KAAmBZ,aAAvB,EAAsC;AACpC;AACA,aAAOG,SAAS,CAACU,SAAD,CAAhB;AACD;;AACD,WAAOV,SAAS,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB;AACD,GAND;;AAQA,sBACE,oBAAC,IAAD,CAAM,KAAN,qBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEL,SAAS,CAACO,OAA1B;AAAmC,IAAA,SAAS,EAAC;AAA7C,KAAwDV,MAAxD,CADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,EAAE,EAAC,QADL;AAEE,IAAA,OAAO,EAAEJ,aAFX;AAGE,IAAA,QAAQ,EAAES,QAHZ;AAIE,uBAAiBF,SAAS,CAACO;AAJ7B,kBAME;AAAQ,IAAA,KAAK,EAAEd;AAAf,KAA+BI,MAA/B,CANF,EAOGC,aAAa,CAACU,GAAd,CAAkB;AAAA,QAAGC,IAAH,SAAGA,IAAH;AAAA,QAASC,MAAT,SAASA,MAAT;AAAA,QAAiBL,KAAjB,SAAiBA,KAAjB;AAAA,wBAA8B;AAAQ,MAAA,GAAG,EAAEA,KAAb;AAAoB,MAAA,KAAK,EAAEA;AAA3B,OAAmCI,IAAnC,OAA0CC,MAAM,eAAQA,MAAR,MAAhD,CAA9B;AAAA,GAAlB,CAPH,CAFF,CADF;AAcD;;AAEDhB,cAAc,CAACiB,SAAf,GAA2B;AACzB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEhB,EAAAA,MAAM,EAAEL,SAAS,CAACsB,KAAV,CAAgB;AACtBhB,IAAAA,SAAS,EAAEN,SAAS,CAACuB,IAAV,CAAeC,UADJ;AAEtBjB,IAAAA,MAAM,EAAEP,SAAS,CAACyB,SAAV,CAAoB,CAACzB,SAAS,CAACuB,IAAX,EAAiBvB,SAAS,CAAC0B,IAA3B,CAApB,EAAsDF,UAFxC;AAGtBhB,IAAAA,aAAa,EAAER,SAAS,CAAC2B,OAAV,CAAkB3B,SAAS,CAACsB,KAAV,CAAgB;AAC/CH,MAAAA,IAAI,EAAEnB,SAAS,CAAC4B,MAAV,CAAiBJ,UADwB;AAE/CJ,MAAAA,MAAM,EAAEpB,SAAS,CAACoB,MAF6B;AAG/CL,MAAAA,KAAK,EAAEf,SAAS,CAACyB,SAAV,CAAoB,CAACzB,SAAS,CAAC4B,MAAX,EAAmB5B,SAAS,CAACoB,MAA7B,CAApB,EAA0DI;AAHlB,KAAhB,CAAlB,EAIXA,UAPkB;AAQtBf,IAAAA,cAAc,EAAET,SAAS,CAACuB,IAAV,CAAeC;AART,GAAhB,EASLA;AArBsB,CAA3B;AAwBA,eAAepB,cAAf","sourcesContent":["import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n} from '../..';\nimport { newId } from '../../utils';\n\nconst DEFAULT_VALUE = '';\n\nfunction DropdownFilter({\n  column: {\n    setFilter, Header, filterChoices, getHeaderProps,\n  },\n}) {\n  // creates a unique label that does not change on re-render in case there are multiple checkbox filters in the dom\n  const ariaLabel = useRef(newId(`dropdown-filter-label-${getHeaderProps().key}-`));\n  const onChange = (e) => {\n    if (e.target.value === DEFAULT_VALUE) {\n      // setting undefined resets the filter\n      return setFilter(undefined);\n    }\n    return setFilter(e.target.value);\n  };\n\n  return (\n    <Form.Group>\n      <Form.Label id={ariaLabel.current} className=\"sr-only\">{Header}</Form.Label>\n      <Form.Control\n        as=\"select\"\n        default={DEFAULT_VALUE}\n        onChange={onChange}\n        aria-labelledby={ariaLabel.current}\n      >\n        <option value={DEFAULT_VALUE}>{Header}</option>\n        {filterChoices.map(({ name, number, value }) => (<option key={value} value={value}>{name} {number && `(${number})`}</option>))}\n      </Form.Control>\n    </Form.Group>\n  );\n}\n\nDropdownFilter.propTypes = {\n  /**\n   * Specifies a column object.\n   *\n   * `setFilter`: Function to set the filter value.\n   *\n   * `Header`: Column header used for labels and placeholders.\n   *\n   * `filterChoices`: Specifies array of choices.\n   *\n   * `getHeaderProps`: Generates a key unique to the column being filtered.\n   */\n  column: PropTypes.shape({\n    setFilter: PropTypes.func.isRequired,\n    Header: PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n    filterChoices: PropTypes.arrayOf(PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.number,\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    })).isRequired,\n    getHeaderProps: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default DropdownFilter;\n"],"file":"DropdownFilter.js"}