{"version":3,"sources":["../../src/DataTable/TableHeaderCell.jsx"],"names":["React","PropTypes","classNames","Icon","ArrowDropDown","ArrowDropUp","ArrowDropUpDown","SortIndicator","isSorted","isSortedDesc","opacity","propTypes","bool","isRequired","TableHeaderCell","getHeaderProps","render","canSort","getSortByToggleProps","headerClassName","toggleProps","defaultProps","func","string"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,aAAT,EAAwBC,WAAxB,EAAqCC,eAArC,QAA4D,aAA5D;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAgC;AAAA,MAA7BC,QAA6B,QAA7BA,QAA6B;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;;AAC3D,MAAI,CAACD,QAAL,EAAe;AACb,wBAAO,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEE,QAAAA,OAAO,EAAE;AAAX,OAAb;AAA+B,MAAA,GAAG,EAAEJ;AAApC,MAAP;AACD;;AAED,MAAIG,YAAJ,EAAkB;AAChB,wBAAO,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEJ;AAAX,MAAP;AACD;;AAED,sBAAO,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAED;AAAX,IAAP;AACD,CAVM;AAYPG,aAAa,CAACI,SAAd,GAA0B;AACxBH,EAAAA,QAAQ,EAAEP,SAAS,CAACW,IAAV,CAAeC,UADD;AAExBJ,EAAAA,YAAY,EAAER,SAAS,CAACW,IAAV,CAAeC;AAFL,CAA1B;;AAKA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,QAElB;AAAA,MADJC,cACI,SADJA,cACI;AAAA,MADYC,MACZ,SADYA,MACZ;AAAA,MADoBC,OACpB,SADoBA,OACpB;AAAA,MAD6BC,oBAC7B,SAD6BA,oBAC7B;AAAA,MADmDV,QACnD,SADmDA,QACnD;AAAA,MAD6DC,YAC7D,SAD6DA,YAC7D;AAAA,MAD2EU,eAC3E,SAD2EA,eAC3E;AACJ,MAAMC,WAAW,GAAGH,OAAO,IAAIC,oBAAX,GAAkCA,oBAAoB,EAAtD,GAA2D,EAA/E;AAEA,sBACE,0BAAQH,cAAc,CAACK,WAAD,CAAtB,eACE;AAAM,IAAA,SAAS,EAAElB,UAAU,CAAC,2BAAD,EAA8BiB,eAA9B;AAA3B,kBACE,kCAAOH,MAAM,CAAC,QAAD,CAAb,CADF,EAEGC,OAAO,iBAAI,oBAAC,aAAD;AAAe,IAAA,QAAQ,EAAET,QAAzB;AAAmC,IAAA,YAAY,EAAEC,YAAY,IAAI;AAAjE,IAFd,CADF,CADF;AAQD,CAbD;;AAeAK,eAAe,CAACO,YAAhB,GAA+B;AAC7BF,EAAAA,eAAe,EAAE,IADY;AAE7BX,EAAAA,QAAQ,EAAE,KAFmB;AAG7BC,EAAAA,YAAY,EAAE,KAHe;AAI7BQ,EAAAA,OAAO,EAAE,KAJoB;AAK7BC,EAAAA,oBAAoB,EAAE,gCAAM,CAAE;AALD,CAA/B;AAQAJ,eAAe,CAACH,SAAhB,GAA4B;AAC1B;AACAI,EAAAA,cAAc,EAAEd,SAAS,CAACqB,IAAV,CAAeT,UAFL;;AAG1B;AACAL,EAAAA,QAAQ,EAAEP,SAAS,CAACW,IAJM;;AAK1B;AACAI,EAAAA,MAAM,EAAEf,SAAS,CAACqB,IAAV,CAAeT,UANG;;AAO1B;AACAJ,EAAAA,YAAY,EAAER,SAAS,CAACW,IARE;;AAS1B;AACAM,EAAAA,oBAAoB,EAAEjB,SAAS,CAACqB,IAVN;;AAW1B;AACAL,EAAAA,OAAO,EAAEhB,SAAS,CAACW,IAZO;;AAa1B;AACAO,EAAAA,eAAe,EAAElB,SAAS,CAACsB;AAdD,CAA5B;AAiBA,eAAeT,eAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Icon from '../Icon';\nimport { ArrowDropDown, ArrowDropUp, ArrowDropUpDown } from '../../icons';\n\nexport const SortIndicator = ({ isSorted, isSortedDesc }) => {\n  if (!isSorted) {\n    return <Icon style={{ opacity: 0.5 }} src={ArrowDropUpDown} />;\n  }\n\n  if (isSortedDesc) {\n    return <Icon src={ArrowDropUp} />;\n  }\n\n  return <Icon src={ArrowDropDown} />;\n};\n\nSortIndicator.propTypes = {\n  isSorted: PropTypes.bool.isRequired,\n  isSortedDesc: PropTypes.bool.isRequired,\n};\n\nconst TableHeaderCell = ({\n  getHeaderProps, render, canSort, getSortByToggleProps, isSorted, isSortedDesc, headerClassName,\n}) => {\n  const toggleProps = canSort && getSortByToggleProps ? getSortByToggleProps() : {};\n\n  return (\n    <th {...getHeaderProps(toggleProps)}>\n      <span className={classNames('d-flex align-items-center', headerClassName)}>\n        <span>{render('Header')}</span>\n        {canSort && <SortIndicator isSorted={isSorted} isSortedDesc={isSortedDesc || false} />}\n      </span>\n    </th>\n  );\n};\n\nTableHeaderCell.defaultProps = {\n  headerClassName: null,\n  isSorted: false,\n  isSortedDesc: false,\n  canSort: false,\n  getSortByToggleProps: () => {},\n};\n\nTableHeaderCell.propTypes = {\n  /** Returns props for the th element */\n  getHeaderProps: PropTypes.func.isRequired,\n  /** Indicates whether or not a column is sorted */\n  isSorted: PropTypes.bool,\n  /** Renders the header content. Passed the string 'Header' */\n  render: PropTypes.func.isRequired,\n  /** Indicates whether the column is sorted in descending order */\n  isSortedDesc: PropTypes.bool,\n  /** Gets props related to sorting that will be passed to th */\n  getSortByToggleProps: PropTypes.func,\n  /** Indicates whether a column is sortable */\n  canSort: PropTypes.bool,\n  /** Class(es) to be applied to header cells */\n  headerClassName: PropTypes.string,\n};\n\nexport default TableHeaderCell;\n"],"file":"TableHeaderCell.js"}