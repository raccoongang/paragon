{"version":3,"sources":["../../src/Nav/index.jsx"],"names":["BaseNav","BaseNavDropdown","BaseNavItem","BaseNavLink","PropTypes","Nav","NavItem","NavLink","NavDropdown","NavDropdownItem","Item","NavDropdownDivider","Divider","propTypes","activeKey","oneOfType","string","number","as","elementType","fill","bool","justify","navbar","onKeyDown","func","onSelect","role","variant","oneOf","bsPrefix","active","disabled","eventKey","href","id","isRequired","title","node","menuRole","menuVariant","onClick","renderMenuOnMount","rootCloseEvent","defaultProps","undefined","Link"],"mappings":"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","sourcesContent":["import BaseNav from 'react-bootstrap/Nav';\nimport BaseNavDropdown from 'react-bootstrap/NavDropdown';\nimport BaseNavItem from 'react-bootstrap/NavItem';\nimport BaseNavLink from 'react-bootstrap/NavLink';\nimport PropTypes from 'prop-types';\n\nconst Nav = BaseNav;\nconst NavItem = BaseNavItem;\nconst NavLink = BaseNavLink;\nconst NavDropdown = BaseNavDropdown;\nconst NavDropdownItem = BaseNavDropdown.Item;\nconst NavDropdownDivider = BaseNavDropdown.Divider;\n\nNav.propTypes = {\n  ...Nav.propTypes,\n  /** Marks the NavItem with a matching eventKey (or href if present) as active. */\n  activeKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /** Set a custom element for this component. */\n  as: PropTypes.elementType,\n  /** Have all `NavItems` proportionately fill all available width. */\n  fill: PropTypes.bool,\n  /** Have all `NavItems` evenly fill all available width. */\n  justify: PropTypes.bool,\n  /**\n   * Apply styling an alignment for use in a `Navbar`.\n   * This prop will be set automatically when the `Nav` is used inside a `Navbar`.\n   */\n  navbar: PropTypes.bool,\n  onKeyDown: PropTypes.func,\n  /** A callback fired when a NavItem is selected. */\n  onSelect: PropTypes.string,\n  /**\n   * ARIA role for the `Nav`, in the context of a `TabContainer`,\n   * the default will be set to \"tablist\", but can be overridden by the `Nav` when set explicitly.\n   */\n  role: PropTypes.string,\n  /** The visual variant of the nav items. */\n  variant: PropTypes.oneOf(['tabs', 'pills']),\n  /** Change the underlying component CSS base class name and modifier class names prefix. */\n  bsPrefix: PropTypes.string,\n};\n\nNavItem.propTypes = {\n  ...NavItem.propTypes,\n  /** Set a custom element for this component. */\n  as: PropTypes.elementType,\n  /** Change the underlying component CSS base class name and modifier class names prefix. */\n  bsPrefix: PropTypes.string,\n};\n\nNavLink.propTypes = {\n  ...NavLink.propTypes,\n  /** The active state of the `NavItem` item. */\n  active: PropTypes.bool,\n  /** You can use a custom element type for this component. */\n  as: PropTypes.elementType,\n  /** The disabled state of the `NavItem` item. */\n  disabled: PropTypes.bool,\n  /**\n   * Uniquely identifies the `NavItem` amongst its siblings,\n   * used to determine and control the active state of the parent `Nav`\n   */\n  eventKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /** The HTML href attribute for the `NavLink` */\n  href: PropTypes.string,\n  /** The ARIA role for the `NavLink`, In the context of a 'tablist' parent `Nav`, the role defaults to 'tab' */\n  role: PropTypes.string,\n  /** Change the underlying component CSS base class name and modifier class names prefix. */\n  bsPrefix: PropTypes.string,\n};\n\nNavDropdown.propTypes = {\n  ...NavDropdown.propTypes,\n  /** An html id attribute for the `Toggle` button, necessary for assistive technologies, such as screen readers. */\n  id: PropTypes.string.isRequired,\n  /** The content of the non-toggle Button. */\n  title: PropTypes.node.isRequired,\n  /** Style the toggle `NavLink` as active */\n  active: PropTypes.bool,\n  /** Disables the toggle `NavLink` */\n  disabled: PropTypes.bool,\n  /** An ARIA accessible role applied to the `Menu` component. */\n  menuRole: PropTypes.string,\n  /** Menu color variant. Omitting this will use the default light color. */\n  menuVariant: PropTypes.oneOf(['dark']),\n  /** An `onClick` handler passed to the `Toggle` component */\n  onClick: PropTypes.func,\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown. */\n  renderMenuOnMount: PropTypes.bool,\n  /** Which event when fired outside the component will cause it to be closed. */\n  rootCloseEvent: PropTypes.string,\n  /** Change the underlying component CSS base class name and modifier class names prefix. */\n  bsPrefix: PropTypes.string,\n};\n\nNav.defaultProps = {\n  activeKey: undefined,\n  as: undefined,\n  fill: false,\n  justify: false,\n  navbar: undefined,\n  onKeyDown: undefined,\n  onSelect: undefined,\n  role: undefined,\n  variant: undefined,\n  bsPrefix: 'nav',\n};\n\nNavDropdown.defaultProps = {\n  active: undefined,\n  disabled: undefined,\n  menuRole: undefined,\n  menuVariant: undefined,\n  onClick: undefined,\n  renderMenuOnMount: undefined,\n  rootCloseEvent: undefined,\n  bsPrefix: undefined,\n};\n\nNavItem.defaultProps = {\n  as: 'div',\n  bsPrefix: 'nav-item',\n};\n\nNavLink.defaultProps = {\n  active: undefined,\n  as: 'a',\n  disabled: false,\n  eventKey: undefined,\n  href: undefined,\n  role: undefined,\n  bsPrefix: 'nav-link',\n};\n\nNav.Item = NavItem;\nNav.Link = NavLink;\nNavDropdown.Item = NavDropdownItem;\nNavDropdown.Divider = NavDropdownDivider;\n\nexport { NavDropdown, NavItem, NavLink };\nexport default Nav;\n"],"file":"index.js"}