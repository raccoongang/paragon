{"version":3,"sources":["../../src/ProductTour/CheckpointActionRow.jsx"],"names":["React","PropTypes","Button","CheckpointActionRow","forwardRef","ref","advanceButtonText","dismissButtonText","endButtonText","isLastCheckpoint","onAdvance","onDismiss","onEnd","defaultProps","propTypes","node","bool","func"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,IAAvB;AAEA,IAAMC,mBAAmB,gBAAGH,KAAK,CAACI,UAAN,CAAiB,gBAQ1CC,GAR0C;AAAA,MAC3CC,iBAD2C,QAC3CA,iBAD2C;AAAA,MAE3CC,iBAF2C,QAE3CA,iBAF2C;AAAA,MAG3CC,aAH2C,QAG3CA,aAH2C;AAAA,MAI3CC,gBAJ2C,QAI3CA,gBAJ2C;AAAA,MAK3CC,SAL2C,QAK3CA,SAL2C;AAAA,MAM3CC,SAN2C,QAM3CA,SAN2C;AAAA,MAO3CC,KAP2C,QAO3CA,KAP2C;AAAA,sBAS3C;AAAK,IAAA,SAAS,EAAC,4BAAf;AAA4C,IAAA,GAAG,EAAEP;AAAjD,KACG,CAACI,gBAAD,iBACC,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,SAAS,EAAC,gCAFZ;AAGE,IAAA,OAAO,EAAEE;AAHX,KAKGJ,iBALH,CAFJ,eAUE,oBAAC,MAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,SAAS,EAAC,gCAFZ;AAGE,IAAA,OAAO,EAAC,SAHV;AAIE,IAAA,OAAO,EAAEE,gBAAgB,GAAGG,KAAH,GAAWF;AAJtC,KAMGD,gBAAgB,GAAGD,aAAH,GAAmBF,iBANtC,CAVF,CAT2C;AAAA,CAAjB,CAA5B;AA8BAH,mBAAmB,CAACU,YAApB,GAAmC;AACjCP,EAAAA,iBAAiB,EAAE,EADc;AAEjCC,EAAAA,iBAAiB,EAAE,EAFc;AAGjCC,EAAAA,aAAa,EAAE,EAHkB;AAIjCC,EAAAA,gBAAgB,EAAE,KAJe;AAKjCC,EAAAA,SAAS,EAAE,qBAAM,CAAE,CALc;AAMjCC,EAAAA,SAAS,EAAE,qBAAM,CAAE,CANc;AAOjCC,EAAAA,KAAK,EAAE,iBAAM,CAAE;AAPkB,CAAnC;AAUAT,mBAAmB,CAACW,SAApB,GAAgC;AAC9B;AACAR,EAAAA,iBAAiB,EAAEL,SAAS,CAACc,IAFC;;AAG9B;AACAR,EAAAA,iBAAiB,EAAEN,SAAS,CAACc,IAJC;;AAK9B;AACAP,EAAAA,aAAa,EAAEP,SAAS,CAACc,IANK;;AAO9B;AACAN,EAAAA,gBAAgB,EAAER,SAAS,CAACe,IARE;;AAS9B;AACAN,EAAAA,SAAS,EAAET,SAAS,CAACgB,IAVS;;AAW9B;AACAN,EAAAA,SAAS,EAAEV,SAAS,CAACgB,IAZS;;AAa9B;AACAL,EAAAA,KAAK,EAAEX,SAAS,CAACgB;AAda,CAAhC;AAiBA,eAAed,mBAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '..';\n\nconst CheckpointActionRow = React.forwardRef(({\n  advanceButtonText,\n  dismissButtonText,\n  endButtonText,\n  isLastCheckpoint,\n  onAdvance,\n  onDismiss,\n  onEnd,\n}, ref) => (\n  <div className=\"pgn__checkpoint-action-row\" ref={ref}>\n    {!isLastCheckpoint && (\n      <Button\n        variant=\"tertiary\"\n        className=\"pgn__checkpoint-button_dismiss\"\n        onClick={onDismiss}\n      >\n        {dismissButtonText}\n      </Button>\n    )}\n    <Button\n      autoFocus\n      className=\"pgn__checkpoint-button_advance\"\n      variant=\"primary\"\n      onClick={isLastCheckpoint ? onEnd : onAdvance}\n    >\n      {isLastCheckpoint ? endButtonText : advanceButtonText}\n    </Button>\n  </div>\n));\n\nCheckpointActionRow.defaultProps = {\n  advanceButtonText: '',\n  dismissButtonText: '',\n  endButtonText: '',\n  isLastCheckpoint: false,\n  onAdvance: () => {},\n  onDismiss: () => {},\n  onEnd: () => {},\n};\n\nCheckpointActionRow.propTypes = {\n  /** The text displayed on the button used to advance the tour. */\n  advanceButtonText: PropTypes.node,\n  /** The text displayed on the button used to dismiss the tour. */\n  dismissButtonText: PropTypes.node,\n  /** The text displayed on the button used to end the tour. */\n  endButtonText: PropTypes.node,\n  /** Whether the parent Checkpoint is the last in the tour. */\n  isLastCheckpoint: PropTypes.bool,\n  /** A function that runs when triggering the `onClick` event of the advance button. */\n  onAdvance: PropTypes.func,\n  /** A function that runs when triggering the `onClick` event of the dismiss button. */\n  onDismiss: PropTypes.func,\n  /** A function that runs when triggering the `onClick` event of the advance button if isLastCheckpoint is true. */\n  onEnd: PropTypes.func,\n};\n\nexport default CheckpointActionRow;\n"],"file":"CheckpointActionRow.js"}