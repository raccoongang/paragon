{"version":3,"sources":["../../src/Tooltip/index.jsx"],"names":["React","PropTypes","classNames","BaseTooltip","PLACEMENT_VARIANTS","Tooltip","forwardRef","ref","children","variant","props","className","propTypes","id","string","isRequired","placement","oneOf","arrowProps","shape","oneOfType","func","current","element","style","object","show","bool","popper","any","bsPrefix","node","defaultProps","undefined"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AAEA,IAAMC,kBAAkB,GAAG,CACzB,YADyB,EAEzB,MAFyB,EAGzB,UAHyB,EAIzB,WAJyB,EAKzB,KALyB,EAMzB,SANyB,EAOzB,aAPyB,EAQzB,OARyB,EASzB,WATyB,EAUzB,YAVyB,EAWzB,QAXyB,EAYzB,cAZyB,EAazB,UAbyB,EAczB,MAdyB,EAezB,YAfyB,CAA3B;AAkBA,IAAMC,OAAO,gBAAGL,KAAK,CAACM,UAAN,CAAiB,gBAI9BC,GAJ8B;AAAA,MAC/BC,QAD+B,QAC/BA,QAD+B;AAAA,MAE/BC,OAF+B,QAE/BA,OAF+B;AAAA,MAG5BC,KAH4B;;AAAA,sBAK/B,oBAAC,WAAD,eACMA,KADN;AAEE,IAAA,SAAS,EAAER,UAAU,CAAC;AAAE,uBAAiBO,OAAO,KAAK;AAA/B,KAAD,EAA2CC,KAAK,CAACC,SAAjD,CAFvB;AAGE,IAAA,GAAG,EAAEJ;AAHP,MAKGC,QALH,CAL+B;AAAA,CAAjB,CAAhB;AAcAH,OAAO,CAACO,SAAR,mCACKT,WAAW,CAACS,SADjB;AAEE;AACAC,EAAAA,EAAE,EAAEZ,SAAS,CAACa,MAAV,CAAiBC,UAHvB;;AAIE;AACF;AACA;AACA;AACA;AACEC,EAAAA,SAAS,EAAEf,SAAS,CAACgB,KAAV,CAAgBb,kBAAhB,CATb;;AAUE;AACF;AACA;AACA;AACA;AACEc,EAAAA,UAAU,EAAEjB,SAAS,CAACkB,KAAV,CAAgB;AAC1BZ,IAAAA,GAAG,EAAEN,SAAS,CAACmB,SAAV,CAAoB,CACvBnB,SAAS,CAACoB,IADa,EAEvBpB,SAAS,CAACkB,KAAV,CAAgB;AAAEG,MAAAA,OAAO,EAAErB,SAAS,CAACsB;AAArB,KAAhB,CAFuB,CAApB,CADqB;AAK1BC,IAAAA,KAAK,EAAEvB,SAAS,CAACwB,MALS,CAKD;;AALC,GAAhB,CAfd;;AAsBE;AACAC,EAAAA,IAAI,EAAEzB,SAAS,CAAC0B,IAvBlB;;AAwBE;AACAC,EAAAA,MAAM,EAAE3B,SAAS,CAAC4B,GAzBpB;AAyByB;;AACvB;AACAC,EAAAA,QAAQ,EAAE7B,SAAS,CAACa,MA3BtB;;AA4BE;AACAN,EAAAA,QAAQ,EAAEP,SAAS,CAAC8B,IA7BtB;;AA8BE;AACApB,EAAAA,SAAS,EAAEV,SAAS,CAACa,MA/BvB;;AAgCE;AACAL,EAAAA,OAAO,EAAER,SAAS,CAACa;AAjCrB;AAoCAT,OAAO,CAAC2B,YAAR,mCACK3B,OAAO,CAAC2B,YADb;AAEEnB,EAAAA,EAAE,EAAEoB,SAFN;AAGEjB,EAAAA,SAAS,EAAE,OAHb;AAIEE,EAAAA,UAAU,EAAEe,SAJd;AAKEP,EAAAA,IAAI,EAAEO,SALR;AAMEL,EAAAA,MAAM,EAAEK,SANV;AAOEzB,EAAAA,QAAQ,EAAEyB,SAPZ;AAQEtB,EAAAA,SAAS,EAAEsB,SARb;AASExB,EAAAA,OAAO,EAAEwB,SATX;AAUEH,EAAAA,QAAQ,EAAE;AAVZ;AAaA,eAAezB,OAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport BaseTooltip from 'react-bootstrap/Tooltip';\n\nconst PLACEMENT_VARIANTS = [\n  'auto-start',\n  'auto',\n  'auto-end',\n  'top-start',\n  'top',\n  'top-end',\n  'right-start',\n  'right',\n  'right-end',\n  'bottom-end',\n  'bottom',\n  'bottom-start',\n  'left-end',\n  'left',\n  'left-start',\n];\n\nconst Tooltip = React.forwardRef(({\n  children,\n  variant,\n  ...props\n}, ref) => (\n  <BaseTooltip\n    {...props}\n    className={classNames({ 'tooltip-light': variant === 'light' }, props.className)}\n    ref={ref}\n  >\n    {children}\n  </BaseTooltip>\n));\n\nTooltip.propTypes = {\n  ...BaseTooltip.propTypes,\n  /** An html id attribute, necessary for accessibility. */\n  id: PropTypes.string.isRequired,\n  /**\n   * Sets the direction the `Tooltip` is positioned towards.\n   *\n   * This is generally provided by the `Overlay` component positioning the tooltip.\n   */\n  placement: PropTypes.oneOf(PLACEMENT_VARIANTS),\n  /**\n   * An `Overlay` injected set of props for positioning the `Tooltip` arrow.\n   *\n   * This is generally provided by the `Overlay` component positioning the tooltip.\n   */\n  arrowProps: PropTypes.shape({\n    ref: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.shape({ current: PropTypes.element }),\n    ]),\n    style: PropTypes.object, // eslint-disable-line\n  }),\n  /** Whether the `Overlay` is shown. */\n  show: PropTypes.bool,\n  /** A `Popper.js` config object passed to the the underlying popper instance. */\n  popper: PropTypes.any, // eslint-disable-line\n  /** Overrides underlying component base CSS class name */\n  bsPrefix: PropTypes.string,\n  /** Specifies the content of the `Tooltip` */\n  children: PropTypes.node,\n  /** Specifies class name to append to the base element */\n  className: PropTypes.string,\n  /** The visual style of the `Tooltip` */\n  variant: PropTypes.string,\n};\n\nTooltip.defaultProps = {\n  ...Tooltip.defaultProps,\n  id: undefined,\n  placement: 'right',\n  arrowProps: undefined,\n  show: undefined,\n  popper: undefined,\n  children: undefined,\n  className: undefined,\n  variant: undefined,\n  bsPrefix: 'tooltip',\n};\n\nexport default Tooltip;\n"],"file":"index.js"}