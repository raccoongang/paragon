{"version":3,"sources":["../../src/Card/CardFooter.jsx"],"names":["React","useContext","PropTypes","classNames","CardContext","CardFooter","forwardRef","ref","children","className","isStacked","textElement","orientation","cardOrientation","footerOrientation","wrapperClassName","textElementClassName","propTypes","node","isRequired","string","bool","oneOf","defaultProps","undefined"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,IAAMC,UAAU,gBAAGL,KAAK,CAACM,UAAN,CAAiB,gBAMjCC,GANiC,EAMzB;AAAA,MALTC,QAKS,QALTA,QAKS;AAAA,MAJTC,SAIS,QAJTA,SAIS;AAAA,MAHTC,SAGS,QAHTA,SAGS;AAAA,MAFTC,WAES,QAFTA,WAES;AAAA,MADTC,WACS,QADTA,WACS;;AACT,oBAAyCX,UAAU,CAACG,WAAD,CAAnD;AAAA,MAAqBS,eAArB,eAAQD,WAAR;;AACA,MAAME,iBAAiB,GAAGF,WAAW,IAAIC,eAAzC;AACA,MAAME,gBAAgB,8BAAuBD,iBAAvB,SAA2CJ,SAAS,GAAG,UAAH,GAAgB,EAApE,CAAtB;AACA,MAAMM,oBAAoB,mCAA4BF,iBAA5B,SAAgDJ,SAAS,GAAG,UAAH,GAAgB,EAAzE,CAA1B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEP,UAAU,CAACM,SAAD,EAAYM,gBAAZ,CAA1B;AAAyD,IAAA,GAAG,EAAER;AAA9D,KACGI,WAAW,iBAAI;AAAK,IAAA,SAAS,EAAEK;AAAhB,KAAuCL,WAAvC,CADlB,EAEGH,QAFH,CADF;AAMD,CAlBkB,CAAnB;AAoBAH,UAAU,CAACY,SAAX,GAAuB;AACrB;AACAT,EAAAA,QAAQ,EAAEN,SAAS,CAACgB,IAAV,CAAeC,UAFJ;;AAGrB;AACAV,EAAAA,SAAS,EAAEP,SAAS,CAACkB,MAJA;;AAKrB;AACAT,EAAAA,WAAW,EAAET,SAAS,CAACgB,IANF;;AAOrB;AACAR,EAAAA,SAAS,EAAER,SAAS,CAACmB,IARA;;AASrB;AACAT,EAAAA,WAAW,EAAEV,SAAS,CAACoB,KAAV,CAAgB,CAAC,YAAD,EAAe,UAAf,CAAhB;AAVQ,CAAvB;AAaAjB,UAAU,CAACkB,YAAX,GAA0B;AACxBd,EAAAA,SAAS,EAAEe,SADa;AAExBb,EAAAA,WAAW,EAAEa,SAFW;AAGxBd,EAAAA,SAAS,EAAE,KAHa;AAIxBE,EAAAA,WAAW,EAAEY;AAJW,CAA1B;AAOA,eAAenB,UAAf","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CardContext from './CardContext';\n\nconst CardFooter = React.forwardRef(({\n  children,\n  className,\n  isStacked,\n  textElement,\n  orientation,\n}, ref) => {\n  const { orientation: cardOrientation } = useContext(CardContext);\n  const footerOrientation = orientation || cardOrientation;\n  const wrapperClassName = `pgn__card-footer ${footerOrientation}${isStacked ? '-stacked' : ''}`;\n  const textElementClassName = `pgn__card-footer-text ${footerOrientation}${isStacked ? '-stacked' : ''}`;\n\n  return (\n    <div className={classNames(className, wrapperClassName)} ref={ref}>\n      {textElement && <div className={textElementClassName}>{textElement}</div>}\n      {children}\n    </div>\n  );\n});\n\nCardFooter.propTypes = {\n  /** Specifies contents of the component. */\n  children: PropTypes.node.isRequired,\n  /** Specifies class name to append to the base element. */\n  className: PropTypes.string,\n  /** Optional node to display near actions. Should be either a plain text or an element containing text (e.g. link). */\n  textElement: PropTypes.node,\n  /** Specifies whether to use stacked variant. */\n  isStacked: PropTypes.bool,\n  /** Specifies which orientation to use. This prop will override context value if provided. */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n};\n\nCardFooter.defaultProps = {\n  className: undefined,\n  textElement: undefined,\n  isStacked: false,\n  orientation: undefined,\n};\n\nexport default CardFooter;\n"],"file":"CardFooter.js"}