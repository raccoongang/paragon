{"version":3,"sources":["../../src/Chip/index.jsx"],"names":["React","PropTypes","classNames","Icon","STYLE_VARIANTS","Chip","as","children","className","variant","active","iconBefore","iconAfter","props","elementProps","elementContent","createElement","href","propTypes","elementType","string","node","oneOf","bool","disabled","onClick","func","defaultProps","undefined"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,IAAMC,cAAc,GAAG,CACrB,OADqB,EAErB,MAFqB,CAAvB;;AAKA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OASP;AAAA,MARJC,EAQI,QARJA,EAQI;AAAA,MAPJC,QAOI,QAPJA,QAOI;AAAA,MANJC,SAMI,QANJA,SAMI;AAAA,MALJC,OAKI,QALJA,OAKI;AAAA,MAJJC,MAII,QAJJA,MAII;AAAA,MAHJC,UAGI,QAHJA,UAGI;AAAA,MAFJC,SAEI,QAFJA,SAEI;AAAA,MADDC,KACC;;AACJ,MAAMC,YAAY,mCACbD,KADa;AAEhBL,IAAAA,SAAS,EAAEN,UAAU,CACnB,WADmB,sBAENO,OAFM,GAGnB;AAAEC,MAAAA,MAAM,EAANA;AAAF,KAHmB,EAInBF,SAJmB;AAFL,IAAlB;;AASA,MAAMO,cAAc,gBAClB,0CACGJ,UAAU,iBAAI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAET,UAAU,CAAC,kBAAD,CAA3B;AAAiD,IAAA,GAAG,EAAES;AAAtD,IADjB,EAEGJ,QAFH,EAGGK,SAAS,iBAAI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEV,UAAU,CAAC,iBAAD,CAA3B;AAAgD,IAAA,GAAG,EAAEU;AAArD,IAHhB,CADF;AAOA,sBAAOZ,KAAK,CAACgB,aAAN,CAAoBH,KAAK,CAACI,IAAN,GAAa,GAAb,GAAmBX,EAAvC,EAA2CQ,YAA3C,EAAyDC,cAAzD,CAAP;AACD,CA3BD;;AA6BAV,IAAI,CAACa,SAAL,GAAiB;AACf;AACAZ,EAAAA,EAAE,EAAEL,SAAS,CAACkB,WAFC;;AAGf;AACAX,EAAAA,SAAS,EAAEP,SAAS,CAACmB,MAJN;;AAKf;AACAb,EAAAA,QAAQ,EAAEN,SAAS,CAACoB,IANL;;AAOf;AACAZ,EAAAA,OAAO,EAAER,SAAS,CAACqB,KAAV,CAAgBlB,cAAhB,CARM;;AASf;AACAM,EAAAA,MAAM,EAAET,SAAS,CAACsB,IAVH;;AAWf;AACAC,EAAAA,QAAQ,EAAEvB,SAAS,CAACsB,IAZL;;AAaf;AACAN,EAAAA,IAAI,EAAEhB,SAAS,CAACmB,MAdD;;AAef;AACF;AACA;AACA;AACA;AACA;AACET,EAAAA,UAAU,EAAEV,SAAS,CAACoB,IArBP;;AAsBf;AACF;AACA;AACA;AACA;AACA;AACET,EAAAA,SAAS,EAAEX,SAAS,CAACoB,IA5BN;;AA6Bf;AACAI,EAAAA,OAAO,EAAExB,SAAS,CAACyB;AA9BJ,CAAjB;AAiCArB,IAAI,CAACsB,YAAL,GAAoB;AAClBrB,EAAAA,EAAE,EAAE,QADc;AAElBE,EAAAA,SAAS,EAAEoB,SAFO;AAGlBrB,EAAAA,QAAQ,EAAE,IAHQ;AAIlBE,EAAAA,OAAO,EAAE,OAJS;AAKlBC,EAAAA,MAAM,EAAE,KALU;AAMlBc,EAAAA,QAAQ,EAAE,KANQ;AAOlBP,EAAAA,IAAI,EAAEW,SAPY;AAQlBjB,EAAAA,UAAU,EAAEiB,SARM;AASlBhB,EAAAA,SAAS,EAAEgB,SATO;AAUlBH,EAAAA,OAAO,EAAE,mBAAM,CAAE;AAVC,CAApB;AAaA,eAAepB,IAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Icon from '../Icon';\n\nconst STYLE_VARIANTS = [\n  'light',\n  'dark',\n];\n\nconst Chip = ({\n  as,\n  children,\n  className,\n  variant,\n  active,\n  iconBefore,\n  iconAfter,\n  ...props\n}) => {\n  const elementProps = {\n    ...props,\n    className: classNames(\n      'pgn__chip',\n      `pgn__chip-${variant}`,\n      { active },\n      className,\n    ),\n  };\n  const elementContent = (\n    <>\n      {iconBefore && <Icon className={classNames('chip-icon-before')} src={iconBefore} />}\n      {children}\n      {iconAfter && <Icon className={classNames('chip-icon-after')} src={iconAfter} />}\n    </>\n  );\n  return React.createElement(props.href ? 'a' : as, elementProps, elementContent);\n};\n\nChip.propTypes = {\n  /** Specifies the base HTML element. */\n  as: PropTypes.elementType,\n  /** Specifies an additional `className` to add to the base element. */\n  className: PropTypes.string,\n  /** Specifies the content of the `Chip`. */\n  children: PropTypes.node,\n  /** The `Chip` style variant to use. */\n  variant: PropTypes.oneOf(STYLE_VARIANTS),\n  /** Adds the `active` class to the `Chip`. */\n  active: PropTypes.bool,\n  /** Disables the `Chip`. */\n  disabled: PropTypes.bool,\n  /** Providing a `href` will render an `<a>` element, styled as a button. */\n  href: PropTypes.string,\n  /**\n   * An icon component to render before the content.\n   * Example import of a Paragon icon component:\n   *\n   * `import { Check } from '@edx/paragon/icons';`\n   */\n  iconBefore: PropTypes.node,\n  /**\n   * An icon component to render before after the content.\n   * Example import of a Paragon icon component:\n   *\n   * `import { Check } from '@edx/paragon/icons';`\n   */\n  iconAfter: PropTypes.node,\n  /** A click handler for the `Chip` */\n  onClick: PropTypes.func,\n};\n\nChip.defaultProps = {\n  as: 'button',\n  className: undefined,\n  children: null,\n  variant: 'light',\n  active: false,\n  disabled: false,\n  href: undefined,\n  iconBefore: undefined,\n  iconAfter: undefined,\n  onClick: () => {},\n};\n\nexport default Chip;\n"],"file":"index.js"}