{"version":3,"sources":["../../src/Stepper/StepperStep.jsx"],"names":["React","useContext","useEffect","PropTypes","classNames","StepperContext","StepperStep","children","eventKey","className","title","index","description","hasError","activeKey","registerStep","removeStep","isActive","propTypes","node","isRequired","string","bool","number","defaultProps","undefined"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,eAAe,SAASC,WAAT,OAQZ;AAAA,MAPDC,QAOC,QAPDA,QAOC;AAAA,MANDC,QAMC,QANDA,QAMC;AAAA,MALDC,SAKC,QALDA,SAKC;AAAA,MAJDC,KAIC,QAJDA,KAIC;AAAA,MAHDC,KAGC,QAHDA,KAGC;AAAA,MAFDC,WAEC,QAFDA,WAEC;AAAA,MADDC,QACC,QADDA,QACC;;AACD,oBAAgDZ,UAAU,CAACI,cAAD,CAA1D;AAAA,MAAQS,SAAR,eAAQA,SAAR;AAAA,MAAmBC,YAAnB,eAAmBA,YAAnB;AAAA,MAAiCC,UAAjC,eAAiCA,UAAjC;;AAEAd,EAAAA,SAAS,CAAC,YAAM;AACda,IAAAA,YAAY,CAAC;AACXL,MAAAA,KAAK,EAALA,KADW;AAEXC,MAAAA,KAAK,EAALA,KAFW;AAGXH,MAAAA,QAAQ,EAARA,QAHW;AAIXI,MAAAA,WAAW,EAAXA,WAJW;AAKXC,MAAAA,QAAQ,EAARA;AALW,KAAD,CAAZ;AAOA,WAAO;AAAA,aAAMG,UAAU,CAACR,QAAD,CAAhB;AAAA,KAAP;AACD,GATQ,EASN,CAACE,KAAD,EAAQF,QAAR,EAAkBI,WAAlB,EAA+BC,QAA/B,CATM,CAAT;AAWA,MAAMI,QAAQ,GAAGH,SAAS,KAAKN,QAA/B;;AAEA,MAAI,CAACS,QAAL,EAAe;AACb,WAAO,IAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAEb,UAAU,CAAC,mBAAD,EAAsBK,SAAtB;AAA1B,KACGF,QADH,CADF;AAKD;AAEDD,WAAW,CAACY,SAAZ,GAAwB;AACtB;AACAX,EAAAA,QAAQ,EAAEJ,SAAS,CAACgB,IAAV,CAAeC,UAFH;;AAGtB;AACAX,EAAAA,SAAS,EAAEN,SAAS,CAACkB,MAJC;;AAKtB;AACF;AACA;AACA;AACEb,EAAAA,QAAQ,EAAEL,SAAS,CAACkB,MAAV,CAAiBD,UATL;;AAUtB;AACAV,EAAAA,KAAK,EAAEP,SAAS,CAACkB,MAAV,CAAiBD,UAXF;;AAYtB;AACAR,EAAAA,WAAW,EAAET,SAAS,CAACkB,MAbD;;AActB;AACAR,EAAAA,QAAQ,EAAEV,SAAS,CAACmB,IAfE;;AAgBtB;AACF;AACA;AACA;AACEX,EAAAA,KAAK,EAAER,SAAS,CAACoB;AApBK,CAAxB;AAuBAjB,WAAW,CAACkB,YAAZ,GAA2B;AACzBf,EAAAA,SAAS,EAAEgB,SADc;AAEzBb,EAAAA,WAAW,EAAEa,SAFY;AAGzBZ,EAAAA,QAAQ,EAAE,KAHe;AAIzBF,EAAAA,KAAK,EAAEc;AAJkB,CAA3B","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { StepperContext } from './StepperContext';\n\nexport default function StepperStep({\n  children,\n  eventKey,\n  className,\n  title,\n  index,\n  description,\n  hasError,\n}) {\n  const { activeKey, registerStep, removeStep } = useContext(StepperContext);\n\n  useEffect(() => {\n    registerStep({\n      title,\n      index,\n      eventKey,\n      description,\n      hasError,\n    });\n    return () => removeStep(eventKey);\n  }, [title, eventKey, description, hasError]);\n\n  const isActive = activeKey === eventKey;\n\n  if (!isActive) {\n    return null;\n  }\n\n  return (\n    <div className={classNames('pgn__stepper-step', className)}>\n      {children}\n    </div>\n  );\n}\n\nStepperStep.propTypes = {\n  /** Specifies the content of the `Step`. */\n  children: PropTypes.node.isRequired,\n  /** Specifies class name to append to the base element */\n  className: PropTypes.string,\n  /**\n   * An identifier of the `Step`. When `activeKey` on the\n   * `Stepper` equals to the `eventKey`, the `Step` will be displayed.\n   */\n  eventKey: PropTypes.string.isRequired,\n  /** A text of the `Step`. */\n  title: PropTypes.string.isRequired,\n  /** A text under the `title`. */\n  description: PropTypes.string,\n  /** Informs user if this `Step` has errors. */\n  hasError: PropTypes.bool,\n  /**\n   * Position of the `Step`, only required if adding error state\n   * or conditionally rendering steps.\n   * */\n  index: PropTypes.number,\n};\n\nStepperStep.defaultProps = {\n  className: undefined,\n  description: undefined,\n  hasError: false,\n  index: undefined,\n};\n"],"file":"StepperStep.js"}