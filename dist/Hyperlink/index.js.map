{"version":3,"sources":["../../src/Hyperlink/index.jsx"],"names":["React","PropTypes","classNames","isRequiredIf","Icon","Launch","withDeprecatedProps","DEPR_TYPES","Hyperlink","forwardRef","props","ref","className","destination","children","target","onClick","externalLinkAlternativeText","externalLinkTitle","variant","isInline","showLaunchIcon","attrs","externalLinkIcon","generateRel","rel","includes","height","width","defaultProps","undefined","propTypes","string","isRequired","node","func","oneOf","bool","content","deprType","MOVED","newName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport isRequiredIf from 'react-proptype-conditional-require';\nimport Icon from '../Icon';\nimport { Launch } from '../../icons';\n\nimport withDeprecatedProps, { DEPR_TYPES } from '../withDeprecatedProps';\n\nconst Hyperlink = React.forwardRef((props, ref) => {\n  const {\n    className,\n    destination,\n    children,\n    target,\n    onClick,\n    externalLinkAlternativeText,\n    externalLinkTitle,\n    variant,\n    isInline,\n    showLaunchIcon,\n    ...attrs\n  } = props;\n  let externalLinkIcon;\n\n  if (target === '_blank') {\n    const generateRel = () => {\n      let { rel } = attrs;\n      if (!rel) {\n        return 'noopener noreferrer';\n      }\n      if (!rel.includes('noopener')) {\n        rel += ' noopener';\n      }\n      if (!rel.includes('noreferrer')) {\n        rel += ' noreferrer';\n      }\n      return rel;\n    };\n\n    // Add this rel attribute to prevent Reverse Tabnabbing\n    attrs.rel = generateRel();\n    if (showLaunchIcon) {\n      externalLinkIcon = (\n        <span\n          // TODO: do not use css utility classes in components as they use !important, which hinders theming.\n          className=\"d-inline-block align-middle ml-2\"\n          aria-label={externalLinkAlternativeText}\n          title={externalLinkTitle}\n        >\n          <Icon src={Launch} style={{ height: '1em', width: '1em' }} />\n        </span>\n      );\n    }\n  }\n\n  return (\n    <a\n      ref={ref}\n      className={classNames(\n        'pgn__hyperlink',\n        `${variant}-link`,\n        {\n          'standalone-link': !isInline,\n          'inline-link': isInline,\n        },\n        className,\n      )}\n      href={destination}\n      target={target}\n      onClick={onClick}\n      {...attrs}\n    >\n      {children}\n      {externalLinkIcon}\n    </a>\n  );\n});\n\nHyperlink.defaultProps = {\n  className: undefined,\n  target: '_self',\n  onClick: () => {},\n  externalLinkAlternativeText: 'in a new tab',\n  externalLinkTitle: 'Opens in a new tab',\n  variant: 'default',\n  isInline: false,\n  showLaunchIcon: true,\n};\n\nHyperlink.propTypes = {\n  /** specifies the URL */\n  destination: PropTypes.string.isRequired,\n  /** Content of the hyperlink */\n  children: PropTypes.node.isRequired,\n  /** Custom class names for the hyperlink */\n  className: PropTypes.string,\n  /** specifies where the link should open. The default behavior is `_self`, which means that the URL will be loaded into the same browsing context as the current one. If the target is `_blank` (opening a new window) `rel='noopener'` will be added to the anchor tag to prevent any potential [reverse tabnabbing attack](https://www.owasp.org/index.php/Reverse_Tabnabbing).\n   */\n  target: PropTypes.string,\n  /** specifies the callback function when the link is clicked */\n  onClick: PropTypes.func,\n  // eslint-disable-next-line max-len\n  /** specifies the text for links with a `_blank` target (which loads the URL in a new browsing context). */\n  externalLinkAlternativeText: isRequiredIf(\n    PropTypes.string,\n    props => props.target === '_blank',\n  ),\n  // eslint-disable-next-line max-len\n  /** specifies the title for links with a `_blank` target (which loads the URL in a new browsing context). */\n  externalLinkTitle: isRequiredIf(\n    PropTypes.string,\n    props => props.target === '_blank',\n  ),\n  /** type of hyperlink */\n  variant: PropTypes.oneOf(['default', 'muted', 'brand']),\n  /** specify the link style. By default it will be underlined. */\n  isInline: PropTypes.bool,\n  /** specify if we need to show launch Icon. By default it will be visible. */\n  showLaunchIcon: PropTypes.bool,\n};\n\nexport default withDeprecatedProps(Hyperlink, 'Hyperlink', {\n  /** specifies the text or element that a URL should be associated with */\n  content: {\n    deprType: DEPR_TYPES.MOVED,\n    newName: 'children',\n  },\n});\n"],"file":"index.js"}