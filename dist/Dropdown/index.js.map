{"version":3,"sources":["../../src/Dropdown/index.jsx"],"names":["React","PropTypes","Dropdown","BaseDropdownToggle","DropdownDeprecated","IconButton","Button","DropdownToggle","forwardRef","ref","as","bsPrefix","otherProps","prefix","propTypes","elementType","string","id","oneOfType","number","isRequired","defaultProps","Deprecated","Toggle","default","DropdownButton","SplitButton"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;AACA,OAAOC,kBAAP,MAA+B,cAA/B;AACA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,IAAnC;AAEA,IAAMC,cAAc,gBAAGP,KAAK,CAACQ,UAAN,CAAiB,gBAIrCC,GAJqC,EAI7B;AAAA,MAHTC,EAGS,QAHTA,EAGS;AAAA,MAFTC,QAES,QAFTA,QAES;AAAA,MADNC,UACM;;AACT;AACA;AACA,MAAMC,MAAM,GAAGH,EAAE,KAAKL,UAAP,GAAoB,iCAApB,GAAwDM,QAAvE;AACA,sBAAO,oBAAC,kBAAD,eAAwBC,UAAxB;AAAoC,IAAA,EAAE,EAAEF,EAAxC;AAA4C,IAAA,QAAQ,EAAEG,MAAtD;AAA8D,IAAA,GAAG,EAAEJ;AAAnE,KAAP;AACD,CATsB,CAAvB;AAWAF,cAAc,CAACO,SAAf,GAA2B;AACzB;AACAJ,EAAAA,EAAE,EAAET,SAAS,CAACc,WAFW;;AAGzB;AACAJ,EAAAA,QAAQ,EAAEV,SAAS,CAACe,MAJK;;AAKzB;AACAC,EAAAA,EAAE,EAAEhB,SAAS,CAACiB,SAAV,CAAoB,CAACjB,SAAS,CAACe,MAAX,EAAmBf,SAAS,CAACkB,MAA7B,CAApB,EAA0DC;AANrC,CAA3B;AASAb,cAAc,CAACc,YAAf,GAA8B;AAC5BX,EAAAA,EAAE,EAAEJ,MADwB;AAE5BK,EAAAA,QAAQ,EAAE;AAFkB,CAA9B;AAKAT,QAAQ,CAACoB,UAAT,GAAsBlB,kBAAtB;AACAF,QAAQ,CAACqB,MAAT,GAAkBhB,cAAlB;AAEA,eAAeL,QAAf;AACA,SAASK,cAAT;AACA,SAASiB,OAAO,IAAIC,cAApB,QAA0C,gCAA1C;AACA,SAASD,OAAO,IAAIE,WAApB,QAAuC,6BAAvC","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport BaseDropdownToggle from 'react-bootstrap/DropdownToggle';\nimport DropdownDeprecated from './deprecated';\nimport { IconButton, Button } from '..';\n\nconst DropdownToggle = React.forwardRef(({\n  as,\n  bsPrefix,\n  ...otherProps\n}, ref) => {\n  // hide arrow from the toggle if it is rendered as IconButton\n  // because it hinders the positioning of IconButton\n  const prefix = as === IconButton ? 'pgn__dropdown-toggle-iconbutton' : bsPrefix;\n  return <BaseDropdownToggle {...otherProps} as={as} bsPrefix={prefix} ref={ref} />;\n});\n\nDropdownToggle.propTypes = {\n  /** Specifies the base element. */\n  as: PropTypes.elementType,\n  /** Overrides underlying component base CSS class name. */\n  bsPrefix: PropTypes.string,\n  /** An html id attribute, necessary for assistive technologies, such as screen readers. */\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n};\n\nDropdownToggle.defaultProps = {\n  as: Button,\n  bsPrefix: 'dropdown-toggle',\n};\n\nDropdown.Deprecated = DropdownDeprecated;\nDropdown.Toggle = DropdownToggle;\n\nexport default Dropdown;\nexport { DropdownToggle };\nexport { default as DropdownButton } from 'react-bootstrap/DropdownButton';\nexport { default as SplitButton } from 'react-bootstrap/SplitButton';\n"],"file":"index.js"}