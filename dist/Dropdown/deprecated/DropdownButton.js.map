{"version":3,"sources":["../../../src/Dropdown/deprecated/DropdownButton.jsx"],"names":["React","PropTypes","classNames","Consumer","DropdownButton","children","className","other","buttonRef","isOpen","toggle","triggerId","id","e","onClick","propTypes","node","string","defaultProps","undefined"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CACA;;AACA,SAASC,QAAT,QAAyB,SAAzB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,MAAaC,SAAb,QAAaA,SAAb;AAAA,MAA2BC,KAA3B;;AAAA,sBACrB,oBAAC,QAAD,QACG;AAAA,QACCC,SADD,SACCA,SADD;AAAA,QAECC,MAFD,SAECA,MAFD;AAAA,QAGCC,MAHD,SAGCA,MAHD;AAAA,QAICC,SAJD,SAICA,SAJD;AAAA,wBAMC,2CACMJ,KADN;AAEE,MAAA,EAAE,EAAEL,UAAU,CAACS,SAAD,EAAYJ,KAAK,CAACK,EAAlB,CAFhB;AAGE,uBAAeH,MAHjB;AAIE,2BAJF;AAKE,MAAA,IAAI,EAAC,QALP;AAME,MAAA,GAAG,EAAED,SANP;AAOE,MAAA,SAAS,EAAEN,UAAU,CACnB,iBADmB,EAEnB,KAFmB,EAGnBI,SAHmB,CAPvB;AAYE,MAAA,OAAO,EAAE,iBAACO,CAAD,EAAO;AACdH,QAAAA,MAAM,CAACG,CAAD,CAAN;;AACA,YAAIN,KAAK,CAACO,OAAV,EAAmB;AACjBP,UAAAA,KAAK,CAACO,OAAN,CAAcD,CAAd;AACD;AACF;AAjBH,QAmBGR,QAnBH,CAND;AAAA,GADH,CADqB;AAAA,CAAvB;;AAiCAD,cAAc,CAACW,SAAf,GAA2B;AACzBV,EAAAA,QAAQ,EAAEJ,SAAS,CAACe,IADK;AAEzBV,EAAAA,SAAS,EAAEL,SAAS,CAACgB;AAFI,CAA3B;AAKAb,cAAc,CAACc,YAAf,GAA8B;AAC5Bb,EAAAA,QAAQ,EAAEc,SADkB;AAE5Bb,EAAAA,SAAS,EAAE;AAFiB,CAA9B;AAKA,eAAeF,cAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n// eslint-disable-next-line import/no-cycle\nimport { Consumer } from './index';\n\nconst DropdownButton = ({ children, className, ...other }) => (\n  <Consumer>\n    {({\n      buttonRef,\n      isOpen,\n      toggle,\n      triggerId,\n    }) => (\n      <button\n        {...other}\n        id={classNames(triggerId, other.id)}\n        aria-expanded={isOpen}\n        aria-haspopup\n        type=\"button\"\n        ref={buttonRef}\n        className={classNames(\n          'dropdown-toggle',\n          'btn',\n          className,\n        )}\n        onClick={(e) => {\n          toggle(e);\n          if (other.onClick) {\n            other.onClick(e);\n          }\n        }}\n      >\n        {children}\n      </button>\n    )}\n  </Consumer>\n);\n\nDropdownButton.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n};\n\nDropdownButton.defaultProps = {\n  children: undefined,\n  className: 'btn-light',\n};\n\nexport default DropdownButton;\n"],"file":"DropdownButton.js"}