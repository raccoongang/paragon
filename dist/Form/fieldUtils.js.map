{"version":3,"sources":["../../src/Form/fieldUtils.js"],"names":["classNames","useState","useEffect","newId","omitUndefinedProperties","obj","Object","entries","reduce","acc","key","value","undefined","callAllHandlers","handlers","unifiedEventHandler","event","filter","handler","forEach","useHasValue","defaultValue","hasUncontrolledValue","setHasUncontrolledValue","hasValue","handleInputEvent","e","target","useIdList","uniqueIdPrefix","initialList","idList","setIdList","addId","idToAdd","oldIdList","getNewId","removeId","idToRemove","id","useRegisteredId","explicitlyRegisteredId","registeredId","setRegisteredId","mergeAttributeValues","values","mergedValues"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,KAAT,QAAsB,UAAtB;;AAEA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B;AAAA,MAACC,GAAD,uEAAO,EAAP;AAAA,SAAcC,MAAM,CAACC,OAAP,CAAeF,GAAf,EAC3CG,MAD2C,CACpC,UAACC,GAAD,QAAuB;AAAA;AAAA,QAAhBC,GAAgB;AAAA,QAAXC,KAAW;;AAC7B,QAAIA,KAAK,KAAKC,SAAd,EAAyB;AACvBH,MAAAA,GAAG,CAACC,GAAD,CAAH,GAAWC,KAAX;AACD;;AACD,WAAOF,GAAP;AACD,GAN2C,EAMzC,EANyC,CAAd;AAAA,CAAhC;;AAQA,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,GAAiB;AAAA,oCAAbC,QAAa;AAAbA,IAAAA,QAAa;AAAA;;AACvC,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,KAAD,EAAW;AACrCF,IAAAA,QAAQ,CACLG,MADH,CACU,UAAAC,OAAO;AAAA,aAAI,OAAOA,OAAP,KAAmB,UAAvB;AAAA,KADjB,EAEGC,OAFH,CAEW,UAAAD,OAAO;AAAA,aAAIA,OAAO,CAACF,KAAD,CAAX;AAAA,KAFlB;AAGD,GAJD;;AAKA,SAAOD,mBAAP;AACD,CAPD;;AASA,IAAMK,WAAW,GAAG,SAAdA,WAAc,QAA6B;AAAA,MAA1BC,YAA0B,SAA1BA,YAA0B;AAAA,MAAZV,KAAY,SAAZA,KAAY;;AAC/C,kBAAwDV,QAAQ,CAAC,CAAC,CAACoB,YAAH,CAAhE;AAAA;AAAA,MAAOC,oBAAP;AAAA,MAA6BC,uBAA7B;;AACA,MAAMC,QAAQ,GAAG,CAAC,CAACb,KAAF,IAAWW,oBAA5B;;AACA,MAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,CAAD;AAAA,WAAOH,uBAAuB,CAACG,CAAC,CAACC,MAAF,CAAShB,KAAV,CAA9B;AAAA,GAAzB;;AACA,SAAO,CAACa,QAAD,EAAWC,gBAAX,CAAP;AACD,CALD;;AAOA,IAAMG,SAAS,GAAG,SAAZA,SAAY,CAACC,cAAD,EAAiBC,WAAjB,EAAiC;AACjD,mBAA4B7B,QAAQ,CAAC6B,WAAW,IAAI,EAAhB,CAApC;AAAA;AAAA,MAAOC,MAAP;AAAA,MAAeC,SAAf;;AACA,MAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,OAAD,EAAa;AACzBF,IAAAA,SAAS,CAAC,UAAAG,SAAS;AAAA,0CAAQA,SAAR,IAAmBD,OAAnB;AAAA,KAAV,CAAT;AACA,WAAOA,OAAP;AACD,GAHD;;AAIA,MAAME,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,QAAMF,OAAO,GAAG/B,KAAK,WAAI0B,cAAJ,OAArB;AACA,WAAOI,KAAK,CAACC,OAAD,CAAZ;AACD,GAHD;;AAIA,MAAMG,QAAQ,GAAG,SAAXA,QAAW,CAACC,UAAD,EAAgB;AAC/BN,IAAAA,SAAS,CAAC,UAAAG,SAAS;AAAA,aAAIA,SAAS,CAAClB,MAAV,CAAiB,UAAAsB,EAAE;AAAA,eAAIA,EAAE,KAAKD,UAAX;AAAA,OAAnB,CAAJ;AAAA,KAAV,CAAT;AACD,GAFD;;AAIA,MAAME,eAAe,GAAG,SAAlBA,eAAkB,CAACC,sBAAD,EAA4B;AAClD,qBAAwCxC,QAAQ,CAACwC,sBAAD,CAAhD;AAAA;AAAA,QAAOC,YAAP;AAAA,QAAqBC,eAArB;;AACAzC,IAAAA,SAAS,CAAC,YAAM;AACd,UAAIuC,sBAAJ,EAA4B;AAC1BR,QAAAA,KAAK,CAACQ,sBAAD,CAAL;AACD,OAFD,MAEO,IAAI,CAACC,YAAL,EAAmB;AACxBC,QAAAA,eAAe,CAACP,QAAQ,CAACP,cAAD,CAAT,CAAf;AACD;;AACD,aAAO;AAAA,eAAMQ,QAAQ,CAACK,YAAD,CAAd;AAAA,OAAP;AACD,KAPQ,EAON,CAACA,YAAD,CAPM,CAAT;AAQA,WAAOA,YAAP;AACD,GAXD;;AAaA,SAAO,CAACX,MAAD,EAASS,eAAT,CAAP;AACD,CA5BD;;AA8BA,IAAMI,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAe;AAAA,qCAAXC,MAAW;AAAXA,IAAAA,MAAW;AAAA;;AAC1C,MAAMC,YAAY,GAAG9C,UAAU,CAAC6C,MAAD,CAA/B;AACA,SAAOC,YAAY,IAAIlC,SAAvB;AACD,CAHD;;AAKA,SACEC,eADF,EAEEO,WAFF,EAGEwB,oBAHF,EAIEhB,SAJF,EAKExB,uBALF","sourcesContent":["import classNames from 'classnames';\nimport { useState, useEffect } from 'react';\nimport { newId } from '../utils';\n\nconst omitUndefinedProperties = (obj = {}) => Object.entries(obj)\n  .reduce((acc, [key, value]) => {\n    if (value !== undefined) {\n      acc[key] = value;\n    }\n    return acc;\n  }, {});\n\nconst callAllHandlers = (...handlers) => {\n  const unifiedEventHandler = (event) => {\n    handlers\n      .filter(handler => typeof handler === 'function')\n      .forEach(handler => handler(event));\n  };\n  return unifiedEventHandler;\n};\n\nconst useHasValue = ({ defaultValue, value }) => {\n  const [hasUncontrolledValue, setHasUncontrolledValue] = useState(!!defaultValue);\n  const hasValue = !!value || hasUncontrolledValue;\n  const handleInputEvent = (e) => setHasUncontrolledValue(e.target.value);\n  return [hasValue, handleInputEvent];\n};\n\nconst useIdList = (uniqueIdPrefix, initialList) => {\n  const [idList, setIdList] = useState(initialList || []);\n  const addId = (idToAdd) => {\n    setIdList(oldIdList => [...oldIdList, idToAdd]);\n    return idToAdd;\n  };\n  const getNewId = () => {\n    const idToAdd = newId(`${uniqueIdPrefix}-`);\n    return addId(idToAdd);\n  };\n  const removeId = (idToRemove) => {\n    setIdList(oldIdList => oldIdList.filter(id => id !== idToRemove));\n  };\n\n  const useRegisteredId = (explicitlyRegisteredId) => {\n    const [registeredId, setRegisteredId] = useState(explicitlyRegisteredId);\n    useEffect(() => {\n      if (explicitlyRegisteredId) {\n        addId(explicitlyRegisteredId);\n      } else if (!registeredId) {\n        setRegisteredId(getNewId(uniqueIdPrefix));\n      }\n      return () => removeId(registeredId);\n    }, [registeredId]);\n    return registeredId;\n  };\n\n  return [idList, useRegisteredId];\n};\n\nconst mergeAttributeValues = (...values) => {\n  const mergedValues = classNames(values);\n  return mergedValues || undefined;\n};\n\nexport {\n  callAllHandlers,\n  useHasValue,\n  mergeAttributeValues,\n  useIdList,\n  omitUndefinedProperties,\n};\n"],"file":"fieldUtils.js"}