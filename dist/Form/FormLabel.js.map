{"version":3,"sources":["../../src/Form/FormLabel.jsx"],"names":["React","PropTypes","classNames","useFormGroupContext","FORM_CONTROL_SIZES","FormLabel","children","isInline","props","size","isControlGroup","getLabelProps","className","LARGE","SMALL","labelProps","componentType","createElement","SIZE_CHOICES","propTypes","string","node","isRequired","bool","oneOf","defaultProps","undefined"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,mBAAT,QAAoC,oBAApC;AACA,SAASC,kBAAT,QAAmC,aAAnC;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAsC;AAAA,MAAnCC,QAAmC,QAAnCA,QAAmC;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAZC,KAAY;;AACtD,6BAAgDL,mBAAmB,EAAnE;AAAA,MAAQM,IAAR,wBAAQA,IAAR;AAAA,MAAcC,cAAd,wBAAcA,cAAd;AAAA,MAA8BC,aAA9B,wBAA8BA,aAA9B;;AACA,MAAMC,SAAS,GAAGV,UAAU,CAC1B,iBAD0B,EAE1B;AACE,8BAA0BK,QAD5B;AAEE,0BAAsBE,IAAI,KAAKL,kBAAkB,CAACS,KAFpD;AAGE,0BAAsBJ,IAAI,KAAKL,kBAAkB,CAACU;AAHpD,GAF0B,EAO1BN,KAAK,CAACI,SAPoB,CAA5B;AASA,MAAMG,UAAU,GAAGJ,aAAa,iCAAMH,KAAN;AAAaI,IAAAA,SAAS,EAATA;AAAb,KAAhC;AACA,MAAMI,aAAa,GAAGN,cAAc,GAAG,GAAH,GAAS,OAA7C;AACA,sBAAOV,KAAK,CAACiB,aAAN,CAAoBD,aAApB,EAAmCD,UAAnC,EAA+CT,QAA/C,CAAP;AACD,CAdD;;AAgBA,IAAMY,YAAY,GAAG,CAAC,IAAD,EAAO,IAAP,CAArB;AAEAb,SAAS,CAACc,SAAV,GAAsB;AACpB;AACAP,EAAAA,SAAS,EAAEX,SAAS,CAACmB,MAFD;;AAGpB;AACAd,EAAAA,QAAQ,EAAEL,SAAS,CAACoB,IAAV,CAAeC,UAJL;;AAKpB;AACAf,EAAAA,QAAQ,EAAEN,SAAS,CAACsB,IANA;;AAOpB;AACAd,EAAAA,IAAI,EAAER,SAAS,CAACuB,KAAV,CAAgBN,YAAhB;AARc,CAAtB;AAWAb,SAAS,CAACoB,YAAV,GAAyB;AACvBlB,EAAAA,QAAQ,EAAE,KADa;AAEvBE,EAAAA,IAAI,EAAEiB,SAFiB;AAGvBd,EAAAA,SAAS,EAAEc;AAHY,CAAzB;AAMA,eAAerB,SAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { useFormGroupContext } from './FormGroupContext';\nimport { FORM_CONTROL_SIZES } from './constants';\n\nconst FormLabel = ({ children, isInline, ...props }) => {\n  const { size, isControlGroup, getLabelProps } = useFormGroupContext();\n  const className = classNames(\n    'pgn__form-label',\n    {\n      'pgn__form-label-inline': isInline,\n      'pgn__form-label-lg': size === FORM_CONTROL_SIZES.LARGE,\n      'pgn__form-label-sm': size === FORM_CONTROL_SIZES.SMALL,\n    },\n    props.className,\n  );\n  const labelProps = getLabelProps({ ...props, className });\n  const componentType = isControlGroup ? 'p' : 'label';\n  return React.createElement(componentType, labelProps, children);\n};\n\nconst SIZE_CHOICES = ['sm', 'lg'];\n\nFormLabel.propTypes = {\n  /** Specifies class name to append to the base element. */\n  className: PropTypes.string,\n  /** Specifies contents of the component. */\n  children: PropTypes.node.isRequired,\n  /** Specifies whether the component should be displayed with inline styling. */\n  isInline: PropTypes.bool,\n  /** Specifies size of the component. */\n  size: PropTypes.oneOf(SIZE_CHOICES),\n};\n\nFormLabel.defaultProps = {\n  isInline: false,\n  size: undefined,\n  className: undefined,\n};\n\nexport default FormLabel;\n"],"file":"FormLabel.js"}