{"version":3,"sources":["../../src/Form/FormRadioSetContext.jsx"],"names":["React","useContext","PropTypes","callAllHandlers","identityFn","props","FormRadioSetContext","createContext","getRadioControlProps","useRadioSetContext","FormRadioSetContextProvider","children","name","onBlur","onFocus","onChange","value","defaultValue","isControlled","undefined","radioProps","checked","defaultChecked","contextValue","propTypes","node","isRequired","string","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { callAllHandlers } from './fieldUtils';\n\nconst identityFn = props => props;\n\nconst FormRadioSetContext = React.createContext({\n  getRadioControlProps: identityFn,\n});\n\nconst useRadioSetContext = () => useContext(FormRadioSetContext);\n\nconst FormRadioSetContextProvider = ({\n  children,\n  name,\n  onBlur,\n  onFocus,\n  onChange,\n  value,\n  defaultValue,\n}) => {\n  const isControlled = !defaultValue && value !== undefined;\n  const getRadioControlProps = (radioProps) => ({\n    ...radioProps,\n    name,\n    /* istanbul ignore next */\n    onBlur: radioProps.onBlur ? callAllHandlers(onBlur, radioProps.onBlur) : onBlur,\n    /* istanbul ignore next */\n    onFocus: radioProps.onFocus ? callAllHandlers(onFocus, radioProps.onFocus) : onFocus,\n    /* istanbul ignore next */\n    onChange: radioProps.onChange ? callAllHandlers(onChange, radioProps.onChange) : onChange,\n    checked: isControlled ? value === radioProps.value : undefined,\n    defaultChecked: isControlled ? undefined : defaultValue === radioProps.value,\n  });\n  const contextValue = {\n    name,\n    value,\n    defaultValue,\n    getRadioControlProps,\n    onBlur,\n    onFocus,\n    onChange,\n  };\n  return (\n    <FormRadioSetContext.Provider value={contextValue}>\n      {children}\n    </FormRadioSetContext.Provider>\n  );\n};\n\nFormRadioSetContextProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n  name: PropTypes.string.isRequired,\n  onBlur: PropTypes.func,\n  onFocus: PropTypes.func,\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n  defaultValue: PropTypes.string,\n};\n\nFormRadioSetContextProvider.defaultProps = {\n  onBlur: undefined,\n  onFocus: undefined,\n  onChange: undefined,\n  value: undefined,\n  defaultValue: undefined,\n};\n\nexport default FormRadioSetContext;\nexport {\n  useRadioSetContext,\n  FormRadioSetContextProvider,\n};\n"],"file":"FormRadioSetContext.js"}