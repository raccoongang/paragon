{"version":3,"sources":["../src/withDeprecatedProps.jsx"],"names":["React","DEPR_TYPES","MOVED","REMOVED","FORMAT","MOVED_AND_FORMAT","withDeprecatedProps","WrappedComponent","componentName","deprecatedProps","WithDeprecatedProps","props","transformProps","bind","message","process","env","NODE_ENV","console","warn","acc","propName","undefined","deprType","newName","expect","transform","Object","keys","reduce","children","transformedProps","Component","displayName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,UAAU,GAAG;AACxBC,EAAAA,KAAK,EAAE,OADiB;AAExBC,EAAAA,OAAO,EAAE,SAFe;AAGxBC,EAAAA,MAAM,EAAE,QAHgB;AAIxBC,EAAAA,gBAAgB,EAAE;AAJM,CAAnB;;AAOP,SAASC,mBAAT,CAA6BC,gBAA7B,EAA+CC,aAA/C,EAA8DC,eAA9D,EAA+E;AAAA,MACvEC,mBADuE;AAAA;;AAAA;;AAE3E,iCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gCAAMA,KAAN;AACA,YAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,+BAAtB;AAFiB;AAGlB;;AAL0E;AAAA;AAAA,aAO3E,cAAKC,OAAL,EAAc;AACZ,YAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1C,cAAIC,OAAJ,EAAa;AAAEA,YAAAA,OAAO,CAACC,IAAR,wBAA6BL,OAA7B;AAA0C;AAC1D;AACF;AAX0E;AAAA;AAAA,aAa3E,wBAAeM,GAAf,EAAoBC,QAApB,EAA8B;AAC5B,YAAIZ,eAAe,CAACY,QAAD,CAAf,KAA8BC,SAAlC,EAA6C;AAC3CF,UAAAA,GAAG,CAACC,QAAD,CAAH,GAAgB,KAAKV,KAAL,CAAWU,QAAX,CAAhB;AACA,iBAAOD,GAAP;AACD;;AAED,oCAMIX,eAAe,CAACY,QAAD,CANnB;AAAA,YACEE,QADF,yBACEA,QADF;AAAA,YAEEC,OAFF,yBAEEA,OAFF;AAAA,YAGEC,MAHF,yBAGEA,MAHF;AAAA,YAIEC,SAJF,yBAIEA,SAJF;AAAA,YAKEZ,OALF,yBAKEA,OALF;;AAQA,gBAAQS,QAAR;AACE,eAAKtB,UAAU,CAACC,KAAhB;AACE,iBAAKiB,IAAL,WAAaX,aAAb,yBAAyCa,QAAzC,kCAAyEG,OAAzE;AACAJ,YAAAA,GAAG,CAACI,OAAD,CAAH,GAAe,KAAKb,KAAL,CAAWU,QAAX,CAAf;AACA;;AACF,eAAKpB,UAAU,CAACE,OAAhB;AACE,iBAAKgB,IAAL,WAAaX,aAAb,yBAAyCa,QAAzC,kCAAyEP,OAAzE;AACA;;AACF,eAAKb,UAAU,CAACG,MAAhB;AACE,gBAAI,CAACqB,MAAM,CAAC,KAAKd,KAAL,CAAWU,QAAX,CAAD,CAAX,EAAmC;AACjC,mBAAKF,IAAL,WAAaX,aAAb,yBAAyCa,QAAzC,qCAA4EP,OAA5E;AACAM,cAAAA,GAAG,CAACC,QAAD,CAAH,GAAgBK,SAAS,CAAC,KAAKf,KAAL,CAAWU,QAAX,CAAD,EAAuB,KAAKV,KAA5B,CAAzB;AACD,aAHD,MAGO;AACLS,cAAAA,GAAG,CAACC,QAAD,CAAH,GAAgB,KAAKV,KAAL,CAAWU,QAAX,CAAhB;AACD;;AACD;;AACF,eAAKpB,UAAU,CAACI,gBAAhB;AACE,iBAAKc,IAAL,WAAaX,aAAb,yBAAyCa,QAAzC,kCAAyEG,OAAzE,yCAA+GV,OAA/G;AACAM,YAAAA,GAAG,CAACI,OAAD,CAAH,GAAeE,SAAS,CAAC,KAAKf,KAAL,CAAWU,QAAX,CAAD,EAAuB,KAAKV,KAA5B,CAAxB;AACA;;AACF;AACES,YAAAA,GAAG,CAACC,QAAD,CAAH,GAAgB,KAAKV,KAAL,CAAWU,QAAX,CAAhB;AACA;AAtBJ;;AAyBA,eAAOD,GAAP;AACD;AArD0E;AAAA;AAAA,aAuD3E,kBAAS;AACP,kCAA0CO,MAAM,CAC7CC,IADuC,CAClC,KAAKjB,KAD6B,EAEvCkB,MAFuC,CAEhC,KAAKjB,cAF2B,EAEX,EAFW,CAA1C;AAAA,YAAQkB,QAAR,uBAAQA,QAAR;AAAA,YAAqBC,gBAArB;;AAIA,4BACE,oBAAC,gBAAD,EAAsBA,gBAAtB,EACG,KAAKpB,KAAL,CAAWmB,QAAX,IAAuBA;AAAS;AADnC,SADF;AAKD;AAjE0E;;AAAA;AAAA,IAC3C9B,KAAK,CAACgC,SADqC;;AAoE7EtB,EAAAA,mBAAmB,CAACuB,WAApB,iCAAyDzB,aAAzD;AAEA,SAAOE,mBAAP;AACD;;AAED,eAAeJ,mBAAf","sourcesContent":["/* eslint no-console: 0 */\nimport React from 'react';\n\nexport const DEPR_TYPES = {\n  MOVED: 'MOVED',\n  REMOVED: 'REMOVED',\n  FORMAT: 'FORMAT',\n  MOVED_AND_FORMAT: 'MOVED_AND_FORMAT',\n};\n\nfunction withDeprecatedProps(WrappedComponent, componentName, deprecatedProps) {\n  class WithDeprecatedProps extends React.Component {\n    constructor(props) {\n      super(props);\n      this.transformProps = this.transformProps.bind(this);\n    }\n\n    warn(message) {\n      if (process.env.NODE_ENV === 'development') {\n        if (console) { console.warn(`[Deprecated] ${message}`); }\n      }\n    }\n\n    transformProps(acc, propName) {\n      if (deprecatedProps[propName] === undefined) {\n        acc[propName] = this.props[propName];\n        return acc;\n      }\n\n      const {\n        deprType,\n        newName,\n        expect,\n        transform,\n        message,\n      } = deprecatedProps[propName];\n\n      switch (deprType) {\n        case DEPR_TYPES.MOVED:\n          this.warn(`${componentName}: The prop '${propName}' has been moved to '${newName}'.`);\n          acc[newName] = this.props[propName];\n          break;\n        case DEPR_TYPES.REMOVED:\n          this.warn(`${componentName}: The prop '${propName}' has been removed. '${message}'`);\n          break;\n        case DEPR_TYPES.FORMAT:\n          if (!expect(this.props[propName])) {\n            this.warn(`${componentName}: The prop '${propName}' expects a new format. ${message}`);\n            acc[propName] = transform(this.props[propName], this.props);\n          } else {\n            acc[propName] = this.props[propName];\n          }\n          break;\n        case DEPR_TYPES.MOVED_AND_FORMAT:\n          this.warn(`${componentName}: The prop '${propName}' has been moved to '${newName}' and expects a new format. ${message}`);\n          acc[newName] = transform(this.props[propName], this.props);\n          break;\n        default:\n          acc[propName] = this.props[propName];\n          break;\n      }\n\n      return acc;\n    }\n\n    render() {\n      const { children, ...transformedProps } = Object\n        .keys(this.props)\n        .reduce(this.transformProps, {});\n\n      return (\n        <WrappedComponent {...transformedProps}>\n          {this.props.children || children /* eslint-disable-line react/prop-types */}\n        </WrappedComponent>\n      );\n    }\n  }\n\n  WithDeprecatedProps.displayName = `withDeprecatedProps(${componentName})`;\n\n  return WithDeprecatedProps;\n}\n\nexport default withDeprecatedProps;\n"],"file":"withDeprecatedProps.js"}