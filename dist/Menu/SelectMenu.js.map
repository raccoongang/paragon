{"version":3,"sources":["../../src/Menu/SelectMenu.jsx"],"names":["React","useState","useEffect","PropTypes","classNames","Button","ModalPopup","useToggle","Menu","ExpandMore","SelectMenu","defaultMessage","isLink","children","props","triggerTarget","useRef","itemsCollection","useMemo","Array","from","length","map","createRef","className","defaultIndex","i","defaultSelected","undefined","selected","setSelected","isOpen","open","close","vertOffset","setOffset","createMenuItems","elements","Children","child","index","newProps","onClick","e","current","focus","id","toString","role","push","cloneElement","link","prevOpenRef","numItems","boundingRect","parentElement","getBoundingClientRect","bottom","window","innerHeight","top","scrollIntoView","block","preventScroll","createElement","name","enabled","options","offset","offsetWidth","propTypes","string","bool","node","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Button from '../Button/index';\nimport ModalPopup from '../Modal/ModalPopup';\nimport useToggle from '../hooks/useToggle';\nimport Menu from '.';\nimport { ExpandMore } from '../../icons';\n\nconst SelectMenu = ({\n  defaultMessage,\n  isLink,\n  children,\n  ...props\n}) => {\n  const triggerTarget = React.useRef(null);\n  const itemsCollection = React.useMemo(\n    () => Array.from({ length: children.length }).map(() => React.createRef()),\n    [],\n  );\n\n  const className = classNames(props.className, 'pgn__menu-select');\n  function defaultIndex() {\n    for (let i = 0; i < children.length; i++) {\n      if (children[i].props && children[i].props.defaultSelected) {\n        return i;\n      }\n    }\n    return undefined;\n  }\n  const [selected, setSelected] = useState(defaultIndex());\n  const [isOpen, open, close] = useToggle(false);\n  const [vertOffset, setOffset] = useState(0);\n\n  const createMenuItems = () => {\n    const elements = [];\n    React.Children.map(children, (child, index) => {\n      const newProps = {\n        onClick(e) {\n          if (child.props.onClick) {\n            child.props.onClick(e);\n          }\n          setSelected(index);\n          close();\n          triggerTarget.current.focus();\n        },\n        id: `${index.toString()}_pgn__menu-item`,\n        role: 'link',\n      };\n      if (selected === index) {\n        newProps['aria-current'] = 'page';\n      }\n      elements.push(\n        React.cloneElement(child, newProps),\n      );\n    });\n    return elements;\n  };\n\n  const link = isLink; // allow inline link styling\n  const prevOpenRef = React.useRef();\n\n  useEffect(() => {\n    // logic to always center the selected item.\n    if (isOpen && selected) {\n      const numItems = children.length;\n      const boundingRect = itemsCollection[selected].current.parentElement.getBoundingClientRect();\n      if (boundingRect.bottom >= window.innerHeight - 150 || boundingRect.top <= 150) {\n        setOffset(0); // if too close to the edge, don't do centering fancyness\n      } else {\n        switch (true) {\n          case numItems < 6: {\n            // on small lists, center each element\n            setOffset(\n              (selected) * -48,\n            );\n            break;\n          }\n          case selected < 2: {\n            // On first two elements, set offset based on position\n            setOffset((selected) * -48);\n            break;\n          }\n          case numItems - selected < 3: {\n            // on n-1 and n-2 elelements, set offset to put most modal elements on top.\n            setOffset((6 - (numItems - selected)) * -48);\n            break;\n          }\n          case selected > 1 && numItems - selected > 2: {\n            // on \"middle elements\", set offset to center of block and scroll to center\n            itemsCollection[selected].current.children[0].scrollIntoView({\n              block: 'center',\n            });\n            setOffset(2 * -48);\n            break;\n          }\n          default: break;\n        }\n      }\n    }\n    // set focus on open\n    if (isOpen && !prevOpenRef.current && selected) {\n      itemsCollection[selected].current.children[0].focus({ preventScroll: (defaultIndex() === selected) });\n    }\n    prevOpenRef.current = isOpen;\n  }, [isOpen]);\n\n  return React.createElement(\n    className,\n    {\n      ...props,\n      className,\n    },\n    <>\n      <Button\n        aria-haspopup=\"true\"\n        aria-expanded={isOpen}\n        ref={triggerTarget}\n        className=\"pgn__menu-select-trigger-btn\"\n        variant={link ? 'link' : 'tertiary'}\n        iconAfter={link ? undefined : ExpandMore}\n        onClick={open}\n      >\n        {selected !== undefined && children[selected] ? children[selected].props.children : defaultMessage}\n      </Button>\n      <div className=\"pgn__menu-select-popup\">\n        <ModalPopup\n          placement=\"right-start\"\n          positionRef={triggerTarget}\n          isOpen={isOpen}\n          onClose={close}\n          modifiers={\n            [\n              {\n                name: 'flip',\n                enabled: true,\n              },\n              {\n                name: 'offset',\n                options: {\n                  enabled: true,\n                  offset: [vertOffset, triggerTarget.current ? -1 * triggerTarget.current.offsetWidth : 0],\n                },\n              },\n            ]\n          }\n        >\n          <Menu aria-label=\"Select Menu\">\n            {createMenuItems().map((child, index) => (\n              <div key={child.props.id} ref={itemsCollection[index]}>\n                {child}\n              </div>\n            ))}\n          </Menu>\n        </ModalPopup>\n      </div>\n    </>,\n  );\n};\n\nSelectMenu.propTypes = {\n  /** String that is displayed for default value of the ``SelectMenu`` */\n  defaultMessage: PropTypes.string,\n  /** Displays chosen value of the ``SelectMenu`` as a link */\n  isLink: PropTypes.bool,\n  /** Specifies the content of the ``SelectMenu`` */\n  children: PropTypes.node.isRequired,\n  /** Specifies class name to append to the base element */\n  className: PropTypes.string,\n};\n\nSelectMenu.defaultProps = {\n  defaultMessage: 'Select...',\n  isLink: false,\n  className: undefined,\n};\n\nexport default SelectMenu;\n"],"file":"SelectMenu.js"}