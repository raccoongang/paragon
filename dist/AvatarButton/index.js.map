{"version":3,"sources":["../../src/AvatarButton/index.jsx"],"names":["React","PropTypes","classNames","Button","Avatar","buttonSizesToAvatarSize","sm","md","lg","AvatarButton","forwardRef","ref","children","className","showLabel","size","src","attrs","avatarSize","propTypes","string","bool","oneOf","variant","defaultProps","undefined"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,IAA/B;AAEA,IAAMC,uBAAuB,GAAG;AAC9BC,EAAAA,EAAE,EAAE,IAD0B;AAE9BC,EAAAA,EAAE,EAAE,IAF0B;AAG9BC,EAAAA,EAAE,EAAE;AAH0B,CAAhC;AAMA,IAAMC,YAAY,gBAAGT,KAAK,CAACU,UAAN,CAAiB,gBAOnCC,GAPmC,EAO3B;AAAA,MANTC,QAMS,QANTA,QAMS;AAAA,MALTC,SAKS,QALTA,SAKS;AAAA,MAJTC,SAIS,QAJTA,SAIS;AAAA,MAHTC,IAGS,QAHTA,IAGS;AAAA,MAFTC,GAES,QAFTA,GAES;AAAA,MADNC,KACM;;AACT,MAAMC,UAAU,GAAGb,uBAAuB,CAACU,IAAD,CAAvB,IAAiC,IAApD;AACA,sBACE,oBAAC,MAAD,eACME,KADN;AAEE,IAAA,SAAS,EAAEf,UAAU,CACnB,YADmB,EACL;AACd,+BAFmB,sCAGUa,IAHV,GAInBF,SAJmB,EAKnB;AAAE,uCAAiC,CAACC;AAApC,KALmB,CAFvB;AASE,IAAA,IAAI,EAAEC,IATR;AAUE,IAAA,GAAG,EAAEJ;AAVP,mBAYE,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAEK,GAAb;AAAkB,IAAA,GAAG,EAAEF,SAAS,GAAG,EAAH,GAAQF,QAAxC;AAAkD,IAAA,IAAI,EAAEM;AAAxD,IAZF,EAaGJ,SAAS,IAAIF,QAbhB,CADF;AAiBD,CA1BoB,CAArB;AA4BAH,YAAY,CAACU,SAAb,GAAyB;AACvB;AACAP,EAAAA,QAAQ,EAAEX,SAAS,CAACmB,MAFG;;AAGvB;AACAP,EAAAA,SAAS,EAAEZ,SAAS,CAACmB,MAJE;;AAKvB;AACAN,EAAAA,SAAS,EAAEb,SAAS,CAACoB,IANE;;AAOvB;AACAN,EAAAA,IAAI,EAAEd,SAAS,CAACqB,KAAV,CAAgB,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAhB,CARiB;;AASvB;AACAN,EAAAA,GAAG,EAAEf,SAAS,CAACmB,MAVQ;;AAWvB;AACAG,EAAAA,OAAO,EAAEtB,SAAS,CAACmB;AAZI,CAAzB;AAeAX,YAAY,CAACe,YAAb,GAA4B;AAC1BZ,EAAAA,QAAQ,EAAEa,SADgB;AAE1BZ,EAAAA,SAAS,EAAEY,SAFe;AAG1BX,EAAAA,SAAS,EAAE,IAHe;AAI1BC,EAAAA,IAAI,EAAE,IAJoB;AAK1BC,EAAAA,GAAG,EAAES,SALqB;AAM1BF,EAAAA,OAAO,EAAE;AANiB,CAA5B;AASA,eAAed,YAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Button, Avatar } from '..';\n\nconst buttonSizesToAvatarSize = {\n  sm: 'xs',\n  md: 'sm',\n  lg: 'md',\n};\n\nconst AvatarButton = React.forwardRef(({\n  children,\n  className,\n  showLabel,\n  size,\n  src,\n  ...attrs\n}, ref) => {\n  const avatarSize = buttonSizesToAvatarSize[size] || 'sm';\n  return (\n    <Button\n      {...attrs}\n      className={classNames(\n        'btn-avatar', // the public class name for custom styling\n        'pgn__avatar-button-avatar',\n        `pgn__avatar-button-avatar-${size}`,\n        className,\n        { 'pgn__avatar-button-hide-label': !showLabel },\n      )}\n      size={size}\n      ref={ref}\n    >\n      <Avatar src={src} alt={showLabel ? '' : children} size={avatarSize} />\n      {showLabel && children}\n    </Button>\n  );\n});\n\nAvatarButton.propTypes = {\n  /** The button text */\n  children: PropTypes.string,\n  /** A class name to append to the button */\n  className: PropTypes.string,\n  /** Show the label or only the avatar */\n  showLabel: PropTypes.bool,\n  /** The button size */\n  size: PropTypes.oneOf(['sm', 'md', 'lg']),\n  /** Image src of the avatar image */\n  src: PropTypes.string,\n  /** The button style variant to use */\n  variant: PropTypes.string,\n};\n\nAvatarButton.defaultProps = {\n  children: undefined,\n  className: undefined,\n  showLabel: true,\n  size: 'md',\n  src: undefined,\n  variant: 'tertiary',\n};\n\nexport default AvatarButton;\n"],"file":"index.js"}