{"version":3,"sources":["../../src/TextArea/index.jsx"],"names":["React","PropTypes","asInput","withDeprecatedProps","DEPR_TYPES","Text","props","className","inputRef","others","propTypes","string","oneOfType","func","shape","current","instanceOf","element","defaultProps","undefined","TextArea","deprType","FORMAT","expect","value","transform","Array","isArray","join","message"],"mappings":";;;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,mBAAP,IAA8BC,UAA9B,QAAgD,wBAAhD;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,MACEC,SADF,GAIID,KAJJ,CACEC,SADF;AAAA,MAEEC,QAFF,GAIIF,KAJJ,CAEEE,QAFF;AAAA,MAGKC,MAHL,4BAIIH,KAJJ;;AAMA,sBACE,6CACMG,MADN;AAEE,IAAA,SAAS,EAAEF,SAFb;AAGE,IAAA,GAAG,EAAEC;AAHP,KADF;AAOD;;AAEDH,IAAI,CAACK,SAAL,GAAiB;AACfH,EAAAA,SAAS,EAAEN,SAAS,CAACU,MADN;;AAEf;AACF;AACEH,EAAAA,QAAQ,EAAEP,SAAS,CAACW,SAAV,CAAoB,CAC5BX,SAAS,CAACY,IADkB,EAE5BZ,SAAS,CAACa,KAAV,CAAgB;AAAEC,IAAAA,OAAO,EAAEd,SAAS,CAACe,UAAV,CAAqBf,SAAS,CAACgB,OAA/B;AAAX,GAAhB,CAF4B,CAApB;AAJK,CAAjB;AAUAZ,IAAI,CAACa,YAAL,GAAoB;AAClBX,EAAAA,SAAS,EAAEY,SADO;AAElBX,EAAAA,QAAQ,EAAEW;AAFQ,CAApB;AAKA,IAAMC,QAAQ,GAAGlB,OAAO,CAACC,mBAAmB,CAACE,IAAD,EAAO,UAAP,EAAmB;AAC7DE,EAAAA,SAAS,EAAE;AACTc,IAAAA,QAAQ,EAAEjB,UAAU,CAACkB,MADZ;AAETC,IAAAA,MAAM,EAAE,gBAAAC,KAAK;AAAA,aAAI,OAAOA,KAAP,KAAiB,QAArB;AAAA,KAFJ;AAGTC,IAAAA,SAAS,EAAE,mBAAAD,KAAK;AAAA,aAAKE,KAAK,CAACC,OAAN,CAAcH,KAAd,IAAuBA,KAAK,CAACI,IAAN,CAAW,GAAX,CAAvB,GAAyCJ,KAA9C;AAAA,KAHP;AAITK,IAAAA,OAAO,EAAE;AAJA;AADkD,CAAnB,CAApB,CAAxB;AASA,eAAeT,QAAf","sourcesContent":["/* eslint-disable max-len */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport asInput from '../asInput';\nimport withDeprecatedProps, { DEPR_TYPES } from '../withDeprecatedProps';\n\nfunction Text(props) {\n  const {\n    className,\n    inputRef,\n    ...others\n  } = props;\n\n  return (\n    <textarea\n      {...others}\n      className={className}\n      ref={inputRef}\n    />\n  );\n}\n\nText.propTypes = {\n  className: PropTypes.string,\n  /** specifies all of the properties that are necessary from the included `asInput` component.  Please see details for input requirements within that component.\n  */\n  inputRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(PropTypes.element) }),\n  ]),\n};\n\nText.defaultProps = {\n  className: undefined,\n  inputRef: undefined,\n};\n\nconst TextArea = asInput(withDeprecatedProps(Text, 'TextArea', {\n  className: {\n    deprType: DEPR_TYPES.FORMAT,\n    expect: value => typeof value === 'string',\n    transform: value => (Array.isArray(value) ? value.join(' ') : value),\n    message: 'It should be a string.',\n  },\n}));\n\nexport default TextArea;\n"],"file":"index.js"}