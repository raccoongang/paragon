{"version":3,"sources":["../../src/Modal/ModalLayer.jsx"],"names":["React","PropTypes","FocusOn","Portal","ModalContextProvider","ModalBackdrop","onClick","propTypes","func","defaultProps","undefined","ModalContentContainer","children","node","ModalLayer","onClose","isOpen","isBlocking","onClickOutside","isRequired","bool"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,oBAAT,QAAqC,gBAArC,C,CAEA;;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,MAAGC,OAAH,QAAGA,OAAH;AAAA;AAAA;AAEpB;AACA;AACA;AACA;AACA;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAqC,MAAA,OAAO,EAAEA;AAA9C;AANoB;AAAA,CAAtB;;AASAD,aAAa,CAACE,SAAd,GAA0B;AACxBD,EAAAA,OAAO,EAAEL,SAAS,CAACO;AADK,CAA1B;AAIAH,aAAa,CAACI,YAAd,GAA6B;AAC3BH,EAAAA,OAAO,EAAEI;AADkB,CAA7B,C,CAIA;;AACA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB;AAAA,MAAGC,QAAH,SAAGA,QAAH;AAAA,sBAC5B;AAAK,IAAA,SAAS,EAAC;AAAf,KAA+CA,QAA/C,CAD4B;AAAA,CAA9B;;AAIAD,qBAAqB,CAACJ,SAAtB,GAAkC;AAChCK,EAAAA,QAAQ,EAAEX,SAAS,CAACY;AADY,CAAlC;AAIAF,qBAAqB,CAACF,YAAtB,GAAqC;AACnCG,EAAAA,QAAQ,EAAE;AADyB,CAArC;AAIA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAME,UAAU,GAAG,SAAbA,UAAa,QAEb;AAAA,MADJF,QACI,SADJA,QACI;AAAA,MADMG,OACN,SADMA,OACN;AAAA,MADeC,MACf,SADeA,MACf;AAAA,MADuBC,UACvB,SADuBA,UACvB;;AACJ,MAAI,CAACD,MAAL,EAAa;AACX,WAAO,IAAP;AACD;;AAED,MAAME,cAAc,GAAG,CAACD,UAAD,GAAcF,OAAd,GAAwB,IAA/C;AAEA,sBACE,oBAAC,oBAAD;AAAsB,IAAA,OAAO,EAAEA,OAA/B;AAAwC,IAAA,MAAM,EAAEC,MAAhD;AAAwD,IAAA,UAAU,EAAEC;AAApE,kBACE,oBAAC,MAAD,qBACE,oBAAC,OAAD;AACE,IAAA,cAAc,MADhB;AAEE,IAAA,UAAU,MAFZ;AAGE,IAAA,OAAO,EAAED,MAHX;AAIE,IAAA,WAAW,EAAED,OAJf;AAKE,IAAA,cAAc,EAAEG,cALlB;AAME,IAAA,SAAS,EAAC;AANZ,kBAQE,oBAAC,qBAAD,qBACE,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAEA;AAAxB,IADF,EAEGN,QAFH,CARF,CADF,CADF,CADF;AAmBD,CA5BD;;AA8BAE,UAAU,CAACP,SAAX,GAAuB;AACrB;AACAK,EAAAA,QAAQ,EAAEX,SAAS,CAACY,IAAV,CAAeM,UAFJ;;AAGrB;AACAJ,EAAAA,OAAO,EAAEd,SAAS,CAACO,IAAV,CAAeW,UAJH;;AAKrB;AACAH,EAAAA,MAAM,EAAEf,SAAS,CAACmB,IAAV,CAAeD,UANF;;AAOrB;AACAF,EAAAA,UAAU,EAAEhB,SAAS,CAACmB;AARD,CAAvB;AAWAN,UAAU,CAACL,YAAX,GAA0B;AACxBQ,EAAAA,UAAU,EAAE;AADY,CAA1B;AAIA,SAASZ,aAAT,EAAwBM,qBAAxB;AACA,eAAeG,UAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FocusOn } from 'react-focus-on';\nimport Portal from './Portal';\nimport { ModalContextProvider } from './ModalContext';\n\n// istanbul ignore next\nconst ModalBackdrop = ({ onClick }) => (\n\n  // Focus lock is handling the keyboard eventfor us. Though adding a role=\"button\"\n  // would be appropriate, modal dialogs provide their own close button and this\n  // would create a duplicative control.\n  // eslint-disable-next-line jsx-a11y/no-static-element-interactions, jsx-a11y/click-events-have-key-events\n  <div className=\"pgn__modal-backdrop\" onClick={onClick} />\n);\n\nModalBackdrop.propTypes = {\n  onClick: PropTypes.func,\n};\n\nModalBackdrop.defaultProps = {\n  onClick: undefined,\n};\n\n// istanbul ignore next\nconst ModalContentContainer = ({ children }) => (\n  <div className=\"pgn__modal-content-container\">{children}</div>\n);\n\nModalContentContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nModalContentContainer.defaultProps = {\n  children: null,\n};\n\n/**\n * The ModalLayer should be used for any component that wishes to engage the user\n * in a \"mode\" where a layer on top of the application is interactive while the\n * rest of the application is made non-interactive. The assumption made by this\n * component is that if a modal object is visible then it is \"enabled\"\n */\nconst ModalLayer = ({\n  children, onClose, isOpen, isBlocking,\n}) => {\n  if (!isOpen) {\n    return null;\n  }\n\n  const onClickOutside = !isBlocking ? onClose : null;\n\n  return (\n    <ModalContextProvider onClose={onClose} isOpen={isOpen} isBlocking={isBlocking}>\n      <Portal>\n        <FocusOn\n          allowPinchZoom\n          scrollLock\n          enabled={isOpen}\n          onEscapeKey={onClose}\n          onClickOutside={onClickOutside}\n          className=\"pgn__modal-layer\"\n        >\n          <ModalContentContainer>\n            <ModalBackdrop onClick={onClickOutside} />\n            {children}\n          </ModalContentContainer>\n        </FocusOn>\n      </Portal>\n    </ModalContextProvider>\n  );\n};\n\nModalLayer.propTypes = {\n  /** Specifies the contents of the modal */\n  children: PropTypes.node.isRequired,\n  /** A callback function for when the modal is dismissed */\n  onClose: PropTypes.func.isRequired,\n  /** Is the modal dialog open or closed */\n  isOpen: PropTypes.bool.isRequired,\n  /** Prevent clicking on the backdrop to close the modal */\n  isBlocking: PropTypes.bool,\n};\n\nModalLayer.defaultProps = {\n  isBlocking: false,\n};\n\nexport { ModalBackdrop, ModalContentContainer };\nexport default ModalLayer;\n"],"file":"ModalLayer.js"}