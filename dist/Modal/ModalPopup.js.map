{"version":3,"sources":["../../src/Modal/ModalPopup.jsx"],"names":["React","PropTypes","FocusOn","Portal","PopperElement","ModalContextProvider","ModalPopup","children","onClose","isOpen","positionRef","isBlocking","withPortal","placement","popperProps","RootComponent","Fragment","propTypes","node","isRequired","func","bool","oneOfType","shape","current","defaultProps"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,oBAAT,QAAqC,gBAArC;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAEb;AAAA,MADJC,QACI,QADJA,QACI;AAAA,MADMC,OACN,QADMA,OACN;AAAA,MADeC,MACf,QADeA,MACf;AAAA,MADuBC,WACvB,QADuBA,WACvB;AAAA,MADoCC,UACpC,QADoCA,UACpC;AAAA,MADgDC,UAChD,QADgDA,UAChD;AAAA,MAD4DC,SAC5D,QAD4DA,SAC5D;AAAA,MAD0EC,WAC1E;;AACJ,MAAMC,aAAa,GAAGH,UAAU,GAAGT,MAAH,GAAYH,KAAK,CAACgB,QAAlD;AAEA,sBACE,oBAAC,oBAAD;AAAsB,IAAA,OAAO,EAAER,OAA/B;AAAwC,IAAA,MAAM,EAAEC,MAAhD;AAAwD,IAAA,UAAU,EAAEE;AAApE,kBACE,oBAAC,aAAD,qBACE,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAED,WAAvB;AAAoC,IAAA,SAAS,EAAEG;AAA/C,KAA8DC,WAA9D,gBACE,oBAAC,OAAD;AACE,IAAA,UAAU,EAAE,KADd;AAEE,IAAA,OAAO,EAAEL,MAFX;AAGE,IAAA,WAAW,EAAED,OAHf;AAIE,IAAA,cAAc,EAAEA;AAJlB,KAMGC,MAAM,iBACL,0CACGF,QADH,CAPJ,CADF,CADF,CADF,CADF;AAoBD,CAzBD;;AA2BAD,UAAU,CAACW,SAAX,GAAuB;AACrB;AACAV,EAAAA,QAAQ,EAAEN,SAAS,CAACiB,IAAV,CAAeC,UAFJ;;AAGrB;AACAX,EAAAA,OAAO,EAAEP,SAAS,CAACmB,IAAV,CAAeD,UAJH;;AAKrB;AACAV,EAAAA,MAAM,EAAER,SAAS,CAACoB,IAAV,CAAeF,UANF;;AAOrB;AACAR,EAAAA,UAAU,EAAEV,SAAS,CAACoB,IARD;;AASrB;AACAT,EAAAA,UAAU,EAAEX,SAAS,CAACoB,IAVD;AAWrB;;AACA;AACAX,EAAAA,WAAW,EAAET,SAAS,CAACqB,SAAV,CAAoB,CAC/BrB,SAAS,CAACmB,IADqB,EAE/BnB,SAAS,CAACsB,KAAV,CAAgB;AAAEC,IAAAA,OAAO,EAAEvB,SAAS,CAACsB,KAAV,CAAgB,EAAhB;AAAX,GAAhB,CAF+B,CAApB,EAGVJ,UAhBkB;;AAiBrB;AACAN,EAAAA,SAAS,EAAET,aAAa,CAACa,SAAd,CAAwBJ;AAlBd,CAAvB;AAqBAP,UAAU,CAACmB,YAAX,GAA0B;AACxBd,EAAAA,UAAU,EAAE,KADY;AAExBC,EAAAA,UAAU,EAAE,KAFY;AAGxBC,EAAAA,SAAS,EAAE;AAHa,CAA1B;AAMA,eAAeP,UAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FocusOn } from 'react-focus-on';\nimport Portal from './Portal';\nimport PopperElement from './PopperElement';\nimport { ModalContextProvider } from './ModalContext';\n\nconst ModalPopup = ({\n  children, onClose, isOpen, positionRef, isBlocking, withPortal, placement, ...popperProps\n}) => {\n  const RootComponent = withPortal ? Portal : React.Fragment;\n\n  return (\n    <ModalContextProvider onClose={onClose} isOpen={isOpen} isBlocking={isBlocking}>\n      <RootComponent>\n        <PopperElement target={positionRef} placement={placement} {...popperProps}>\n          <FocusOn\n            scrollLock={false}\n            enabled={isOpen}\n            onEscapeKey={onClose}\n            onClickOutside={onClose}\n          >\n            {isOpen && (\n              <>\n                {children}\n              </>\n            )}\n          </FocusOn>\n        </PopperElement>\n      </RootComponent>\n    </ModalContextProvider>\n  );\n};\n\nModalPopup.propTypes = {\n  /** Specifies the contents of the modal */\n  children: PropTypes.node.isRequired,\n  /** A callback function for when the modal is dismissed */\n  onClose: PropTypes.func.isRequired,\n  /** Is the modal dialog open or closed */\n  isOpen: PropTypes.bool.isRequired,\n  /** Prevent clicking on the backdrop to close the modal */\n  isBlocking: PropTypes.bool,\n  /** Insert modal into a different location in the DOM */\n  withPortal: PropTypes.bool,\n  // This type: https://stackoverflow.com/questions/48007326/what-is-the-correct-proptype-for-a-ref-in-react\n  /** Specifies an element near which the modal should be displayed */\n  positionRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.shape({}) }),\n  ]).isRequired,\n  /** Specifies position according to the element that the ``positionRef`` prop points to */\n  placement: PopperElement.propTypes.placement,\n};\n\nModalPopup.defaultProps = {\n  isBlocking: false,\n  withPortal: false,\n  placement: 'bottom-start',\n};\n\nexport default ModalPopup;\n"],"file":"ModalPopup.js"}