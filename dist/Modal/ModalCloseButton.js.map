{"version":3,"sources":["../../src/Modal/ModalCloseButton.jsx"],"names":["React","useContext","PropTypes","classNames","Button","ModalContext","ModalCloseButton","forwardRef","ref","as","children","props","onClose","type","componentProps","className","onClick","createElement","propTypes","elementType","node","string","func","defaultProps","undefined"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,IAAMC,gBAAgB,gBAAGN,KAAK,CAACO,UAAN,CAAiB,gBAA6BC,GAA7B,EAAqC;AAAA,MAAlCC,EAAkC,QAAlCA,EAAkC;AAAA,MAA9BC,QAA8B,QAA9BA,QAA8B;AAAA,MAAjBC,KAAiB;;AAC7E,oBAAoBV,UAAU,CAACI,YAAD,CAA9B;AAAA,MAAQO,OAAR,eAAQA,OAAR;;AACA,MAAMC,IAAI,GAAGJ,EAAb;;AACA,MAAMK,cAAc,mCACfH,KADe;AAElBI,IAAAA,SAAS,EAAEZ,UAAU,CAAC,yBAAD,EAA4BQ,KAAK,CAACI,SAAlC,CAFH;AAGlBC,IAAAA,OAAO,EAAE,mBAAM;AACbJ,MAAAA,OAAO;;AACP,UAAID,KAAK,CAACK,OAAV,EAAmB;AACjBL,QAAAA,KAAK,CAACK,OAAN;AACD;AACF,KARiB;AASlBR,IAAAA,GAAG,EAAHA;AATkB,IAApB,CAH6E,CAe7E;AACA;;;AACA,sBAAOR,KAAK,CAACiB,aAAN,CAAoBJ,IAApB,EAA0BC,cAA1B,EAA0CJ,QAA1C,CAAP;AACD,CAlBwB,CAAzB;AAoBAJ,gBAAgB,CAACY,SAAjB,GAA6B;AAC3B;AACAT,EAAAA,EAAE,EAAEP,SAAS,CAACiB,WAFa;;AAG3B;AACAT,EAAAA,QAAQ,EAAER,SAAS,CAACkB,IAJO;;AAK3B;AACAL,EAAAA,SAAS,EAAEb,SAAS,CAACmB,MANM;;AAO3B;AACAL,EAAAA,OAAO,EAAEd,SAAS,CAACoB;AARQ,CAA7B;AAWAhB,gBAAgB,CAACiB,YAAjB,GAAgC;AAC9Bd,EAAAA,EAAE,EAAEL,MAD0B;AAE9BY,EAAAA,OAAO,EAAEQ,SAFqB;AAG9BT,EAAAA,SAAS,EAAES,SAHmB;AAI9Bd,EAAAA,QAAQ,EAAE;AAJoB,CAAhC;AAOA,eAAeJ,gBAAf","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Button from '../Button';\nimport ModalContext from './ModalContext';\n\nconst ModalCloseButton = React.forwardRef(({ as, children, ...props }, ref) => {\n  const { onClose } = useContext(ModalContext);\n  const type = as;\n  const componentProps = {\n    ...props,\n    className: classNames('pgn__modal-close-button', props.className),\n    onClick: () => {\n      onClose();\n      if (props.onClick) {\n        props.onClick();\n      }\n    },\n    ref,\n  };\n\n  // Use the non-jsx syntax to create this element so we can more\n  // finely control the component type (defaulted to Button via defaultProps)\n  return React.createElement(type, componentProps, children);\n});\n\nModalCloseButton.propTypes = {\n  /** Specifies the base element */\n  as: PropTypes.elementType,\n  /** Specifies the content of the button */\n  children: PropTypes.node,\n  /** Specifies class name to append to the base element */\n  className: PropTypes.string,\n  /** Specifies the callback function when the close button is clicked */\n  onClick: PropTypes.func,\n};\n\nModalCloseButton.defaultProps = {\n  as: Button,\n  onClick: undefined,\n  className: undefined,\n  children: null,\n};\n\nexport default ModalCloseButton;\n"],"file":"ModalCloseButton.js"}